{"items":[{"userId":"kamem","body":"<p>site: <a href=\"http://develo.org/2014/04/29/1614.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">http://develo.org/2014/04/29/1614.html</a></p>\n\n<p>サイトをpjaxを使って実装して思ったのですが、ページ移動がものすごくはやくて快適！今後サイト新しく作るときはpushStateとAjaxの組み合わせ検討してみてもよいかなぁって思いました！</p>\n\n<h2>\n<span id=\"pushstateとは\" class=\"fragment\"></span><a href=\"#pushstate%E3%81%A8%E3%81%AF\"><i class=\"fa fa-link\"></i></a>pushStateとは</h2>\n\n<p>Ajaxなどで、非同期なサイトを作る際に、<br>\nアドレスが変更されない問題をjsで解消してくれる便利なやつです。<br>\n少し前の話だとFlashサイトを作るときに#（ハッシュ）をつけてurlを管理したりしていました。<br>\npushStateを使うと普通にページ遷移しているようにアドレスを変更することができます！</p>\n\n<h2>\n<span id=\"ajaxとは\" class=\"fragment\"></span><a href=\"#ajax%E3%81%A8%E3%81%AF\"><i class=\"fa fa-link\"></i></a>Ajaxとは</h2>\n\n<p>ページを遷移せずに情報だけを非同期でとってきてサイトに描画する仕組みのことです。</p>\n\n<h2>\n<span id=\"pjax\" class=\"fragment\"></span><a href=\"#pjax\"><i class=\"fa fa-link\"></i></a>pjax</h2>\n\n<p>pushStateとAjax 2つを合わせてつくった仕組みのことです。</p>\n\n<h2>\n<span id=\"実際に作るにあたり\" class=\"fragment\"></span><a href=\"#%E5%AE%9F%E9%9A%9B%E3%81%AB%E4%BD%9C%E3%82%8B%E3%81%AB%E3%81%82%E3%81%9F%E3%82%8A\"><i class=\"fa fa-link\"></i></a>実際に作るにあたり</h2>\n\n<p>下記を参考にさせていただきました。<br>\njquery-pjaxというプラグインを使うと簡単に実装することができます。</p>\n\n<ul>\n<li><a href=\"http://s3pw.com/milestoner/2012/08/pushstate-popstate/\" rel=\"nofollow noopener\" target=\"_blank\">pushState / popStateの解説とQrefyにおける実践コード</a></li>\n<li><a href=\"https://github.com/defunkt/jquery-pjax/\" rel=\"nofollow noopener\" target=\"_blank\">defunkt/jquery-pjax</a></li>\n</ul>\n\n<h2>\n<span id=\"使い方\" class=\"fragment\"></span><a href=\"#%E4%BD%BF%E3%81%84%E6%96%B9\"><i class=\"fa fa-link\"></i></a>使い方</h2>\n\n<p>下記のような感じで実行するだけで実装できます。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$(document).pjax('a', {\n    container:'main',  // 現在のページの置き換えたいエリアのタグを指定\n    fragment: 'main', // 読み込み先ページの置き換えたいエリアのタグを指定\n    timeout: 30000 // タイムアウトする時間（タイムアウトした場合は通常のリンクでの移動になります。）\n});\n</pre></div></div>\n\n<p>このコードは「a」タグをクリックした時に現在のページのmain要素部分を、読み込み先のhtmlのmain要素に置き換える。といった動きになります。</p>\n\n<p>timeoutを設定しているのはプラグインの初期のtimeout設定が650msと少し短いため3秒はtimeoutしないように指定しなおしています。</p>\n\n<h3>\n<span id=\"ローディング時の処理をする\" class=\"fragment\"></span><a href=\"#%E3%83%AD%E3%83%BC%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0%E6%99%82%E3%81%AE%E5%87%A6%E7%90%86%E3%82%92%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>ローディング時の処理をする。</h3>\n\n<h4>\n<span id=\"pjaxsend\" class=\"fragment\"></span><a href=\"#pjaxsend\"><i class=\"fa fa-link\"></i></a>pjax:send</h4>\n\n<p>ajaxの処理が始まった時点で実行されます。<br>\nこの時にローディング時の処理をかきます。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$(document).on('pjax:send', function(e) {\n    $('body').addClass('loading');\n});\n</pre></div></div>\n\n<h4>\n<span id=\"pjaxcomplete\" class=\"fragment\"></span><a href=\"#pjaxcomplete\"><i class=\"fa fa-link\"></i></a>pjax:complete</h4>\n\n<p>ajaxの処理が終わった時点で実行されます。ローディングが終わった時の処理をかきます。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$(document).on('pjax:complete', function(e,data) {\n    $('body').removeClass('loading');\n});\n</pre></div></div>\n\n<p>こんな感じで書くと実装できるので、割と簡単ですね！</p>\n\n<h2>\n<span id=\"応用\" class=\"fragment\"></span><a href=\"#%E5%BF%9C%E7%94%A8\"><i class=\"fa fa-link\"></i></a>応用</h2>\n\n<h3>\n<span id=\"cssシグネチャを使っている場合の対処法\" class=\"fragment\"></span><a href=\"#css%E3%82%B7%E3%82%B0%E3%83%8D%E3%83%81%E3%83%A3%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%84%E3%82%8B%E5%A0%B4%E5%90%88%E3%81%AE%E5%AF%BE%E5%87%A6%E6%B3%95\"><i class=\"fa fa-link\"></i></a>CSSシグネチャを使っている場合の対処法</h3>\n\n<p>CSSシグネチャというのはbodyにclassやidをつけてcssで管理する方法です。</p>\n\n<p>pjaxのプラグインを使うと指定エリア外のbodyのclassやidは変更してくれません。そのためページごとのCSSが反映されないという現象がおきてしまいます。</p>\n\n<h4>\n<span id=\"解決方法--pjaxcomplete時にbodyの属性を変更する\" class=\"fragment\"></span><a href=\"#%E8%A7%A3%E6%B1%BA%E6%96%B9%E6%B3%95--pjaxcomplete%E6%99%82%E3%81%ABbody%E3%81%AE%E5%B1%9E%E6%80%A7%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>解決方法 : pjax:complete時にbodyの属性を変更する</h4>\n\n<p>読み込み先のテキスト情報を元に、範囲指定して特定のテキストを取得する正規表現を使いbodyの情報を変更します。（<a href=\"http://develo.org/2014/04/24/1219.html\" rel=\"nofollow noopener\" target=\"_blank\">特定の文字列から文字列の範囲内の文字を取得する正規表現</a>）</p>\n\n<p>RegExp.$1で最初にマッチした値を取ってくることができます。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$(document).on('pjax:complete', function(e,data) {\n    var data = data.responseText;   //2つ目の引き数のresponseTextの中身に読み込みさきのtextデータが含まれています。\n\n    //responseTextの内容を正規表現を使うことによりbodyのclassとidを変更する。\n    //bodyのID\n    data.match(/id=\"([^\\\"]+)/);\n    var value = RegExp.$1;\n    $('body')[0].id = value;\n    //bodyのClass\n    data.match(/class=\"([^\\\"]+)/);\n    value = RegExp.$1;\n    $('body')[0].className = value;\n});\n</pre></div></div>\n\n<p>こんな感じでプラグインで指定した範囲以外のタグも変更することができます。これを使<br>\nえば、keywordsやdescriptionやogタグを変更することもできます。</p>\n\n<h2>\n<span id=\"ブラウザバック時の再読み込み\" class=\"fragment\"></span><a href=\"#%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%83%90%E3%83%83%E3%82%AF%E6%99%82%E3%81%AE%E5%86%8D%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%81%BF\"><i class=\"fa fa-link\"></i></a>ブラウザバック時の再読み込み</h2>\n\n<p>ブラウザバック時にcssシグネチャを使っていると同じ現象がおきてしまいます。</p>\n\n<p>なので・・どうしようと迷ったのですが・・。</p>\n\n<p>ブラウザバック時、キャッシュを読みにいく処理が入っているようで、その部分を変更しブラウザバック時にも再度読み込み直すようにプラグイン事態を変更しちゃいました。何か他にプラグインを変更せずにすめば良いと思ったのですが・・。</p>\n\n<p>440 〜 450行目あたりをコメントアウトして変更しちゃいます。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>/*\n    if (contents) {\n        container.trigger('pjax:start', [null, options, contents])\n\n        if (state.title) document.title = state.title\n        container.html(contents)\n        pjax.state = state\n\n        container.trigger('pjax:end', [null, options, contents])\n    } else {\n        pjax(options)\n    }\n*/\npjax(options)\n</pre></div></div>\n\n<p>こんな感じでキャッシュがある場合はキャッシュを使って変更している部分を毎回読み込むように変更しちゃいます！</p>\n\n<p>これでひと通りCSSシグネチャを使った場合でもpjaxプラグインで実装することができました！</p>\n","updated":1568652596,"tags":["JavaScript","jQuery","正規表現"],"uuid":"b0c8f69044556865027f","title":"pushStateとAjaxの組み合わせpjax","created":1400810369},{"created":1542644130,"userId":"kamem","body":"\n<h2>\n<span id=\"google-cloud-functions\" class=\"fragment\"></span><a href=\"#google-cloud-functions\"><i class=\"fa fa-link\"></i></a>Google Cloud Functions</h2>\n\n<p>簡単に言うとGCP上で Javascriptで書いた関数を実行するサービスです。Nodeを使った書くことができます。</p>\n\n<p>詳しくは下記のサイトなどをみてください。<br>\n<a href=\"https://www.topgate.co.jp/gcp14-using-serverless-architecture-by-cloud-functions#cloud-functions\" rel=\"nofollow noopener\" target=\"_blank\">【GCP入門編・第14回】 Cloud Functions を使ってサーバレスアーキテクチャを体験しよう！</a></p>\n\n<h2>\n<span id=\"準備\" class=\"fragment\"></span><a href=\"#%E6%BA%96%E5%82%99\"><i class=\"fa fa-link\"></i></a>準備</h2>\n\n<h3>\n<span id=\"serverless-frameworkを使う\" class=\"fragment\"></span><a href=\"#serverless-framework%E3%82%92%E4%BD%BF%E3%81%86\"><i class=\"fa fa-link\"></i></a>Serverless Frameworkを使う</h3>\n\n<p>Serverless Frameworkを使うと簡単な感じでcloud functionsを使うことができるみたいで便利！</p>\n\n<ul>\n<li><a href=\"https://qiita.com/suzukenz/items/a9811461056956ee1a3b\" id=\"reference-d414764e8c04a1da7a3a\">Google Cloud Functions を Serverless Framework で使う</a></li>\n<li><a href=\"https://qiita.com/keitakn/items/879bb8c075db802906df\" id=\"reference-974957e7ff409b6e66f2\">Serverless Frameworkのインストールと初期設定</a></li>\n</ul>\n\n<h4>\n<span id=\"google-cloud-platform-のサービスアカウントキーを作成しておこう\" class=\"fragment\"></span><a href=\"#google-cloud-platform-%E3%81%AE%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%82%A2%E3%82%AB%E3%82%A6%E3%83%B3%E3%83%88%E3%82%AD%E3%83%BC%E3%82%92%E4%BD%9C%E6%88%90%E3%81%97%E3%81%A6%E3%81%8A%E3%81%93%E3%81%86\"><i class=\"fa fa-link\"></i></a>Google Cloud Platform のサービスアカウントキーを作成しておこう</h4>\n\n<p>下記サイトをみて手順通りに勧めていけばアカウントキーを作成できると思います。</p>\n\n<ul>\n<li><a href=\"https://www.magellanic-clouds.com/blocks/guide/create-gcp-service-account-key/\" rel=\"nofollow noopener\" target=\"_blank\">Google Cloud Platform のサービスアカウントキーを作成する</a></li>\n</ul>\n\n<h4>\n<span id=\"serverless-framework注意点\" class=\"fragment\"></span><a href=\"#serverless-framework%E6%B3%A8%E6%84%8F%E7%82%B9\"><i class=\"fa fa-link\"></i></a>Serverless Framework注意点</h4>\n\n<ul>\n<li><a href=\"https://serverless.com/framework/docs/providers/google/guide/credentials/\" rel=\"nofollow noopener\" target=\"_blank\">Google - 認証情報 </a></li>\n</ul>\n\n<p><code>serverless.yml</code>を用意する際に、特にこの部分を忘れないでください！</p>\n\n<blockquote>\n<p>Save the keyfile somewhere secure. We recommend making a folder in your root folder and putting it there. Like this, ~/.gcloud/keyfile.json. You can change the file name from keyfile to anything. Remember the path you saved it to.</p>\n</blockquote>\n\n<p>保存したkeyfileを自分のローカルの任意の場所（ルートディレクトリなど）に置くことを推奨しています。<br>\n<code>~/.gcloud/keyfile.json</code>のように配置して、serverless.yml<code>内の</code>credentials: ~/.gcloud/keyfile.json`と記載しましょう。</p>\n\n<h5>\n<span id=\"google-cloud-deployment-manager-v2-apiは有効にしておきましょう\" class=\"fragment\"></span><a href=\"#google-cloud-deployment-manager-v2-api%E3%81%AF%E6%9C%89%E5%8A%B9%E3%81%AB%E3%81%97%E3%81%A6%E3%81%8A%E3%81%8D%E3%81%BE%E3%81%97%E3%82%87%E3%81%86\"><i class=\"fa fa-link\"></i></a>Google Cloud Deployment Manager V2 APIは有効にしておきましょう。</h5>\n\n<p><code>serverless deploy</code>で怒られたらエラーに書いてあるアドレスにとんでapiを有効にしましょう。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>Error: Access Not Configured. Google Cloud Deployment Manager API has not been used in project ******* before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/deploymentmanager.googleapis.com/overview?project=******* then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry.\n</pre></div></div>\n\n<h2>\n<span id=\"dropboxのwebhookについて\" class=\"fragment\"></span><a href=\"#dropbox%E3%81%AEwebhook%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\"><i class=\"fa fa-link\"></i></a>DropboxのWebhookについて</h2>\n\n<p>公式の説明: ttps://<a href=\"http://www.dropbox.com/developers/reference/webhooks\" rel=\"nofollow noopener\" target=\"_blank\">www.dropbox.com/developers/reference/webhooks</a><br>\n個々のアプリを指定してwebhookを設定しよう <a href=\"https://www.dropbox.com/developers/apps\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://www.dropbox.com/developers/apps</a></p>\n\n<h2>\n<span id=\"challengeをsendでそのまま返す\" class=\"fragment\"></span><a href=\"#challenge%E3%82%92send%E3%81%A7%E3%81%9D%E3%81%AE%E3%81%BE%E3%81%BE%E8%BF%94%E3%81%99\"><i class=\"fa fa-link\"></i></a>challengeをsendでそのまま返す</h2>\n\n<p>返してあげないと認証うまく行ってってことでエラーになるためchallengeをそのままsendでお繰り返してあげるとうまくいきます。</p>\n\n<h3>\n<span id=\"例\" class=\"fragment\"></span><a href=\"#%E4%BE%8B\"><i class=\"fa fa-link\"></i></a>例</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>export function test(req, res) {\n  res.status(200).send(req.query.challenge);\n}\n</pre></div></div>\n\n<h3>\n<span id=\"reqbodyには下記のようにデータが入っています\" class=\"fragment\"></span><a href=\"#reqbody%E3%81%AB%E3%81%AF%E4%B8%8B%E8%A8%98%E3%81%AE%E3%82%88%E3%81%86%E3%81%AB%E3%83%87%E3%83%BC%E3%82%BF%E3%81%8C%E5%85%A5%E3%81%A3%E3%81%A6%E3%81%84%E3%81%BE%E3%81%99\"><i class=\"fa fa-link\"></i></a><code>req.body</code>には下記のようにデータが入っています</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>{\n    \"list_folder\"：{\n        \"accounts\"：[\n            \"dbid：AAH4f99T0taONIb-OurWxbNQ6ywGRopQngc\"、\n            ...\n        ]\n    }、\n    \"delta\"：{\n        \"ユーザー\"：[\n            12345678、\n            23456789、\n            ...\n        ]\n    }\n}\n</pre></div></div>\n\n<h3>\n<span id=\"参考\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83\"><i class=\"fa fa-link\"></i></a>参考</h3>\n\n<ul>\n<li><a href=\"https://tanaka0325.github.io/post/using_dropbox_webhook_api/\" rel=\"nofollow noopener\" target=\"_blank\">Dropbox Webhook API を使う</a></li>\n<li><a href=\"https://qiita.com/TakamiChie/items/6b21652afa7018ae6b27#%E4%BB%A5%E9%99%8D%E3%81%AEwebhook%E3%82%92%E5%8F%97%E3%81%91%E3%82%8B\" id=\"reference-b04924f9e929c8416f63\">Dropbox APIを使ってDropboxのフォルダを操作する（調査中）</a></li>\n</ul>\n\n<p>少し調べたのをまとめました。<br>\n他にも色々調べたり実際にものができたら共有予定です。</p>\n\n<p>実際にDropbox PaperのWebhookを使いたかったのですが。<br>\nPaperには対応していないのですかね。。</p>\n","updated":1542644130,"tags":["gcp"],"uuid":"9a566dedd3b22129bffc","title":"DropboxのWebhookのurlをGoogle Cloud Functionsで作ったapiを使ってやってみる"},{"userId":"kamem","body":"<p>スクロールによってさまざまなCSSを変更することができます。<br>\nまたプラグインのオプションをdata属性に設定できるjs（<a href=\"https://github.com/kamem/jquery.dataExtend\" rel=\"nofollow noopener\" target=\"_blank\">jquery.dataExtend</a>）を使うとdata属性に指定するだけで効果を与えることができます。</p>\n\n<p>以前も同じようなプラグインを作ってはいたのですが、複雑になりがちだったため<br>\nなるべくシンプルに、再現したいと思ったことが工夫次第でできる作りにしたいと思い作り直しました。</p>\n\n<p>GitHub: <a href=\"https://github.com/kamem/jquery.scrollParallax\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/kamem/jquery.scrollParallax</a></p>\n\n<h2>\n<span id=\"description\" class=\"fragment\"></span><a href=\"#description\"><i class=\"fa fa-link\"></i></a>Description</h2>\n\n<p>このプラグインには3つの機能があります。</p>\n\n<ol>\n<li>任意の位置を通過したときに関数を実行する</li>\n<li>スクロール量に応じてcssを変化させる</li>\n<li>移動距離に応じてcssを変化させる</li>\n</ol>\n\n<h2>\n<span id=\"demo\" class=\"fragment\"></span><a href=\"#demo\"><i class=\"fa fa-link\"></i></a>DEMO</h2>\n\n<ul>\n<li><a href=\"http://github.develo.org/jquery.scrollParallax/example/y.html\" rel=\"nofollow noopener\" target=\"_blank\">y scroll</a></li>\n</ul>\n\n<h2>\n<span id=\"requirement\" class=\"fragment\"></span><a href=\"#requirement\"><i class=\"fa fa-link\"></i></a>Requirement</h2>\n\n<ul>\n<li>jquery</li>\n<li><a href=\"https://github.com/kamem/jquery.dataExtend\" rel=\"nofollow noopener\" target=\"_blank\">jquery.dataExtend</a></li>\n</ul>\n\n<p>※ jquery.dataExtendはjqueryプラグイン用の記述をdata属性に持たせることができるプラグインです。<br>\nこれを使うことによってjsをあまり書かずにparallax効果を実現することができます。</p>\n\n<p>jquery.dataExtendの詳しい説明は下記を見てください。</p>\n\n<ul>\n<li>en: <a href=\"https://github.com/kamem/jquery.dataExtend\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/kamem/jquery.dataExtend</a>\n</li>\n<li>ja: <a href=\"http://qiita.com/kamem/items/94e974a0212396d97ed7\" class=\"autolink\" id=\"reference-6a51c9189fe98e91c3cf\">http://qiita.com/kamem/items/94e974a0212396d97ed7</a>\n</li>\n</ul>\n\n<h2>\n<span id=\"install\" class=\"fragment\"></span><a href=\"#install\"><i class=\"fa fa-link\"></i></a>Install</h2>\n\n<h3>\n<span id=\"bower\" class=\"fragment\"></span><a href=\"#bower\"><i class=\"fa fa-link\"></i></a>Bower</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>bower install jquery.scrollParallax\n</pre></div></div>\n\n<h3>\n<span id=\"npm\" class=\"fragment\"></span><a href=\"#npm\"><i class=\"fa fa-link\"></i></a>Npm</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>npm install jquery.scroll-parallax\n</pre></div></div>\n\n<h2>\n<span id=\"usage\" class=\"fragment\"></span><a href=\"#usage\"><i class=\"fa fa-link\"></i></a>Usage</h2>\n\n<h3>\n<span id=\"初期設定\" class=\"fragment\"></span><a href=\"#%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A\"><i class=\"fa fa-link\"></i></a>初期設定</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$.parallax({\n    stage: window,\n    direction: 'y',\n    debugMode: true\n});\n</pre></div></div>\n\n<table>\n<thead>\n<tr>\n<th style=\"text-align: left\">option name</th>\n<th style=\"text-align: left\">Descriptions</th>\n<th style=\"text-align: left\">default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: left\">stage</td>\n<td style=\"text-align: left\">スクロールさせたいwindow</td>\n<td style=\"text-align: left\"><code>window</code></td>\n</tr>\n<tr>\n<td style=\"text-align: left\">direction</td>\n<td style=\"text-align: left\">スクロールの方向</td>\n<td style=\"text-align: left\"><code>'y'</code></td>\n</tr>\n<tr>\n<td style=\"text-align: left\">debugMode</td>\n<td style=\"text-align: left\">デバック用にスクロール量を表示、timingでの実行位置を表示</td>\n<td style=\"text-align: left\"><code>false</code></td>\n</tr>\n</tbody>\n</table>\n\n<h3>\n<span id=\"jquerydataextendを使用する場合\" class=\"fragment\"></span><a href=\"#jquerydataextend%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%99%E3%82%8B%E5%A0%B4%E5%90%88\"><i class=\"fa fa-link\"></i></a><code>jquery.dataExtend</code>を使用する場合</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$('.parallax-timing').dataExtend('parallaxTiming');\n$('.parallax-speed').dataExtend('parallaxSpeed');\n$('.parallax-fit').dataExtend('parallaxFit');\n</pre></div></div>\n\n<p>classは任意の値を入れてください。<br>\nこれにより上記のclassをつけたタグにはdata属性でoptionを指定することができます。</p>\n\n<h3>\n<span id=\"timing\" class=\"fragment\"></span><a href=\"#timing\"><i class=\"fa fa-link\"></i></a>timing</h3>\n\n<p>任意の位置にスクロール量が来た時に関数を実行する</p>\n\n<h4>\n<span id=\"初期設定-1\" class=\"fragment\"></span><a href=\"#%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A-1\"><i class=\"fa fa-link\"></i></a>初期設定</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$.parallaxTiming({\n    timingLinePercent: 50\n});\n</pre></div></div>\n\n<table>\n<thead>\n<tr>\n<th style=\"text-align: left\">option name</th>\n<th style=\"text-align: left\">Descriptions</th>\n<th style=\"text-align: left\">default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: left\">timingLinePercent</td>\n<td style=\"text-align: left\">タイミングの位置をどこに設定するか（windowの幅での割合）</td>\n<td style=\"text-align: left\"><code>50</code></td>\n</tr>\n</tbody>\n</table>\n\n<h4>\n<span id=\"動作\" class=\"fragment\"></span><a href=\"#%E5%8B%95%E4%BD%9C\"><i class=\"fa fa-link\"></i></a>動作</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$(el).parallaxTiming(\n    fixScrollPosition: null,\n    start: null,\n    end: null,\n    toggle: []\n);\n</pre></div></div>\n\n<table>\n<thead>\n<tr>\n<th style=\"text-align: left\">option name</th>\n<th style=\"text-align: left\">Descriptions</th>\n<th style=\"text-align: left\">default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: left\">fixScrollPosition</td>\n<td style=\"text-align: left\">スクロール位置がこの位置にきた時に関数が実行される、もしも値が<code>null</code>の場合は指定したタグのoffset().topを代入します。</td>\n<td style=\"text-align: left\"><code>null</code></td>\n</tr>\n<tr>\n<td style=\"text-align: left\">start</td>\n<td style=\"text-align: left\">上から下に向かって通過した場合に実行される関数</td>\n<td style=\"text-align: left\"><code>null</code></td>\n</tr>\n<tr>\n<td style=\"text-align: left\">end</td>\n<td style=\"text-align: left\">下から上に向かって通過した場合に実行される関数</td>\n<td style=\"text-align: left\"><code>null</code></td>\n</tr>\n<tr>\n<td style=\"text-align: left\">toggle</td>\n<td style=\"text-align: left\">上から下に向かって通過した場合: 配列の1番目を実行, 下から上に向かって通過した場合: 配列の2番目を実行</td>\n<td style=\"text-align: left\"><code>[]</code></td>\n</tr>\n</tbody>\n</table>\n\n<h4>\n<span id=\"例\" class=\"fragment\"></span><a href=\"#%E4%BE%8B\"><i class=\"fa fa-link\"></i></a>例）</h4>\n\n<p>2つとも同じ意味です</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$(el).parallaxTiming({\n    start: function(e) {\n        console.log('start')\n    },\n    end: function(e) {\n        console.log('end')\n    }\n});\n\n$(el).parallaxTiming({\n    toggle: [\n        function(e) {\n            console.log('start')\n        },\n        function(e) {\n            console.log('end')\n        }\n    ]\n});\n</pre></div></div>\n\n<p>※ 引数に<code>isOver</code>と<code>target</code>が返されます。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>function(e) {\n    console.log(e.isOver); //ラインを超えているか\n    console.log(e.target); //どのコンテンツの関数が反応したのか\n}\n</pre></div></div>\n\n<h4>\n<span id=\"例jquerydataextendを使用した場合\" class=\"fragment\"></span><a href=\"#%E4%BE%8Bjquerydataextend%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%9F%E5%A0%B4%E5%90%88\"><i class=\"fa fa-link\"></i></a>例）<code>jquery.dataExtend</code>を使用した場合</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>&lt;p class=\"parallax-timing\" data-start=\"start\" data-end=\"end\"&gt;Test&lt;/p&gt;\n</pre></div></div>\n\n<p>このタグの位置を<code>fixScrollPosition</code>で指定した位置が通過した場合に関数を実行します。<br>\n※ fixScrollPositionを省略している場合は指定したタグのoffset().topが基準になります。</p>\n\n<ul>\n<li>上から下に通過した場合に<code>global</code>にある<code>start</code>を実行</li>\n<li>下から上に通過した場合に<code>global</code>にある<code>end</code>を実行</li>\n</ul>\n\n<h3>\n<span id=\"speed\" class=\"fragment\"></span><a href=\"#speed\"><i class=\"fa fa-link\"></i></a>speed</h3>\n\n<p>スクロール量に応じてcssを変化させる</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$(el).parallaxSpeed({\n    style: 'top',\n    speed: 2,\n    min: -999999,\n    max: 999999,\n    fixStyleValue: String($element.css(style)),\n    fixScrollPosition: 0\n});\n</pre></div></div>\n\n<table>\n<thead>\n<tr>\n<th style=\"text-align: left\">option name</th>\n<th style=\"text-align: left\">Descriptions</th>\n<th style=\"text-align: left\">default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: left\">style</td>\n<td style=\"text-align: left\">変化させたいcssの値</td>\n<td style=\"text-align: left\"><code>'top'</code></td>\n</tr>\n<tr>\n<td style=\"text-align: left\">speed</td>\n<td style=\"text-align: left\">スクロール量 / speed ので値を変化させる</td>\n<td style=\"text-align: left\"><code>2</code></td>\n</tr>\n<tr>\n<td style=\"text-align: left\">min</td>\n<td style=\"text-align: left\">最小値</td>\n<td style=\"text-align: left\"><code>-999999</code></td>\n</tr>\n<tr>\n<td style=\"text-align: left\">max</td>\n<td style=\"text-align: left\">最大値</td>\n<td style=\"text-align: left\"><code>999999</code></td>\n</tr>\n<tr>\n<td style=\"text-align: left\">fixStyleValue</td>\n<td style=\"text-align: left\">希望のstyle、コンテンツのfix時のsyle、nullの場合はcssで予め指定していたstyleが代入されます。</td>\n<td style=\"text-align: left\"><code>null</code></td>\n</tr>\n<tr>\n<td style=\"text-align: left\">fixScrollPosition</td>\n<td style=\"text-align: left\">スクロールが<code>fixScrollPosition</code>の位置に来た時に希望の位置（fixStyleValue）にコンテンツがfixします。</td>\n<td style=\"text-align: left\"><code>0</code></td>\n</tr>\n</tbody>\n</table>\n\n<h4>\n<span id=\"例-1\" class=\"fragment\"></span><a href=\"#%E4%BE%8B-1\"><i class=\"fa fa-link\"></i></a>例）</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$(el).parallaxSpeed {\n    sytle: 'left',\n    speed: 0.5\n    fixScrollPosition: 300\n}\n</pre></div></div>\n\n<h4>\n<span id=\"例jquerydataextendを使用した場合-1\" class=\"fragment\"></span><a href=\"#%E4%BE%8Bjquerydataextend%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%9F%E5%A0%B4%E5%90%88-1\"><i class=\"fa fa-link\"></i></a>例）<code>jquery.dataExtend</code>を使用した場合</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>&lt;p class=\"parallax-speed\" data-style=\"left\" data-speed=\"0.5\" data-fix-scroll-position=\"300\"&gt;Test&lt;/p&gt;\n</pre></div></div>\n\n<h4>\n<span id=\"応用編\" class=\"fragment\"></span><a href=\"#%E5%BF%9C%E7%94%A8%E7%B7%A8\"><i class=\"fa fa-link\"></i></a>応用編</h4>\n\n<p>各オプションは配列で指定することができます。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$(el).parallaxSpeed {\n    sytle: ['top', 'left', 'background-color'],\n    speed: [0.5, 2, 2],\n    min: [100, 100, [100,10,0]],\n    max: [500, 500, [255,255,200]] //rba(100, 100, 100)のような値も指定できます。\n    fixScrollPosition: 300\n}\n</pre></div></div>\n\n<h4>\n<span id=\"jquerydataextendを使用した場合\" class=\"fragment\"></span><a href=\"#jquerydataextend%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%9F%E5%A0%B4%E5%90%88\"><i class=\"fa fa-link\"></i></a><code>jquery.dataExtend</code>を使用した場合</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>&lt;p class=\"parallax-speed\"\n    data-style=\"['top', 'left', 'background-color']\"\n    data-speed=\"[0.5, 2, 2]\"\n    data-min=\"[0.5, 2, 2]\"\n    data-max=\"[500, 500, [255,255,200]]\"\n    data-fix-scroll-position=\"300\"&gt;Test&lt;/p&gt;\n</pre></div></div>\n\n<h4>\n<span id=\"コンテンツ幅がウィンドウの幅によって変わる場合の対処方法\" class=\"fragment\"></span><a href=\"#%E3%82%B3%E3%83%B3%E3%83%86%E3%83%B3%E3%83%84%E5%B9%85%E3%81%8C%E3%82%A6%E3%82%A3%E3%83%B3%E3%83%89%E3%82%A6%E3%81%AE%E5%B9%85%E3%81%AB%E3%82%88%E3%81%A3%E3%81%A6%E5%A4%89%E3%82%8F%E3%82%8B%E5%A0%B4%E5%90%88%E3%81%AE%E5%AF%BE%E5%87%A6%E6%96%B9%E6%B3%95\"><i class=\"fa fa-link\"></i></a>コンテンツ幅がウィンドウの幅によって変わる場合の対処方法</h4>\n\n<p>下記のようにタグを指定することでそのタグの<code>offset().top</code>からの位置を<code>fixScrollPosition</code>とすることができます。<br>\n基準の位置から微調整したい場合は<code>,</code>で区切り値を入れてください。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>fixScrollPosition: '#main,+100'\n</pre></div></div>\n\n<h3>\n<span id=\"fit\" class=\"fragment\"></span><a href=\"#fit\"><i class=\"fa fa-link\"></i></a>fit</h3>\n\n<p>移動距離に応じてcssを変化させる</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$(el).parallaxFit({\n    start: 0,\n    end: 500,\n    fromStyle: {\n        top: '100px'\n    },\n    toStyle: {\n        top: '700px'\n    },\n    easing: 'easeInOutBack',\n});\n</pre></div></div>\n\n<table>\n<thead>\n<tr>\n<th style=\"text-align: left\">option name</th>\n<th style=\"text-align: left\">Descriptions</th>\n<th style=\"text-align: left\">default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: left\">start</td>\n<td style=\"text-align: left\">移動を始めるスクロール位置</td>\n<td style=\"text-align: left\"><code>null</code></td>\n</tr>\n<tr>\n<td style=\"text-align: left\">end</td>\n<td style=\"text-align: left\">移動が終わるスクロール位置</td>\n<td style=\"text-align: left\"><code>null</code></td>\n</tr>\n<tr>\n<td style=\"text-align: left\">toStyle</td>\n<td style=\"text-align: left\">始めのcss（cssは文字列で指定してください）</td>\n<td style=\"text-align: left\"><code>null</code></td>\n</tr>\n<tr>\n<td style=\"text-align: left\">fromStyle</td>\n<td style=\"text-align: left\">終わりのcss（cssは文字列で指定してください）</td>\n<td style=\"text-align: left\"><code>null</code></td>\n</tr>\n<tr>\n<td style=\"text-align: left\">easing</td>\n<td style=\"text-align: left\">\n<a href=\"http://semooh.jp/jquery/cont/doc/easing/\" rel=\"nofollow noopener\" target=\"_blank\">easing plugin</a>の名前を指定</td>\n<td style=\"text-align: left\"><code>null</code></td>\n</tr>\n</tbody>\n</table>\n\n<h4>\n<span id=\"例jquerydataextendを使用した場合-2\" class=\"fragment\"></span><a href=\"#%E4%BE%8Bjquerydataextend%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%9F%E5%A0%B4%E5%90%88-2\"><i class=\"fa fa-link\"></i></a>例）<code>jquery.dataExtend</code>を使用した場合</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>&lt;p class=\"parallax-fit\"\n    data-start=\"0\"\n    data-end=\"500\"\n    data-from-style=\"{'top': '100px'}\"\n    data-to-style=\"{'top': '400px'}\"\n    data-easing=\"easeInOutBack\"&gt;Test&lt;/p&gt;\n</pre></div></div>\n\n<h4>\n<span id=\"応用編-1\" class=\"fragment\"></span><a href=\"#%E5%BF%9C%E7%94%A8%E7%B7%A8-1\"><i class=\"fa fa-link\"></i></a>応用編</h4>\n\n<p><code>motion1Start</code>のようにmotionをつなげていくことでmotionを複数指定できます。</p>\n\n<ul>\n<li>startを省略すると過去の<code>end</code>の値を参照します。</li>\n<li>fromを省略すると過去の<code>to</code>の値を参照します。</li>\n<li>参照した結果<code>to</code>の値がない場合はcssで指定している値を見にいきます。</li>\n</ul>\n\n<hr>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$(el).parallaxFit({\n    start: 0,\n    end: 500,\n    fromStyle: {\n        top: '100px'\n    },\n    toStyle: {\n        top: '400px'\n    },\n    easing: 'easeInOutBack',\n\n    motion1End: 700,\n    motion1FromStyle: {\n        left: '300px'\n    },\n    motion1ToStyle: {\n        left: '400px'\n    },\n    motion1Easing: 'easeInOutBack',\n});\n</pre></div></div>\n\n<h4>\n<span id=\"ウィンドウ幅によりコンテンツ幅が変わる場合の対処方法\" class=\"fragment\"></span><a href=\"#%E3%82%A6%E3%82%A3%E3%83%B3%E3%83%89%E3%82%A6%E5%B9%85%E3%81%AB%E3%82%88%E3%82%8A%E3%82%B3%E3%83%B3%E3%83%86%E3%83%B3%E3%83%84%E5%B9%85%E3%81%8C%E5%A4%89%E3%82%8F%E3%82%8B%E5%A0%B4%E5%90%88%E3%81%AE%E5%AF%BE%E5%87%A6%E6%96%B9%E6%B3%95\"><i class=\"fa fa-link\"></i></a>ウィンドウ幅によりコンテンツ幅が変わる場合の対処方法</h4>\n\n<p>下記のようにタグを指定することでそのタグの<code>offset().top</code>からの位置を<code>start</code>とすることができます。<br>\n基準の位置から微調整したい場合は<code>,</code>で区切り、値を入れてください。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$(el).parallaxFit({\n    start: '#main',\n    end:'#main,+100',\n</pre></div></div>\n\n<h4>\n<span id=\"ウィンドウ幅変更によりスクロールがコンテンツ位置に到達しない場合の最初方法\" class=\"fragment\"></span><a href=\"#%E3%82%A6%E3%82%A3%E3%83%B3%E3%83%89%E3%82%A6%E5%B9%85%E5%A4%89%E6%9B%B4%E3%81%AB%E3%82%88%E3%82%8A%E3%82%B9%E3%82%AF%E3%83%AD%E3%83%BC%E3%83%AB%E3%81%8C%E3%82%B3%E3%83%B3%E3%83%86%E3%83%B3%E3%83%84%E4%BD%8D%E7%BD%AE%E3%81%AB%E5%88%B0%E9%81%94%E3%81%97%E3%81%AA%E3%81%84%E5%A0%B4%E5%90%88%E3%81%AE%E6%9C%80%E5%88%9D%E6%96%B9%E6%B3%95\"><i class=\"fa fa-link\"></i></a>ウィンドウ幅変更により、スクロールがコンテンツ位置に到達しない場合の最初方法</h4>\n\n<p><code>lastScrollPosition</code>をスクロールの最後の位置を取得できます。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$(el).parallaxSpeed({\n    fixScrollPosition: 'lastScrollPosition'\n})\n\n$(el).parallaxFit({\n    start: '#main',\n    end: 'lastScrollPosition',\n</pre></div></div>\n","updated":1517658508,"tags":["HTML","CSS","JavaScript","jQuery"],"uuid":"1c49f329356e80bf3ba2","title":"スクロールによってCSSを変更し、パララックス効果を実現するjQueryプラグイン","created":1449991663},{"userId":"kamem","body":"<p>最近Surfaceを買いました。</p>\n\n<p>久し振りにWindowsを使ったという事もあって、<br>\nMacの感覚でそのまま使おうとしたら、操作にかなり違和感があってなかなか大変でした。</p>\n\n<p>なるべく操作をMacに近づけるためにいろいろ設定を変更したので<br>\n設定方法をメモしておこうと思います。</p>\n\n<h2>\n<span id=\"macのように文字入力の切替を行いたい半角全角英数の変換\" class=\"fragment\"></span><a href=\"#mac%E3%81%AE%E3%82%88%E3%81%86%E3%81%AB%E6%96%87%E5%AD%97%E5%85%A5%E5%8A%9B%E3%81%AE%E5%88%87%E6%9B%BF%E3%82%92%E8%A1%8C%E3%81%84%E3%81%9F%E3%81%84%E5%8D%8A%E8%A7%92%E5%85%A8%E8%A7%92%E8%8B%B1%E6%95%B0%E3%81%AE%E5%A4%89%E6%8F%9B\"><i class=\"fa fa-link\"></i></a>Macのように文字入力の切替を行いたい（半角、全角、英数の変換）</h2>\n\n<ol>\n<li><p>まずはgoogle日本語入力をダウンロード<br>\n<a href=\"https://www.google.co.jp/ime/\" rel=\"nofollow noopener\" target=\"_blank\">google 日本語入力</a></p></li>\n<li><p>Google日本語入力のプロパティを開き主に下記のように変更します。</p></li>\n</ol>\n\n<ul>\n<li>Henkanを 「IMEを有効化」</li>\n<li>Muhenkan「IMEを無効化」</li>\n</ul>\n\n<p><a href=\"http://johokankyo.com/diary/keyboard_mac_like/\" rel=\"nofollow noopener\" target=\"_blank\"> Windowsキーボードで、Macのように文字入力の切り替えをしたい</a></p>\n\n<p>下記、引用です</p>\n\n<blockquote>\n<p>まずは、「モード」列の「変換前入力中」の中にある「入力キー」列で「Henkan」と表示されている行で、「コマンド」列部分をクリックして一覧から「IMEを有効化」に切り替えます。<br>\n続いて「Muhenkan」の行では「IMEを無効化」を選びます。<br>\n同様にして、モード列の「変換中」、「直接入力」、「文字入力なし」も、「Henkan」は「IMEを有効化」に、「Muhenkan」は「IMEを無効化」に、それぞれ切り替えます。</p>\n</blockquote>\n\n<h2>\n<span id=\"command-keyとctrlaltwindows-keyの配置について\" class=\"fragment\"></span><a href=\"#command-key%E3%81%A8ctrlaltwindows-key%E3%81%AE%E9%85%8D%E7%BD%AE%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\"><i class=\"fa fa-link\"></i></a>Command KeyとCtrl、Alt、windows keyの配置について</h2>\n\n<p>下記などのフリーソフトを使ってキー配置を入れ替えましょう。</p>\n\n<ul>\n<li><a href=\"http://blog.goo.ne.jp/ashm314/e/b8ea64c00ad8921af9ff06b738938cb4\" rel=\"nofollow noopener\" target=\"_blank\">ThinkPad E540 奮闘記［10］：キー入れ替えソフト（KeyTweak）</a></li>\n<li><a href=\"http://forest.watch.impress.co.jp/library/software/changekey/\" rel=\"nofollow noopener\" target=\"_blank\">Change Key</a></li>\n</ul>\n\n<p>私は「Change Key」を使わせていただきました。<br>\n操作は直感的（変更したいキーを選択して、変更後のキーを選択するだけ）なので<br>\n簡単かと思います。</p>\n\n<p>アイコンを右クリックして「管理者として実行」で実行しないと変更後の保存ができないためその点気をつけましょう。</p>\n\n<table>\n<thead>\n<tr>\n<th style=\"text-align: left\">変更前</th>\n<th style=\"text-align: right\">変更後</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: left\">Alt</td>\n<td style=\"text-align: right\">Ctrl右</td>\n</tr>\n<tr>\n<td style=\"text-align: left\">Caps 英数</td>\n<td style=\"text-align: right\">Ctrl左</td>\n</tr>\n<tr>\n<td style=\"text-align: left\">windows</td>\n<td style=\"text-align: right\">Alt</td>\n</tr>\n<tr>\n<td style=\"text-align: left\">Ctrl</td>\n<td style=\"text-align: right\">Caps 英数</td>\n</tr>\n</tbody>\n</table>\n\n<p>※ ただしFnキーの変更はできないようです。（できたらいいのになぁ。。）</p>\n\n<h2>\n<span id=\"command--tabなどのショートカットについて\" class=\"fragment\"></span><a href=\"#command--tab%E3%81%AA%E3%81%A9%E3%81%AE%E3%82%B7%E3%83%A7%E3%83%BC%E3%83%88%E3%82%AB%E3%83%83%E3%83%88%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\"><i class=\"fa fa-link\"></i></a>Command + Tabなどのショートカットについて</h2>\n\n<p>WindowsとMacでショートカットの違いが多いのもとまどうところです。<br>\n<code>Command + Tab</code>などアプリを切り替えたいときによく使っていたのですが<br>\n標準ではAlt + Tabのため直感的に操作できずにいらいら。。<br>\n下記ツールをつかって解決しました。</p>\n\n<ul>\n<li>ショートカットを変更してくれるツール\n<a href=\"https://autohotkey.com/\" rel=\"nofollow noopener\" target=\"_blank\">AutoHotkey</a>\n</li>\n</ul>\n\n<p>コードをかいてショートカットを変更する必要があるのですが、そんなに難しくないです<br>\n自分が変更したコードを貼っておきます。<br>\nインストール後<code>.ahk</code>という拡張子をつけて保存して実行します。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>Ctrl &amp; Tab::AltTab\nPgUp::#d\nAlt &amp; Space::Send,#s\nAppsKey &amp; Backspace::Send,{Delete}\nLCtrl &amp; LButton::Send,{RButton}\n</pre></div></div>\n\n<h3>\n<span id=\"変更したところ\" class=\"fragment\"></span><a href=\"#%E5%A4%89%E6%9B%B4%E3%81%97%E3%81%9F%E3%81%A8%E3%81%93%E3%82%8D\"><i class=\"fa fa-link\"></i></a>変更したところ</h3>\n\n<table>\n<thead>\n<tr>\n<th style=\"text-align: left\">用途</th>\n<th style=\"text-align: left\">変更前</th>\n<th style=\"text-align: right\">変更後</th>\n<th style=\"text-align: right\">備考</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: left\">アプリの切替</td>\n<td style=\"text-align: left\">Alt + Tab</td>\n<td style=\"text-align: right\">Ctrl &amp; Tab</td>\n<td style=\"text-align: right\"></td>\n</tr>\n<tr>\n<td style=\"text-align: left\">デスクトップの表示</td>\n<td style=\"text-align: left\">windows + d</td>\n<td style=\"text-align: right\">PgUp</td>\n<td style=\"text-align: right\">mac f11の再現</td>\n</tr>\n<tr>\n<td style=\"text-align: left\">cortanaの呼び出し</td>\n<td style=\"text-align: left\">windows + s</td>\n<td style=\"text-align: right\">Alt &amp; Space</td>\n<td style=\"text-align: right\">macのAlfredのショートカットを再現</td>\n</tr>\n<tr>\n<td style=\"text-align: left\">Delete</td>\n<td style=\"text-align: left\">新しく追加</td>\n<td style=\"text-align: right\">AppsKey &amp; Backspace</td>\n<td style=\"text-align: right\">macのfn + deleteを再現</td>\n</tr>\n<tr>\n<td style=\"text-align: left\">右クリック</td>\n<td style=\"text-align: left\">新しく追加</td>\n<td style=\"text-align: right\">Ctrl左 &amp; 右クリック</td>\n<td style=\"text-align: right\"></td>\n</tr>\n</tbody>\n</table>\n\n<h2>\n<span id=\"windowsでbashを使う\" class=\"fragment\"></span><a href=\"#windows%E3%81%A7bash%E3%82%92%E4%BD%BF%E3%81%86\"><i class=\"fa fa-link\"></i></a>Windowsでbashを使う</h2>\n\n<p>windowsのコマンドラインツール...cdできないlsできない..といろいろ大変でした。</p>\n\n<p>詳しくは下記ページに画像つきで説明されております。長くなってしまうのと<br>\n内容かぶってしまうので詳細は下記をみていただければと思います。</p>\n\n<p>最近「Bash on Ubuntu on Windows」のがあり簡単にbashがつかえました。<br>\n<a href=\"https://qiita.com/Aruneko/items/c79810b0b015bebf30bb\" id=\"reference-d054bf1df9391ce635c4\">Bash on Ubuntu on Windowsをインストールしてみよう！</a></p>\n\n<h2>\n<span id=\"iterm2みたいなのがほしい\" class=\"fragment\"></span><a href=\"#iterm2%E3%81%BF%E3%81%9F%E3%81%84%E3%81%AA%E3%81%AE%E3%81%8C%E3%81%BB%E3%81%97%E3%81%84\"><i class=\"fa fa-link\"></i></a>iTerm2みたいなのがほしい</h2>\n\n<p>下記を使いました。便利。<br>\n<a href=\"http://cmder.net/\" rel=\"nofollow noopener\" target=\"_blank\">Cmder</a></p>\n\n<h3>\n<span id=\"cmderで矢印が使えない問題\" class=\"fragment\"></span><a href=\"#cmder%E3%81%A7%E7%9F%A2%E5%8D%B0%E3%81%8C%E4%BD%BF%E3%81%88%E3%81%AA%E3%81%84%E5%95%8F%E9%A1%8C\"><i class=\"fa fa-link\"></i></a>Cmderで矢印が使えない問題</h3>\n\n<p>そのままだと矢印移動ができない問題があるようです。</p>\n\n<p><a href=\"https://qiita.com/goldbook@github/items/b78c959898e0aea98a4e\" id=\"reference-6912dfb78091114c0d9e\">BashOnWindowsを快適に使うための設定</a></p>\n\n<ol>\n<li><p>Settings &gt; Tasksタブより 左下 <code>+</code>を教えてタスクを追加します。<br>\n右下の大きめのエリアに下記を入力します。（zshを使用しない場合は<code>-c zsh</code>を外すこと）<br>\n<code><br>\nC:\\Windows\\System32\\bash.exe ~ -c zsh -cur_console:p<br>\n</code></p></li>\n<li><p><code>Default Task for new console</code>にも合わせてチェックを付けておいて新しく立ち上がった場合もdefaultでこのタスクが開くようにしておきます。あとは名前をつけて保存します。</p></li>\n<li><p>続いて左のリストからStartupを選択して<code>Specified named task</code>を今作ったタスクに変更して、起動時にもこのタスクで開くようにしましょう。</p></li>\n</ol>\n\n<p>参考<br>\n<a href=\"https://qiita.com/koduki/items/ab68b917b8dbc7d51af0\" id=\"reference-a3ed3cb300928586315e\">Windows Subsystem for Linux ＋ Cmderで最強のCLI環境を作る</a><br>\n画像つきでわかりやすく説明されてます。</p>\n\n<p>※ 個人的に<code>zsh</code>、<code>oh-my-zsh</code>を使用しています。普通にubuntuにインストールするのとあまり変わらなかったため割愛。</p>\n\n<h3>\n<span id=\"bashのの向き先を変える\" class=\"fragment\"></span><a href=\"#bash%E3%81%AE%E3%81%AE%E5%90%91%E3%81%8D%E5%85%88%E3%82%92%E5%A4%89%E3%81%88%E3%82%8B\"><i class=\"fa fa-link\"></i></a>bashの<code>~/</code>の向き先を変える</h3>\n\n<p>下記コマンドを実行したときの移動先を変更しました。<br>\nそのままだとubuntu側のhomeに移動してしまうためwindows側のhomeにしました。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>cd ~/\n</pre></div></div>\n\n<p><a href=\"https://qiita.com/ryo-yamaoka/items/9db1a8643144565de103#mnt%E9%85%8D%E4%B8%8B%E3%81%AB%E7%A7%BB%E5%8B%95%E3%81%99%E3%82%8B%E3%81%AE%E3%81%AF%E9%9D%A2%E5%80%92%E9%81%95%E5%92%8C%E6%84%9F%E3%82%92%E4%BD%95%E3%81%A8%E3%81%8B%E3%81%97%E3%81%9F%E3%81%84\" id=\"reference-2933e6bb2c453b9a5325\">Bash on Windowsで真面目に開発環境を整備する: /mnt配下に移動するのは面倒、違和感を何とかしたい</a></p>\n\n<blockquote>\n<p>安全策で行くのならばそれ用のディレクトリを作った上で/home/usernameに/mnt/c/Users/username/BoWという具合にエイリアスを張るのがよいでしょう。<br>\n（BoWディレクトリは他の場所や名前でも大丈夫）<br>\n私はちょっと思い切ってWindows側で/etc/passwdのホームディレクトリを/mnt/c/Users/username/BoW配下に変更してしまいました。<br>\nこんな感じです。<br>\n<code><br>\nusername:x:1000:1000:\"\",,,:/mnt/c/Users/username/BoW:/bin/bash<br>\n</code></p>\n</blockquote>\n\n<p>変更してみましたが、今後もしかしたら弊害があるかもしれないのでちょっと様子見です。<br>\n安全に行くなら書いてある通りエイリアスを貼るのが良い気がします。</p>\n\n<h2>\n<span id=\"macでのopenコマンドの追加\" class=\"fragment\"></span><a href=\"#mac%E3%81%A7%E3%81%AEopen%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%81%AE%E8%BF%BD%E5%8A%A0\"><i class=\"fa fa-link\"></i></a>Macでの「openコマンド」の追加</h2>\n\n<p><a href=\"https://qiita.com/chez_sugi/items/603a0ba8016aaae9ef98\" id=\"reference-d0d92736b3182da332f8\">Bash on Windowsでmacのopenコマンドみたいなこと</a></p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre> alias open=\"cmd.exe /c start\"\n</pre></div></div>\n\n<p>### Atomをコマンドから起動する<br>\n editorはatomを使ってるのでatomもコマンドから起動できるようにしておくと便利です。</p>\n\n<p><a href=\"http://dmingn.hatenablog.com/entry/2017/04/24/061616\" rel=\"nofollow noopener\" target=\"_blank\">Bash on Ubuntu on Windows から Windows 側の atom を起動する</a></p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>alias atom='cmd.exe /C \"C:\\Users\\(username)\\AppData\\Local\\atom\\bin\\atom.cmd\"'\n</pre></div></div>\n\n<h2>\n<span id=\"3本指ドラッグの代わりにクリックロックを使ってみる\" class=\"fragment\"></span><a href=\"#3%E6%9C%AC%E6%8C%87%E3%83%89%E3%83%A9%E3%83%83%E3%82%B0%E3%81%AE%E4%BB%A3%E3%82%8F%E3%82%8A%E3%81%AB%E3%82%AF%E3%83%AA%E3%83%83%E3%82%AF%E3%83%AD%E3%83%83%E3%82%AF%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B\"><i class=\"fa fa-link\"></i></a>3本指ドラッグの代わりに「クリックロック」を使ってみる</h2>\n\n<p>3本指ドラッグができないので、ちょっと試しに使ってみてます。<br>\nまだ使い始めなので使い勝手がわからないですが、他に弊害出る可能性もあるので<br>\nタッチパッドのドラッグがちょっとなーって方は試してみてもよいかもっ。</p>\n\n<p><a href=\"https://www.digimonostation.jp/0000108817/\" rel=\"nofollow noopener\" target=\"_blank\">タッチパッドで「ドラッグ」が苦手な人に。Windows 10の「クリックロック」が超便利！</a></p>\n\n<h2>\n<span id=\"スペースでプレビュー機能を追加\" class=\"fragment\"></span><a href=\"#%E3%82%B9%E3%83%9A%E3%83%BC%E3%82%B9%E3%81%A7%E3%83%97%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC%E6%A9%9F%E8%83%BD%E3%82%92%E8%BF%BD%E5%8A%A0\"><i class=\"fa fa-link\"></i></a>スペースでプレビュー機能を追加</h2>\n\n<p><a href=\"https://forest.watch.impress.co.jp/docs/news/1067001.html\" rel=\"nofollow noopener\" target=\"_blank\">WinQuickLook</a></p>\n\n<h2>\n<span id=\"今後できたらmacに合わせたいところ\" class=\"fragment\"></span><a href=\"#%E4%BB%8A%E5%BE%8C%E3%81%A7%E3%81%8D%E3%81%9F%E3%82%89mac%E3%81%AB%E5%90%88%E3%82%8F%E3%81%9B%E3%81%9F%E3%81%84%E3%81%A8%E3%81%93%E3%82%8D\"><i class=\"fa fa-link\"></i></a>今後できたらMacに合わせたいところ</h2>\n\n<ul>\n<li>3本ゆびドラッグでのドラッグ＆ドロップ</li>\n<li>Fnキーをどうにかしたい。</li>\n</ul>\n\n<h2>\n<span id=\"まとめ\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\"><i class=\"fa fa-link\"></i></a>まとめ</h2>\n\n<p>いろいろ設定しなおしちゃいましたが、<br>\nようやくMacと併用して使ってもそこまで違和感なく使えるようになったと思います。<br>\nまた今後変更した点などあれば追記していきたいと思います。</p>\n","updated":1510039016,"tags":["Mac","Windows"],"uuid":"db0b7970d5bde16ff6e7","title":"MacからWindows10に移行したときになるべく違和感がなくなるような設定","created":1508087468},{"title":"jQueryPluginを作ってnpmで公開するまでの流れと構成","created":1490623845,"userId":"kamem","body":"<p>最近はがっつりjQueryでーって言うのも少なくなってきているかもしれないですが</p>\n\n<p>細かいものを作ったときにプラグインとしてまとめておくとあとあと<br>\n自分でもnpm installして使うーってことができるので良いかなと思ってます。</p>\n\n<p>いままでもプラグインをいくつか作っていてのですが<br>\nnpmに登録するまでなかなか行かないって場合が多かったです。</p>\n\n<p>最近は昔のを整理してnpmに公開するようにしているので</p>\n\n<p>最初の構成（starter-kit的なの）と<br>\nざっくりですが公開するまでの流れをメモっておこうかと思います！</p>\n\n<p><a href=\"https://github.com/kamem/jquery.plugin.starter-kit\" rel=\"nofollow noopener\" target=\"_blank\">jquery.plugin.starter-kit</a></p>\n\n<h2>\n<span id=\"まずはじめに\" class=\"fragment\"></span><a href=\"#%E3%81%BE%E3%81%9A%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>まずはじめに</h2>\n\n<h3>\n<span id=\"packagejson\" class=\"fragment\"></span><a href=\"#packagejson\"><i class=\"fa fa-link\"></i></a>package.json</h3>\n\n<p>npmに登録するときに必要です。<br>\n最低限下記の項目を今回作るプラグインに合わせて修正しましょう</p>\n\n<h4>\n<span id=\"name\" class=\"fragment\"></span><a href=\"#name\"><i class=\"fa fa-link\"></i></a>name</h4>\n\n<p>プラグインの名前 (npmに登録するときの名前です)<br>\nキャメルケースだと登録できないようなのでハイフンケースで名前をつけるようにしましょう。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>// キャメルケース ☓\njquery.testPlugin x\n\n// ハイフンケース ○\njquery.test-plugin\n</pre></div></div>\n\n<h4>\n<span id=\"version\" class=\"fragment\"></span><a href=\"#version\"><i class=\"fa fa-link\"></i></a>version</h4>\n\n<p>プラグインのバージョン（なにか修正するたびにバージョンをアップしましょう）</p>\n\n<h4>\n<span id=\"description\" class=\"fragment\"></span><a href=\"#description\"><i class=\"fa fa-link\"></i></a>description</h4>\n\n<p>プラグインの説明文（npmのプラグイン説明欄に標示されます）</p>\n\n<h4>\n<span id=\"author\" class=\"fragment\"></span><a href=\"#author\"><i class=\"fa fa-link\"></i></a>author</h4>\n\n<p>自分用に設定しましょう</p>\n\n<h4>\n<span id=\"repository\" class=\"fragment\"></span><a href=\"#repository\"><i class=\"fa fa-link\"></i></a>repository</h4>\n\n<p>このプラグインのリポジトリ情報<br>\nこのプラグインに合わせて設定しなおしましょう。</p>\n\n<h4>\n<span id=\"license\" class=\"fragment\"></span><a href=\"#license\"><i class=\"fa fa-link\"></i></a>license</h4>\n\n<p>ライセンス情報。自分はプラグインを公開する際はMITで公開しています。</p>\n\n<h4>\n<span id=\"main\" class=\"fragment\"></span><a href=\"#main\"><i class=\"fa fa-link\"></i></a>main</h4>\n\n<p>吐き出されたmainのjsファイルの位置を示します。<br>\nここを描いておくことでwebpackを使ってimportする際にここのファイルを見に行ってくれるようになります。</p>\n\n<h4>\n<span id=\"keywords\" class=\"fragment\"></span><a href=\"#keywords\"><i class=\"fa fa-link\"></i></a>keywords</h4>\n\n<p>プラグインに関わるキーワード（複数可）</p>\n\n<h2>\n<span id=\"プラグインを作り始めるときのキット\" class=\"fragment\"></span><a href=\"#%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3%E3%82%92%E4%BD%9C%E3%82%8A%E5%A7%8B%E3%82%81%E3%82%8B%E3%81%A8%E3%81%8D%E3%81%AE%E3%82%AD%E3%83%83%E3%83%88\"><i class=\"fa fa-link\"></i></a>プラグインを作り始めるときのキット</h2>\n\n<p>プラグインを作り始めるときにいろいろと用意するのが大変なので<br>\nES6でさくっと書けるようなstarter-kit的なのを用意しました。</p>\n\n<p><a href=\"https://github.com/kamem/jquery.plugin.starter-kit\" rel=\"nofollow noopener\" target=\"_blank\">jquery.plugin.starter-kit</a></p>\n\n<h4>\n<span id=\"ファイル構成とファイルの説明\" class=\"fragment\"></span><a href=\"#%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E6%A7%8B%E6%88%90%E3%81%A8%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E8%AA%AC%E6%98%8E\"><i class=\"fa fa-link\"></i></a>ファイル構成とファイルの説明</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>├── LICENSE.txt // ライセンス情報記載(src/LICENSE.txtから吐き出されます)\n├── README.jp.md // 日本語のプラグイン説明\n├── README.md // 英語のプラグイン説明\n├── dist // 公開用プラグイン用フォルダ（src/jsの吐き出し先）\n│   └── js\n│       ├── jquery.testPlugin.js\n│       └── jquery.testPlugin.min.js\n├── docs // demo用フォルダ\n│   ├── css // demo用css（src/cssの吐き出し先）\n│   │   └── main.css\n│   ├── index.html\n│   └── js // プラグインで使うjsをいれてdemoで試す用\n│       ├── jquery.easing.1.3.min.js\n│       └── jquery.js\n├── gulpfile.js // gulpのせってい\n├── gulpfile_settings.js // gulpfileで使うためのフォルダ構成などが書いてあります\n├── package.json // npm公開に必要\n└── src // 作業用フォルダ\n    ├── LICENSE.txt // package.jsonから名前情報を取得、日付を更新して吐き出します\n    ├── css\n    │   └── main.css // docs/css内に吐き出し\n    └── js // フォルダ内のファイルをpackage.jsonからプラグイン名、日付、名前などをcopyrightに反映して結合しdist/jsにはき出します\n        ├── copyright.js\n        ├── copyright.min.js\n        ├── end.js\n        ├── jquery.testPlugin.jsx //package.jsonに記述したnameと同じ名前になるようになっています。（こっちはキャメルケースになるようにしているので注意！）\n        └── start.js // requireが使えるような記述がかいてあります。\n</pre></div></div>\n\n<h4>\n<span id=\"初め方\" class=\"fragment\"></span><a href=\"#%E5%88%9D%E3%82%81%E6%96%B9\"><i class=\"fa fa-link\"></i></a>初め方</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>npm install\n</pre></div></div>\n\n<h4>\n<span id=\"作業開始\" class=\"fragment\"></span><a href=\"#%E4%BD%9C%E6%A5%AD%E9%96%8B%E5%A7%8B\"><i class=\"fa fa-link\"></i></a>作業開始</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>npm run watch\n</pre></div></div>\n\n<p>この<code>command</code>を実行すると<code>src</code>フォルダ内のファイルを編集したときに<br>\ndist内にファイルを吐き出すことができるようになっています。</p>\n\n<p>あとはsrc内のファイルをいじってプラグインをつくっていけばOKです。<br>\n下記をブラウザで確認すれば<code>docs/index.html</code>を確認できるのでプラグインを作る際はここで確認して下さい。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>http://localhost:8888/docs/\n</pre></div></div>\n\n<p><code>index.html</code>内コメントアウトしてますが、下記で作りながら確認していくことができます。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>&lt;script src=\"../dist/js/jquery.test.js\"&gt;&lt;/script&gt;\n</pre></div></div>\n\n<p>プラグイン公開前は下記内に移動しましょう（そうしないとgithub pageのデモとして動作しないため）</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>&lt;script src=\"js/jquery.testPlugin.js\"&gt;&lt;/script&gt;\n</pre></div></div>\n\n<h5>\n<span id=\"jsについて\" class=\"fragment\"></span><a href=\"#js%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\"><i class=\"fa fa-link\"></i></a>jsについて</h5>\n\n<p>このときのjsはes6が使えるようになっています。</p>\n\n<p>requireはwebpackはプラグインとしてはファイルサイズが重くなってしまうため<br>\n<a href=\"https://www.npmjs.com/package/gulp-amdclean\" rel=\"nofollow noopener\" target=\"_blank\">amd-clean</a>を使っています。</p>\n\n<p>まぁ特に気にすることないはずです。</p>\n\n<h5>\n<span id=\"cssについて\" class=\"fragment\"></span><a href=\"#css%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\"><i class=\"fa fa-link\"></i></a>cssについて</h5>\n\n<p>postcssを使っています。<br>\n<code>src/css</code>のファイルは<code>docs/css</code>にはき出されます。</p>\n\n<h5>\n<span id=\"docsについて\" class=\"fragment\"></span><a href=\"#docs%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\"><i class=\"fa fa-link\"></i></a>docsについて</h5>\n\n<p>docsはgithubの昨日でgithub pageとして公開することができます。<br>\nプラグインのデモをつくって公開しましょう。</p>\n\n<h5>\n<span id=\"changelogの自動化\" class=\"fragment\"></span><a href=\"#changelog%E3%81%AE%E8%87%AA%E5%8B%95%E5%8C%96\"><i class=\"fa fa-link\"></i></a>CHANGELOGの自動化</h5>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>npm run changes\n</pre></div></div>\n\n<p>tagを切ってから<code>npm run changes</code>を実行してください。<br>\n<code>git repository</code>のrelease 情報をみて自動で<code>CHANGELOG.md</code>を作ってくれます。</p>\n\n<h2>\n<span id=\"npmに公開する\" class=\"fragment\"></span><a href=\"#npm%E3%81%AB%E5%85%AC%E9%96%8B%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>NPMに公開する</h2>\n\n<h3>\n<span id=\"タグを切るのを忘れずに\" class=\"fragment\"></span><a href=\"#%E3%82%BF%E3%82%B0%E3%82%92%E5%88%87%E3%82%8B%E3%81%AE%E3%82%92%E5%BF%98%E3%82%8C%E3%81%9A%E3%81%AB\"><i class=\"fa fa-link\"></i></a>タグを切るのを忘れずに</h3>\n\n<p><a href=\"https://github.com/kamem/jquery.plugin.starter-kit/releases\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/kamem/jquery.plugin.starter-kit/releases</a><br>\npackage.jsonに記述したバージョンと同じバージョンのタグを切ってあげましょう。</p>\n\n<h3>\n<span id=\"コマンド実行して公開\" class=\"fragment\"></span><a href=\"#%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E5%AE%9F%E8%A1%8C%E3%81%97%E3%81%A6%E5%85%AC%E9%96%8B\"><i class=\"fa fa-link\"></i></a>コマンド実行して公開</h3>\n\n<p>下記の<code>command</code>をpackage.jsonと同フォルダで実行するとnpmに公開することができます。<br>\nまたバージョンアップするときも同じコマンドを打てばでいけるので便利です。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>npm publish\n</pre></div></div>\n\n<p>updateするときもpackage.jsonバージョンアップしてタグをきってから<code>npm publish</code>することを忘れずに！</p>\n\n<p>※ バージョンもnpmのコマンドでやってくれるみたい<br>\n<a href=\"http://yosuke-furukawa.hatenablog.com/entry/2014/06/10/100410\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">http://yosuke-furukawa.hatenablog.com/entry/2014/06/10/100410</a></p>\n\n<h2>\n<span id=\"今後対応したい\" class=\"fragment\"></span><a href=\"#%E4%BB%8A%E5%BE%8C%E5%AF%BE%E5%BF%9C%E3%81%97%E3%81%9F%E3%81%84\"><i class=\"fa fa-link\"></i></a>今後対応したい</h2>\n\n<ul>\n<li>テストの実装</li>\n</ul>\n","updated":1491059802,"tags":["jQuery"],"uuid":"dabc1bca30486283cc75"},{"userId":"kamem","body":"<ul>\n<li>Github: <a href=\"https://github.com/kamem/jquery.smoothPageScroll\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/kamem/jquery.smoothPageScroll</a>\n</li>\n</ul>\n\n<p>今までnpmに登録していなかったので作りなおして登録しましたっ！</p>\n\n<p>スムーズにスクロールするプラグインは色々あるのですが、<br>\n必要な機能を備えたプラグインが見つからなかったので作ってみました。</p>\n\n<p>前々からつくってはいたのですが、<br>\n昔の拙いコードが残っていたので少し整理しました。</p>\n\n<h2>\n<span id=\"仕様\" class=\"fragment\"></span><a href=\"#%E4%BB%95%E6%A7%98\"><i class=\"fa fa-link\"></i></a>仕様</h2>\n\n<ol>\n<li>アンカーで移動後にアドレスを変更（アドレスにハッシュを付与する）。</li>\n<li>座標を指定してのページ内リンク。</li>\n<li>ロード時にページの先頭からハッシュの位置までスムーズに移動することができる。</li>\n<li>移動完了後に指定した関数を実行。</li>\n<li>スクロール途中、マウススクロールしたときにカクカクした動きをする問題をスクロールをストップすることで回避。</li>\n<li>スクロール途中に画面をクリックした場合にスクロールが止まる。</li>\n</ol>\n\n<h2>\n<span id=\"デモ\" class=\"fragment\"></span><a href=\"#%E3%83%87%E3%83%A2\"><i class=\"fa fa-link\"></i></a>デモ</h2>\n\n<p><a href=\"http://github.develo.org/jquery.smoothPageScroll/example/\" rel=\"nofollow noopener\" target=\"_blank\">DEMO</a></p>\n\n<h2>\n<span id=\"必要なプラグイン\" class=\"fragment\"></span><a href=\"#%E5%BF%85%E8%A6%81%E3%81%AA%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3\"><i class=\"fa fa-link\"></i></a>必要なプラグイン</h2>\n\n<ul>\n<li>jquery</li>\n<li><a href=\"https://github.com/gdsmith/jquery.easing\" rel=\"nofollow noopener\" target=\"_blank\">jquery.easing</a></li>\n</ul>\n\n<p>スクロール時の<code>animate</code>の<code>easing</code>の初期値に<code>easeOutQuart</code>を使用しているため、このプラグインが必要です。</p>\n\n<h2>\n<span id=\"インストール\" class=\"fragment\"></span><a href=\"#%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\"><i class=\"fa fa-link\"></i></a>インストール</h2>\n\n<h3>\n<span id=\"npm\" class=\"fragment\"></span><a href=\"#npm\"><i class=\"fa fa-link\"></i></a>Npm</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>npm install jquery.smooth-page-scroll\n</pre></div></div>\n\n<h2>\n<span id=\"使い方\" class=\"fragment\"></span><a href=\"#%E4%BD%BF%E3%81%84%E6%96%B9\"><i class=\"fa fa-link\"></i></a>使い方</h2>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>&lt;script src=\"js/jquery.js\"&gt;&lt;/script&gt;\n&lt;script src=\"js/jquery.easing.js\"&gt;&lt;/script&gt;\n&lt;script src=\"js/jquery.smoothPageScroll.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\n$.smoothPageScrollByLoaded();\n$('a[href^=\"#\"]').smoothPageScroll();\n&lt;/script&gt;\n</pre></div></div>\n\n<h3>\n<span id=\"a要素以外につけたい場合\" class=\"fragment\"></span><a href=\"#a%E8%A6%81%E7%B4%A0%E4%BB%A5%E5%A4%96%E3%81%AB%E3%81%A4%E3%81%91%E3%81%9F%E3%81%84%E5%A0%B4%E5%90%88\"><i class=\"fa fa-link\"></i></a>a要素以外につけたい場合</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$('h1').smoothPageScroll({\n    target: '#header'\n});\n</pre></div></div>\n\n<h3>\n<span id=\"移動後に関数実行\" class=\"fragment\"></span><a href=\"#%E7%A7%BB%E5%8B%95%E5%BE%8C%E3%81%AB%E9%96%A2%E6%95%B0%E5%AE%9F%E8%A1%8C\"><i class=\"fa fa-link\"></i></a>移動後に関数実行</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$('a[href^=\"#\"]').smoothPageScroll({\n    complate: function(e) {\n        console.log(e);\n    }\n});\n</pre></div></div>\n\n<h3>\n<span id=\"座標を指定してリンク\" class=\"fragment\"></span><a href=\"#%E5%BA%A7%E6%A8%99%E3%82%92%E6%8C%87%E5%AE%9A%E3%81%97%E3%81%A6%E3%83%AA%E3%83%B3%E3%82%AF\"><i class=\"fa fa-link\"></i></a>座標を指定してリンク</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>#1000,1000\n//（x, y）\n</pre></div></div>\n\n<h3>\n<span id=\"任意のタイミングでスクロールする\" class=\"fragment\"></span><a href=\"#%E4%BB%BB%E6%84%8F%E3%81%AE%E3%82%BF%E3%82%A4%E3%83%9F%E3%83%B3%E3%82%B0%E3%81%A7%E3%82%B9%E3%82%AF%E3%83%AD%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>任意のタイミングでスクロールする</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$.smoothPageScrollStart({\n    target: '#header'\n});\n</pre></div></div>\n\n<h2>\n<span id=\"options\" class=\"fragment\"></span><a href=\"#options\"><i class=\"fa fa-link\"></i></a>Options</h2>\n\n<table>\n<thead>\n<tr>\n<th style=\"text-align: left\">option name</th>\n<th style=\"text-align: left\">type</th>\n<th style=\"text-align: left\">Descriptions</th>\n<th style=\"text-align: left\">default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: left\">easing</td>\n<td style=\"text-align: left\"><code>String</code></td>\n<td style=\"text-align: left\">イージングの種類</td>\n<td style=\"text-align: left\"><code>'easeOutQuart'</code></td>\n</tr>\n<tr>\n<td style=\"text-align: left\">speed</td>\n<td style=\"text-align: left\"><code>Number</code></td>\n<td style=\"text-align: left\">スクロールスピード</td>\n<td style=\"text-align: left\"><code>1000</code></td>\n</tr>\n<tr>\n<td style=\"text-align: left\">delay</td>\n<td style=\"text-align: left\"><code>Number</code></td>\n<td style=\"text-align: left\">スクロール開始までの待ち時間($('body').animate.delay(<strong>delay</strong>)</td>\n<td style=\"text-align: left\"><code>-999999</code></td>\n</tr>\n<tr>\n<td style=\"text-align: left\">target</td>\n<td style=\"text-align: left\">\n<code>String</code> or <code>jQuery Object</code>\n</td>\n<td style=\"text-align: left\">直接ターゲットを指定する (例) <code>#header</code> or <code>$(#header)</code>  ※ 値の指定がない場合は(0, 0)になります。</td>\n<td style=\"text-align: left\"><code>undefined</code></td>\n</tr>\n<tr>\n<td style=\"text-align: left\">complate</td>\n<td style=\"text-align: left\"><code>Function</code></td>\n<td style=\"text-align: left\">スクロール完了後に実行したい関数</td>\n<td style=\"text-align: left\"><code>''</code></td>\n</tr>\n<tr>\n<td style=\"text-align: left\">isAddHash</td>\n<td style=\"text-align: left\"><code>Boolean</code></td>\n<td style=\"text-align: left\">スクロール後にhashを追加するか</td>\n<td style=\"text-align: left\"><code>true</code></td>\n</tr>\n<tr>\n<td style=\"text-align: left\">isTopScroll</td>\n<td style=\"text-align: left\"><code>Boolean</code></td>\n<td style=\"text-align: left\">縦方向にスクロールするか</td>\n<td style=\"text-align: left\"><code>true</code></td>\n</tr>\n<tr>\n<td style=\"text-align: left\">isLeftScroll</td>\n<td style=\"text-align: left\"><code>Boolean</code></td>\n<td style=\"text-align: left\">横方向にスクロールするか</td>\n<td style=\"text-align: left\"><code>true</code></td>\n</tr>\n</tbody>\n</table>\n\n<h3>\n<span id=\"初期設定\" class=\"fragment\"></span><a href=\"#%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A\"><i class=\"fa fa-link\"></i></a>初期設定</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>//ロード時の処理\n$.smoothPageScrollByLoaded({\n    easing: 'easeOutQuart',\n    speed: 1000,\n    complate:'',\n    target: location.hash,\n    isAddHash: true,\n    isTopScroll: true,\n    isLeftScroll: true\n});\n\n//クリック時の処理\n$('a[href^=\"#\"]').smoothPageScroll({\n    easing: 'easeOutQuart',\n    speed: 1000,\n    delay: 0,\n    target: undefined,\n    complate: '',\n    isAddHash: true,\n    isTopScroll: true,\n    isLeftScroll: true\n});\n</pre></div></div>\n","updated":1490511003,"tags":["HTML","JavaScript","jQuery"],"uuid":"c94c4dc75516b36f3766","title":"スムーズにスクロールするjQueryプラグイン","created":1469961276},{"userId":"kamem","body":"<ul>\n<li>Github: <a href=\"https://github.com/kamem/jquery.pluginFromDataAttr\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/kamem/jquery.pluginFromDataAttr</a>\n</li>\n</ul>\n\n<p>プラグインを複数のページなどで違う動作をしたい場合に<br>\nわざわざjsを用意してパラメーターを指定し直さないければいけないのが煩わしいと思っていました。</p>\n\n<p>その代わりにdata-*でパラメーターを指定して使うことができるjQueryプラグインです。</p>\n\n<p><a href=\"http://github.develo.org/jquery.pluginFromDataAttr/\" rel=\"nofollow noopener\" target=\"_blank\">DEMO</a></p>\n\n<h2>\n<span id=\"インストール\" class=\"fragment\"></span><a href=\"#%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\"><i class=\"fa fa-link\"></i></a>インストール</h2>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>npm install jquery.plugin-from-data-attr\n</pre></div></div>\n\n<h2>\n<span id=\"仕様\" class=\"fragment\"></span><a href=\"#%E4%BB%95%E6%A7%98\"><i class=\"fa fa-link\"></i></a>仕様</h2>\n\n<ul>\n<li>\n<p>下記のようなプラグインがあった場合に</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$('.tab').tab({\n    timer: 1000,\n    num: 1,\n    isSessionStorage: true\n});\n</pre></div></div>\n</li>\n<li>\n<p>下記のようにHTMLのdata属性を代わりに使うことができます。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>&lt;p class=\"tab\" data-timer=\"1000\" data-num=\"1\" is-session-storage=\"true\"&gt;\n</pre></div></div>\n</li>\n</ul>\n\n<h2>\n<span id=\"使い方\" class=\"fragment\"></span><a href=\"#%E4%BD%BF%E3%81%84%E6%96%B9\"><i class=\"fa fa-link\"></i></a>使い方</h2>\n\n<ol>\n<li>\n<p>スクリプトの記述（プラグインの後にjquery.pluginFromDataAttr.jsを読むこむ）</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>&lt;script src=\"js/jquery.js\"&gt;&lt;/script&gt;\n&lt;script src=\"js/jquery.tab.js\"&gt;&lt;/script&gt;\n&lt;script src=\"js/jquery.pluginFromDataAttr.js\"&gt;&lt;/script&gt;\n</pre></div></div>\n</li>\n<li>\n<p>$('適応したいタグ').dataExtend('プラグイン名');</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>&lt;script&gt;\n$(function(){\n    $('.nav').pluginFromDataAttr('tab');\n});\n&lt;/script&gt;\n</pre></div></div>\n</li>\n<li>\n<p>HTMLにdata属性を記述する（キャメルケースの場合「-」でつなげる）※ is-session-storage = isSessionStorage</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>&lt;p class=\"tab\" data-timer=\"1000\" data-num=\"1\" is-session-storage=\"true\"&gt;\n</pre></div></div>\n</li>\n</ol>\n","updated":1490510777,"tags":["HTML","JavaScript","jQuery"],"uuid":"56a9be7163cbe30ca409","title":"jQuery Pluginをパラメーターの代わりにdata属性で代用できるプラグイン","created":1490508703},{"userId":"kamem","body":"<p>自分でサクッとherokuで一旦公開したいときに<br>\nいつも迷うのでメモしておこうと思います。</p>\n\n<p>Herokuでアプリを作っている、Herokuにpcからログインできる状態を前提にしています。</p>\n\n<p>GitHubに上げている場合は「Deploy」<br>\n「App connected to GitHub」からリポジトリを選択して下さい。</p>\n\n<h2>\n<span id=\"herokuにログイン\" class=\"fragment\"></span><a href=\"#heroku%E3%81%AB%E3%83%AD%E3%82%B0%E3%82%A4%E3%83%B3\"><i class=\"fa fa-link\"></i></a>herokuにログイン</h2>\n\n<h3>\n<span id=\"ログイン\" class=\"fragment\"></span><a href=\"#%E3%83%AD%E3%82%B0%E3%82%A4%E3%83%B3\"><i class=\"fa fa-link\"></i></a>ログイン</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>heroku login\n\nEnter your Heroku credentials.\nEmail: メールアドレス\nPassword (typing will be hidden): \nAuthentication successful.\n</pre></div></div>\n\n<h3>\n<span id=\"ログアウト\" class=\"fragment\"></span><a href=\"#%E3%83%AD%E3%82%B0%E3%82%A2%E3%82%A6%E3%83%88\"><i class=\"fa fa-link\"></i></a>ログアウト</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>heroku logout\nLocal credentials cleared.\n</pre></div></div>\n\n<h2>\n<span id=\"herokuのアプリのhostを変更\" class=\"fragment\"></span><a href=\"#heroku%E3%81%AE%E3%82%A2%E3%83%97%E3%83%AA%E3%81%AEhost%E3%82%92%E5%A4%89%E6%9B%B4\"><i class=\"fa fa-link\"></i></a>herokuのアプリのHOSTを変更</h2>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>heroku config:set --app &lt;アプリ名&gt; HOST=0.0.0.0\n</pre></div></div>\n\n<h2>\n<span id=\"pagekagejsonのdevdependenciesをインストールするために\" class=\"fragment\"></span><a href=\"#pagekagejson%E3%81%AEdevdependencies%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B%E3%81%9F%E3%82%81%E3%81%AB\"><i class=\"fa fa-link\"></i></a>pagekage.jsonのdevDependenciesをインストールするために</h2>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>heroku config:set NPM_CONFIG_PRODUCTION=false\n</pre></div></div>\n\n<h2>\n<span id=\"packagejsonのscripts\" class=\"fragment\"></span><a href=\"#packagejson%E3%81%AEscripts\"><i class=\"fa fa-link\"></i></a>package.jsonのscripts</h2>\n\n<ol>\n<li>priinstallでbuildするようにする。</li>\n<li>startでサーバーを起動する</li>\n</ol>\n\n<p>--</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>\"scripts\": {\n    \"postinstall\": \"$(npm bin)/gulp build --minify=true\",\n    \"start\": \"$(npm bin)/gulp webserver\",\n},\n</pre></div></div>\n\n<p>基本的にはdeployされるとnpminstallされそのあとにpostinstallが走り<br>\n終わったらstartが実行されるという流れのようです。</p>\n\n<h2>\n<span id=\"gulpのserverの設定を変更する\" class=\"fragment\"></span><a href=\"#gulp%E3%81%AEserver%E3%81%AE%E8%A8%AD%E5%AE%9A%E3%82%92%E5%A4%89%E6%9B%B4%E3%81%99%E3%82%8B\"><i class=\"fa fa-link\"></i></a>gulpのserverの設定を変更する</h2>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>gulp.task('webserver', () =&gt; {\n    connect.server({\n        root: config.dest,\n        livereload: true,\n        host: process.env.HOST || 'localhost',\n        port: process.env.PORT || 8000\n    });\n});\n</pre></div></div>\n\n<h2>\n<span id=\"もろもろ設定が終わったら----\" class=\"fragment\"></span><a href=\"#%E3%82%82%E3%82%8D%E3%82%82%E3%82%8D%E8%A8%AD%E5%AE%9A%E3%81%8C%E7%B5%82%E3%82%8F%E3%81%A3%E3%81%9F%E3%82%89----\"><i class=\"fa fa-link\"></i></a>もろもろ設定が終わったら    </h2>\n\n<p>herokuの「Manual deploy」より「Deploy Branch」 を押して現在のリポジトリをデプロイしましょう。</p>\n\n<h2>\n<span id=\"参考\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83\"><i class=\"fa fa-link\"></i></a>参考</h2>\n\n<ul>\n<li><a href=\"http://qiita.com/unarist/items/500ccf266655c09fd877\" id=\"reference-a96684e5c5c9e7b86242\">Heroku上でもgulp-webserverを使う</a></li>\n<li><a href=\"http://qiita.com/yuku_t/items/8fd7551dc0418bf59aae\" id=\"reference-ff1f0fa537be45e6e6f5\">sprocketsではなくnodejsを使うRailsアプリをHerokuにデプロイする方法</a></li>\n</ul>\n","updated":1485224284,"tags":["Heroku","gulp"],"uuid":"260856b65e7dadde7039","title":"Herokuでgulpのwebserverをそのまま使う","created":1483777231},{"userId":"kamem","body":"<p>ランダム配置を作った時に上手く行くときはきれいな形になるのだけど<br>\n失敗するとすごい重なっちゃってあんまり綺麗に見えないことがあります・・。</p>\n\n<p>なので極力重ならないようにしてくれる仕組みを作ってみました。</p>\n\n<p>site: <a href=\"http://develo.org/jquery.random\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">http://develo.org/jquery.random</a><br>\nGitHub: <a href=\"https://github.com/kamem/jquery.random\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/kamem/jquery.random</a></p>\n\n<p>新しく作り直してnpmに登録しました。<br>\n仕様も少し変わっています。<br>\nGitHub: <a href=\"https://github.com/kamem/jquery.randomElements\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/kamem/jquery.randomElements</a></p>\n\n<p>日本語 README<br>\n<a href=\"https://github.com/kamem/jquery.randomElements/blob/master/README.jp.md\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/kamem/jquery.randomElements/blob/master/README.jp.md</a></p>\n\n<h2>\n<span id=\"仕様\" class=\"fragment\"></span><a href=\"#%E4%BB%95%E6%A7%98\"><i class=\"fa fa-link\"></i></a>仕様</h2>\n\n<ol>\n<li>生成したい親要素をしていbodyの下に生成したい場合$('body')（※ appendされます。）</li>\n<li>画像を中身に入れたい場合は画像を指定（必要がない場合は空）</li>\n<li>生成したオブジェクトが重なっている場合は指定の数分ランダムをやり直す。</li>\n</ol>\n\n<p><a href=\"http://github.develo.org/jquery.randomElements/\" rel=\"nofollow noopener\" target=\"_blank\">DEMO</a></p>\n\n<h2>\n<span id=\"使い方\" class=\"fragment\"></span><a href=\"#%E4%BD%BF%E3%81%84%E6%96%B9\"><i class=\"fa fa-link\"></i></a>使い方</h2>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>&lt;script type=\"text/javascript\" src=\"js/jquery.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"js/jquery.random.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n    $(function(){\n        $('body').random('&lt;img src=\"img/img.png\"&gt;');\n    });\n&lt;/script&gt;\n</pre></div></div>\n\n<h2>\n<span id=\"オプション\" class=\"fragment\"></span><a href=\"#%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3\"><i class=\"fa fa-link\"></i></a>オプション</h2>\n\n<h3>\n<span id=\"初期設定\" class=\"fragment\"></span><a href=\"#%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A\"><i class=\"fa fa-link\"></i></a>初期設定</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>tagName: 'p',\nclassName: 'randomContent',\ncontent: '',\nnum: 30,\nstageWidth: $content.width(),\nstageHeight: $content.height(),\nwidth: 100,\nheight: 100,\nmin: 10,\nisSize: true,\ntryCount: 10,\nadjustment: 0\n</pre></div></div>\n\n<ul>\n<li>tagName {String} 生成したいタグの名前</li>\n<li>className {String} タグに付けるクラス名（randomContent + 連番）</li>\n<li>content {String} タグの中身（画像など入れ込みたい場合など）</li>\n<li>num {Number} 生成したいタグの個数</li>\n<li>stageWidth {Number} 領域の横幅</li>\n<li>stageHeight {Number} 領域の縦幅</li>\n<li>width {Number} 画像の横幅最大値 （widthとheightが同じ値の場合縦横比を保ってランダムにします。）</li>\n<li>height {Number}   画像の縦幅最大値</li>\n<li>min {Number} 画像の最小値</li>\n<li>isSize {Boolean} サイズをランダムにするか</li>\n<li>tryCount {Number} 配置が重なっていた時に再度ランダムをやり直す回数</li>\n<li>adjustment {Number} 重なり具合をどのぐらい許容するか</li>\n</ul>\n","updated":1475659123,"tags":["HTML","CSS","JavaScript","jQuery"],"uuid":"3537f69f632969aef7a7","title":"タグをランダム配置＆サイズにしてなるべく重ならないように配置するjQueryプラグイン","created":1402104947},{"title":"スムーズにスクロールするjQuery プラグイン","created":1405175936,"userId":"kamem","body":"<p>新しく今プラグインを作りなおしました。<br>\n<a href=\"http://qiita.com/kamem/items/c94c4dc75516b36f3766\" class=\"autolink\" id=\"reference-f54a6b027c6ff1853090\">http://qiita.com/kamem/items/c94c4dc75516b36f3766</a></p>\n\n<ul>\n<li>site: <a href=\"http://develo.org/jquery.smoothAnchor\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">http://develo.org/jquery.smoothAnchor</a>\n</li>\n<li>Github: <a href=\"https://github.com/kamem/jquery.smoothAnchor\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/kamem/jquery.smoothAnchor</a>\n</li>\n</ul>\n\n<p><a href=\"http://github.develo.org/jquery.smoothAnchor/\" rel=\"nofollow noopener\" target=\"_blank\">DEMO</a></p>\n\n<p>スムーズスクロールを実装したいときに、この機能はないのかなぁ・・。とか探したりするのが大変だったので、自分のなかで必要なきのうを切り替えて使えるスムーズルクロールをjQueryのanimateのscrollTop,scrollLeftをつかってjQuery Pluginを作ってみました！</p>\n\n<p>前々からつくってはいたのですが、昔つくっていた拙いコードが残っていたので少し整理しました。</p>\n\n<h2>\n<span id=\"仕様\" class=\"fragment\"></span><a href=\"#%E4%BB%95%E6%A7%98\"><i class=\"fa fa-link\"></i></a>仕様</h2>\n\n<ol>\n<li>アンカーで飛んだあとアドレスもちゃんと変更。</li>\n<li>座標を指定してのページ内リンク。</li>\n<li>アクセス時、座標アンカーがついている場合その位置に移動します。</li>\n<li>アクセス時ページの先頭からその場所までスムーズに移動できるようにすることもできます。</li>\n<li>移動後の関数実行</li>\n<li>スクロール途中、マウススクロールしたときにカクカクした動きをする問題をスクロールをストップすることで回避。</li>\n</ol>\n\n<h2>\n<span id=\"使い方\" class=\"fragment\"></span><a href=\"#%E4%BD%BF%E3%81%84%E6%96%B9\"><i class=\"fa fa-link\"></i></a>使い方</h2>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>&lt;script type=\"text/javascript\" src=\"js/jquery.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"js/smoothAnchor.js\"&gt;&lt;/script&gt;\n</pre></div></div>\n\n<h3>\n<span id=\"初期設定\" class=\"fragment\"></span><a href=\"#%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A\"><i class=\"fa fa-link\"></i></a>初期設定</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$(window).smoothAnchorInit();\n$('a[href^=\"#\"]').smoothAnchor();\n</pre></div></div>\n\n<h3>\n<span id=\"a要素以外につけたい場合\" class=\"fragment\"></span><a href=\"#a%E8%A6%81%E7%B4%A0%E4%BB%A5%E5%A4%96%E3%81%AB%E3%81%A4%E3%81%91%E3%81%9F%E3%81%84%E5%A0%B4%E5%90%88\"><i class=\"fa fa-link\"></i></a>a要素以外につけたい場合</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$('h1').smoothAnchor({easing : 'easeOutQuart',speed : 1000,target: '#header'});\n</pre></div></div>\n\n<h3>\n<span id=\"flashから実行する場合\" class=\"fragment\"></span><a href=\"#flash%E3%81%8B%E3%82%89%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B%E5%A0%B4%E5%90%88\"><i class=\"fa fa-link\"></i></a>Flashから実行する場合</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>ExternalInterface.call(\"smoothAnchor\",{easing : \"easeOutElastic\",speed : 1000,target : \"#header\"});\n</pre></div></div>\n\n<p>引数がない場合は初期設定になります。</p>\n\n<h3>\n<span id=\"移動後に関数実行\" class=\"fragment\"></span><a href=\"#%E7%A7%BB%E5%8B%95%E5%BE%8C%E3%81%AB%E9%96%A2%E6%95%B0%E5%AE%9F%E8%A1%8C\"><i class=\"fa fa-link\"></i></a>移動後に関数実行</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$('a[href^=\"#\"]').smoothAnchor({\n    easing: 'easeOutQuart',\n    speed: 1000,\n    target: '#header',\n    complate:'test'\n});\n</pre></div></div>\n\n<h3>\n<span id=\"座標を指定してリンク\" class=\"fragment\"></span><a href=\"#%E5%BA%A7%E6%A8%99%E3%82%92%E6%8C%87%E5%AE%9A%E3%81%97%E3%81%A6%E3%83%AA%E3%83%B3%E3%82%AF\"><i class=\"fa fa-link\"></i></a><a>座標を指定してリンク</a>\n</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>#1000,1000（x, y）\n</pre></div></div>\n\n<h2>\n<span id=\"options\" class=\"fragment\"></span><a href=\"#options\"><i class=\"fa fa-link\"></i></a>Options</h2>\n\n<h3>\n<span id=\"初期設定-1\" class=\"fragment\"></span><a href=\"#%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A-1\"><i class=\"fa fa-link\"></i></a>初期設定</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>//ロード時の処理\n$(window).smoothAnchorInit({\n    easing: 'easeOutQuart',\n    speed: 1000,\n    complate:'',\n    isLoadedSmooth: true,\n    isLoadedSmoothQuestionMark: true,\n    isClickStop: false,\n    isTopScroll: true,\n    isLeftScroll: true\n});\n\n//クリック時の処理\n$('a[href^=\"#\"]').smoothAnchor({\n    easing: 'easeOutQuart',\n    speed: 1000,\n    delay: 0,\n    target: '#header',\n    complate: '',\n    isAddHash: true,\n    isTopScroll: true,\n    isLeftScroll: true\n});\n</pre></div></div>\n\n<ul>\n<li>easing: {String} イージングの種類,</li>\n<li>speed: {Number} speed,</li>\n<li>delay: {Number} delay,</li>\n<li>target: {String} hrefがないタグの場合の直接指定</li>\n<li>complate: {Function} スクロール後の関数名</li>\n<li>isAddHash: {Boolean} スクロール後にhashを追加するか</li>\n<li>isTopScroll: {Boolean} 縦方向にスクロールするか</li>\n<li>isLeftScroll: {Boolean} 横方向にスクロールするか</li>\n<li>isLoadedSmooth: {Boolean} ロード時にトップからスムーズスクロールするか</li>\n<li>isLoadedSmoothQuestionMark: ?を使っての座標指定での移動を許可するか（?100,100）</li>\n<li>isClickStop: {Boolean} スムーズスクロール時にクリックした場合に処理を停止するか</li>\n</ul>\n","updated":1469961363,"tags":["HTML","JavaScript","jQuery"],"uuid":"c20247e8dc92bd295c14"},{"updated":1449992429,"tags":["JavaScript","jQuery"],"uuid":"25fbb1ca779da9155800","title":"パララックス効果を再現するjQueryプラグイン「jquery.parallax」","created":1400512539,"userId":"kamem","body":"<p><strong>新しく使いやすく作り直しました。</strong> <br>\n<a href=\"http://qiita.com/kamem/items/1c49f329356e80bf3ba2\" id=\"reference-b35d05966e8e518c18e6\">スクロールによってCSSを変更し、パララックス効果を実現するjQueryプラグイン</a><br>\nこの記事のものとは使い方が少し異なりますが、同じ機能をもっています。</p>\n\n<hr>\n\n<p>site: <a href=\"http://develo.org/2014/04/21/0227.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">http://develo.org/2014/04/21/0227.html</a><br>\nGitHub: <a href=\"https://github.com/kamem/jquery.parallax\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/kamem/jquery.parallax</a></p>\n\n<p>仕事でパララックス効果を使ったサイト作る機会があり、<br>\n使い勝手のいいプラグインないかなぁーと思って探していたのですが。<br>\nなかなか見つかりませんでした・・。</p>\n\n<p>パララックスの仕組みってそれほど難しくないんだねぇーと思いながら作り始めたのですが・・。</p>\n\n<p>なかなかいろいろな機能を組み込みだすとなかなか大変な感じで；<br>\n結構前に作った奴は自分だけ使えればいいやーと思い、プラグイン化していなかったのですが、最近ようやくプラグイン化しました。</p>\n\n<ul>\n<li><a href=\"http://github.develo.org/jquery.parallax/\" rel=\"nofollow noopener\" target=\"_blank\">DEMO : 縦</a></li>\n<li><a href=\"http://github.develo.org/jquery.parallax/sample2/\" rel=\"nofollow noopener\" target=\"_blank\">DEMO : 横</a></li>\n</ul>\n\n<h2>\n<span id=\"仕様\" class=\"fragment\"></span><a href=\"#%E4%BB%95%E6%A7%98\"><i class=\"fa fa-link\"></i></a>仕様</h2>\n\n<p>*3つのタイプでparallaxサイトを実装できます。</p>\n\n<ol>\n<li>startからendの位置までの距離をfromStyleからtoStyleまでのstyleでeasingの種類にそって実行する。</li>\n<li>styleをスクロール量 / speedででコンテンツを動かす。</li>\n<li>指定した位置を通過したときに関数を実行する。</li>\n</ol>\n\n<h2>\n<span id=\"使い方\" class=\"fragment\"></span><a href=\"#%E4%BD%BF%E3%81%84%E6%96%B9\"><i class=\"fa fa-link\"></i></a>使い方</h2>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>&lt;script src=\"js/jquery.js\"&gt;&lt;/script&gt;\n&lt;script src=\"js/jquery.parallax.js\"&gt;&lt;/script&gt;\n</pre></div></div>\n\n<h2>\n<span id=\"オプション\" class=\"fragment\"></span><a href=\"#%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3\"><i class=\"fa fa-link\"></i></a>オプション</h2>\n\n<ul>\n<li><p>parallax : {} - typeによってそれに合わせた内容を指定（ここの説明はあとで書いています。）</p></li>\n<li><p>direction : y or x スクロールの方向を指定</p></li>\n<li>\n<p>type : 'type1' parallaxのタイプの設定</p>\n\n<ul>\n<li>type1 - startのendの位置までの距離をfromStyleからtoStyleまでのstyleでeasingにそって実行する。</li>\n<li>type2 - styleをスクロール量 / speedででコンテンツを動かす。</li>\n<li>type3 - 指定した位置を通過したときに関数を実行する。</li>\n</ul>\n</li>\n<li>\n<p>type2で使うoption</p>\n\n<ul>\n<li>style :  どのCSSに対して処理を行うか</li>\n<li>fixPosition :  スクロール位置がどの位置にフィックスした時に画像の位置を意図した位置に持ってきたいか</li>\n<li>speed  : スクロール量に合わせてどのぐらいの量で動かしたいか(Y / speed)</li>\n<li>minValue : 最低の値はどのぐらいか</li>\n<li>maxValue : 最高の値はどのぐらいか</li>\n<li>adjustment : 背景などの位置をフィックスさせたい位置は0からどれぐらいずれているか</li>\n</ul>\n</li>\n<li>\n<p>type3で使うoption</p>\n\n<ul>\n<li>contentStartLinePercent : コンテンツが動き始めるラインを、windowの高さの割合で指定（起点は上から）真ん中の場合は50</li>\n<li>startAnimation : ''  contentStartLineを上から下に向かって通過した時に実行する関数（アニメーション）</li>\n<li>endAnimation : '' contentStartLineを下から上に向かって通過した時に実行する関数（アニメーション）</li>\n<li>fixPosition : contentStartLineがこの位置に来た時点で関数を実行、もし指定がない場合はparallaxに指定したoffsetの情報がラインになる</li>\n</ul>\n</li>\n</ul>\n\n<h3>\n<span id=\"初期設定\" class=\"fragment\"></span><a href=\"#%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A\"><i class=\"fa fa-link\"></i></a>初期設定</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>parallax : {},\n\ndirection : 'y',\n\n// parallax Type\ntype : 'type1',\n\n//type2\nstyle : 'top',\nfixPosition : 0,\nspeed : 1,\nminValue : -999999999999,\nmaxValue : 999999999999,\nadjustment : 0,\n\n// type3\ncontentStartLinePercent : 50,\nstartAnimation : '',\nendAnimation : ''\n</pre></div></div>\n\n<h2>\n<span id=\"typeに合わせたparallaxの指定\" class=\"fragment\"></span><a href=\"#type%E3%81%AB%E5%90%88%E3%82%8F%E3%81%9B%E3%81%9Fparallax%E3%81%AE%E6%8C%87%E5%AE%9A\"><i class=\"fa fa-link\"></i></a>typeに合わせたparallaxの指定</h2>\n\n<h3>\n<span id=\"type1\" class=\"fragment\"></span><a href=\"#type1\"><i class=\"fa fa-link\"></i></a>type1</h3>\n\n<p>下記のような連想配列を渡す</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>例）\nparallaxObj = {\n    name : {\n        obj : $('#header'), // 動かすオブジェクト\n        tagMotions : {\n            motion1 : [{\n                start : 1000, // 動きのスタートのスクロール位置\n                end : 1500, // 動きの終わりスクロール位置\n                fromStyle : {\n                    left : {Number}\n                },\n                toStyle : {\n                    left : {Number}\n                },\n                easing : 'easeInOutElastic' // イージングの指定\n            },\n            {\n                start : 1300, //動きのスタートのスクロール位置\n                end : 1500, //動きの終わりスクロール位置\n                fromStyle : {\n                    opacity : 1\n                },\n                toStyle : {\n                    opacity : 0.5\n                },\n                easing : 'liner' // イージングの指定\n            }],\n            motion2 : [{\n                //モーションいくつでも指定可能\n                //（ただしmotion1で指定している一番大きいendより、motion2のstartは大きくなるようにしてください。）\n                ....\n            }]\n        };\n    };\n};\n\n\n$(window).parallax({\n    parallax : parallaxObj\n});\n</pre></div></div>\n\n<h3>\n<span id=\"type2\" class=\"fragment\"></span><a href=\"#type2\"><i class=\"fa fa-link\"></i></a>type2</h3>\n\n<p>動かしたいコンテンツを直接指定</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>例）\n$(window).parallax({\n    parallax : $('#type2'),\n    type : 'type2',\n    style : 'background-positionTop',\n    fixPosition : $('#type2').offset().top,\n    speed : -2,\n    maxPosition : 0,\n    adjustment : -200,\n    contentStartLinePercent: 50\n});\n</pre></div></div>\n\n<h3>\n<span id=\"type3\" class=\"fragment\"></span><a href=\"#type3\"><i class=\"fa fa-link\"></i></a>type3</h3>\n\n<p>基準のポジション（$(hoge).offset().top）のタグ（$(hoge)）を指定<br>\nもしくはstartAnimation、endAnimationの引数targetに指定したいタグ</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>例）\n$(window).parallax({\n    parallax : $('#type3'),\n    type : 'type3',\n    fixPosition : $('#type3').offset().top, //もしもfixPositionがある場合はparallaxで指定したタグのoffset().topの値よりもfixPositionが優先されます。\n    startAnimation: function(e){showAnimate(e);}, //eにはparallaxで指定したタグがe.targetで取れます。\n    endAnimation: function(e){hideAnimate(e);},\n    contentStartLinePercent: 30\n});\n</pre></div></div>\n"},{"updated":1445177710,"tags":["HTML","CSS","JavaScript","Compass","gulp"],"uuid":"09968c62a5113289939f","title":"サイトを作り始める時の初期準備 2015","created":1444631389,"userId":"kamem","body":"<p>サイトを作り始めると時にいつも「どうしようかなぁ・・。」と迷って<br>\nとりあえずその時の最善だと思うものを用意してやってはいたのですが、</p>\n\n<p>そろそろ「ちゃんと考えなおそう！」と思いたち<br>\n作りはじめる前にする準備とそれに伴うデフォルトのファイルを作ってみました。</p>\n\n<p>GitHub: <a href=\"https://github.com/kamem/webSiteCreatePack\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/kamem/webSiteCreatePack</a></p>\n\n<h2>\n<span id=\"主な内容\" class=\"fragment\"></span><a href=\"#%E4%B8%BB%E3%81%AA%E5%86%85%E5%AE%B9\"><i class=\"fa fa-link\"></i></a>主な内容</h2>\n\n<ol>\n<li>sass,compassはBundlerを使ってプロジェクトごとに管理。</li>\n<li>jsのパッケージ管理はnpmで主に管理して、npmで管理しきれないものに関してはbowerを使う。（好みで＾＾；）</li>\n<li>jsはjsxの場合はwebpack,babelを使い。jsの場合は生のjsを使う。</li>\n<li>作業フォルダと公開フォルダを分けて公開フォルダはバージョン管理しないことで二重管理をさける。</li>\n</ol>\n\n<h2>\n<span id=\"必須\" class=\"fragment\"></span><a href=\"#%E5%BF%85%E9%A0%88\"><i class=\"fa fa-link\"></i></a>必須</h2>\n\n<ol>\n<li>Node (最新版推奨)</li>\n<li>\n<p>Gulp</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>npm install -g gulp\n</pre></div></div>\n</li>\n<li><p>bower</p></li>\n<li><p>Ruby</p></li>\n<li><p>Bundler</p></li>\n</ol>\n\n<h3>\n<span id=\"フォルダ構成\" class=\"fragment\"></span><a href=\"#%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80%E6%A7%8B%E6%88%90\"><i class=\"fa fa-link\"></i></a>フォルダ構成</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>├ root (公開用)\n└ src (作業用)\n    ├ css\n    ├ js\n    └ img\n</pre></div></div>\n\n<p>src（作業用）フォルダで作業した内容をgulpでwatchしてroot（公開用）</p>\n\n<p>rootはバージョン管理をしないように<code>.gitignore</code>内で省いています。<br>\nsrc側で作業しroot側で作業しないようにします。</p>\n\n<h4>\n<span id=\"フォルダ構成の名前を変えたい場合\" class=\"fragment\"></span><a href=\"#%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80%E6%A7%8B%E6%88%90%E3%81%AE%E5%90%8D%E5%89%8D%E3%82%92%E5%A4%89%E3%81%88%E3%81%9F%E3%81%84%E5%A0%B4%E5%90%88\"><i class=\"fa fa-link\"></i></a>フォルダ構成の名前を変えたい場合</h4>\n\n<p><code>gulpfile_settings.js</code>の内容を書き換えてください。</p>\n\n<h2>\n<span id=\"準備\" class=\"fragment\"></span><a href=\"#%E6%BA%96%E5%82%99\"><i class=\"fa fa-link\"></i></a>準備</h2>\n\n<h3>\n<span id=\"jsの準備\" class=\"fragment\"></span><a href=\"#js%E3%81%AE%E6%BA%96%E5%82%99\"><i class=\"fa fa-link\"></i></a>jsの準備</h3>\n\n<p>jQueryなど必要なjsがあればpackage.jsonに記述するか。<br>\nもしくはbower.jsonに記述してください。</p>\n\n<p>個人的にはnpmで管理できる範囲であればpackage.jsonに書き、<br>\nnpmにないものであればbower側に記述するように使い方を分けています。<br>\nフロント側で必要なファイルはbowerで一括管理も良いかなと思っています。</p>\n\n<p>package.json</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>\"dependencies\": {\n    \"jquery\": \"\",\n    \"react\": \"\",\n    \"react-router\": \"\"\n}\n</pre></div></div>\n\n<p>bower.json</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>\"dependencies\": {\n    \"google-code-prettify\": \"\",\n}\n</pre></div></div>\n\n<p>それぞれプロジェクトを始める際にバージョン指定をしてください。<br>\n空の状態だと最新がダウンロードされますが、<br>\n時間がたち最新バージョンが変わった場合には正常に動作しなくなってしまう可能性があるためです。</p>\n\n<h4>\n<span id=\"バージョンをひとつひとつ設定するのがめんどくさい場合\" class=\"fragment\"></span><a href=\"#%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%82%92%E3%81%B2%E3%81%A8%E3%81%A4%E3%81%B2%E3%81%A8%E3%81%A4%E8%A8%AD%E5%AE%9A%E3%81%99%E3%82%8B%E3%81%AE%E3%81%8C%E3%82%81%E3%82%93%E3%81%A9%E3%81%8F%E3%81%95%E3%81%84%E5%A0%B4%E5%90%88\"><i class=\"fa fa-link\"></i></a>バージョンをひとつひとつ設定するのがめんどくさい場合。</h4>\n\n<p>下記を使ってnode_modulesをインストールするとpackage.jsonに現在の最新のバージョンが自動で指定できます。</p>\n\n<ul>\n<li><a href=\"http://qiita.com/okunishinishi@github/items/7629b58d1c3d464738dc\" id=\"reference-6afb2621243048b868e0\">package.jsonのdependenciesを自動更新するスクリプトを書く</a></li>\n</ul>\n\n<h3>\n<span id=\"scssの準備\" class=\"fragment\"></span><a href=\"#scss%E3%81%AE%E6%BA%96%E5%82%99\"><i class=\"fa fa-link\"></i></a>scssの準備</h3>\n\n<p>自分で使っているscssファイルを<code>src/css</code>内に入れてください。<br>\n自分の場合bowerでinstallしてcpで移動しています。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>bower install https://github.com/kamem/compass.default.git\ncp bower_components/compass.default/sass/* src/css\n</pre></div></div>\n\n<p>postcssを使いたい場合は<code>gulpfile_settings.js</code>を修正してscssではなくcssをwatchするようにします。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>settings.watch.css.files = settings.watch.css.dir + '**/*.css';\n</pre></div></div>\n\n<h4>\n<span id=\"gemfileを確認しておきましょうsasscompassのバージョンを指定\" class=\"fragment\"></span><a href=\"#gemfile%E3%82%92%E7%A2%BA%E8%AA%8D%E3%81%97%E3%81%A6%E3%81%8A%E3%81%8D%E3%81%BE%E3%81%97%E3%82%87%E3%81%86sasscompass%E3%81%AE%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%82%92%E6%8C%87%E5%AE%9A\"><i class=\"fa fa-link\"></i></a>Gemfileを確認しておきましょう。（sass,compassのバージョンを指定）</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>source \"https://rubygems.org\"\n\ngem 'sass', '3.4.0.rc.3'\ngem 'compass', '1.0.3'\n</pre></div></div>\n\n<h3>\n<span id=\"ファイルを生成\" class=\"fragment\"></span><a href=\"#%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E7%94%9F%E6%88%90\"><i class=\"fa fa-link\"></i></a>ファイルを生成</h3>\n\n<ol>\n<li>\n<p>package.jsonのnode_modulesをinstall</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>sudo npm install\n</pre></div></div>\n</li>\n<li>\n<p>Gemfileに従い、sass,compassをinstall</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>bundle install\n</pre></div></div>\n</li>\n<li>\n<p>bower.jsonを使ってjsをダウンロードしたい場合</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>bower install\n</pre></div></div>\n</li>\n</ol>\n\n<h2>\n<span id=\"作業\" class=\"fragment\"></span><a href=\"#%E4%BD%9C%E6%A5%AD\"><i class=\"fa fa-link\"></i></a>作業</h2>\n\n<h3>\n<span id=\"開始\" class=\"fragment\"></span><a href=\"#%E9%96%8B%E5%A7%8B\"><i class=\"fa fa-link\"></i></a>開始</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>gulp\n</pre></div></div>\n\n<h3>\n<span id=\"スプライトファイルの制作\" class=\"fragment\"></span><a href=\"#%E3%82%B9%E3%83%97%E3%83%A9%E3%82%A4%E3%83%88%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E5%88%B6%E4%BD%9C\"><i class=\"fa fa-link\"></i></a>スプライトファイルの制作</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>// \"src/img/sprite/**/*.png\"内のファイルをスプライト化\ngulp sprites\n</pre></div></div>\n\n<p><code>src/img/sprite/</code>内に<code>sprite-**.png</code>というファイルがフォルダの数分生成されます。<br>\n<code>src/css</code>内に<code>src/img/sprite/</code>以下のフォルダの数分のscssの設定ファイルが生成されます。</p>\n\n<p>ex) <code>num</code>フォルダの場合</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>sprite-num.png\n_num.scss\n</pre></div></div>\n\n<h3>\n<span id=\"svgからfontの制作\" class=\"fragment\"></span><a href=\"#svg%E3%81%8B%E3%82%89font%E3%81%AE%E5%88%B6%E4%BD%9C\"><i class=\"fa fa-link\"></i></a>svgからfontの制作</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>// \"src/font/**/*.svg\"内のファイルをfont化\ngulp svgfonts\n</pre></div></div>\n\n<p><code>src/font/</code>内にfontがフォルダの数分生成されます。<br>\n<code>src/css</code>内に<code>src/font/</code>以下のフォルダの数分のscssの設定ファイルが生成されます。<br>\nfontの内容を確認したい場合は<code>src/css/font/sns_fontlist.html</code>を見るとfont一覧を確認できます。</p>\n\n<h4>\n<span id=\"fontの使い方\" class=\"fragment\"></span><a href=\"#font%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9\"><i class=\"fa fa-link\"></i></a>fontの使い方</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>@import \"font/_name\";\n\n.test {\n    font-family: $name-test; //変数で文字コードを取ってくることができます。\n    //(フォルダ名 - ファイル名)\n}\n</pre></div></div>\n\n<p>吐き出すscssの内容を変えたい場合はsrc/css/font/templates/css.scssを編集してください。</p>\n\n<h3>\n<span id=\"実作業\" class=\"fragment\"></span><a href=\"#%E5%AE%9F%E4%BD%9C%E6%A5%AD\"><i class=\"fa fa-link\"></i></a>実作業</h3>\n\n<h4>\n<span id=\"html\" class=\"fragment\"></span><a href=\"#html\"><i class=\"fa fa-link\"></i></a>html</h4>\n\n<p><a href=\"https://www.npmjs.com/package/gulp-usemin\" rel=\"nofollow noopener\" target=\"_blank\">usemin</a>を使っています。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>&lt;!-- build:js js/common.js --&gt;\n&lt;script src=\"../node_modules/jquery/dist/jquery.js\"&gt;&lt;/script&gt;\n&lt;script src=\"../bower_components/google-code-prettify/src/prettify.js\"&gt;&lt;/script&gt;\n&lt;!-- endbuild --&gt;\n</pre></div></div>\n\n<p><code>root/js/common.js</code>として<code>jquery.js</code> <code>prettify.js</code>をまとめたファイルが生成されます。<br>\nhtmlは<code>root/</code>に下記ように変換され出力されます。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>&lt;script src=\"js/common.js\"&gt;&lt;/script&gt;\n</pre></div></div>\n\n<h4>\n<span id=\"js\" class=\"fragment\"></span><a href=\"#js\"><i class=\"fa fa-link\"></i></a>js</h4>\n\n<p><code>jsx</code>と拡張子をつけることによって、webpackとbabelを使えるようにしています。<br>\nwebpackとbabelを使わない場合は拡張子を<code>js</code>にしてください。</p>\n\n<h3>\n<span id=\"確認方法\" class=\"fragment\"></span><a href=\"#%E7%A2%BA%E8%AA%8D%E6%96%B9%E6%B3%95\"><i class=\"fa fa-link\"></i></a>確認方法</h3>\n\n<p>localhost:8888 で確認できます。</p>\n\n<h2>\n<span id=\"公開\" class=\"fragment\"></span><a href=\"#%E5%85%AC%E9%96%8B\"><i class=\"fa fa-link\"></i></a>公開</h2>\n\n<ul>\n<li>\n<p>CSS,JSの圧縮</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>gulp build --minify true\n</pre></div></div>\n</li>\n</ul>\n\n<p>公開前に上記を実行することでroot内に圧縮されたファイルが出来上がります。</p>\n\n<p>こんな感じで今後サイトを作り始める際はやっていこうかと思いました！<br>\n最近いろいろと移り変わりが激しいのでまた設定など変わっていくかと思いますがその都度更新などしていこうかと思います。</p>\n\n<p>最近ではpostcssなど流行っているので試してみようかと思ったのですが<br>\nいま現状postcssを使おうと思うとエディタ側が対応しきれていない状況なのでちょっと使いづらいかなぁと思いました。<br>\nシンプルだし早いッて噂なので試してみたいなぁとは思っているのですが今後に期待です！</p>\n"},{"userId":"kamem","body":"<p>クリックイベントをつけようと思った時に、どうやってつけようかなぁ。とかいつも迷っていたので汎用的に使えるものを作ってみました。</p>\n\n<p>プラグイン化するほどでもないかなぁってことで、ソースのみ書いちゃってます。</p>\n\n<p>こういうのってプラグイン化しちゃったほうがいいのかな。<br>\nちょっと時間あるとき整理してプラグイン化してgithub公開しようかと思います。<br>\nとりあえずgaのクリックイベント周り設定しやすくしてくれるjsです。</p>\n\n<p>手順・仕様は下記のとおりです。</p>\n\n<ol>\n<li>取得したいタグにdata-gaをつける。</li>\n</ol>\n\n<h2>\n<span id=\"aタグにつけた場合単一-\" class=\"fragment\"></span><a href=\"#a%E3%82%BF%E3%82%B0%E3%81%AB%E3%81%A4%E3%81%91%E3%81%9F%E5%A0%B4%E5%90%88%E5%8D%98%E4%B8%80-\"><i class=\"fa fa-link\"></i></a>aタグにつけた場合（単一） </h2>\n\n<ol>\n<li>\n<strong>data-ga=\"値\"が入っている場合</strong>は値を取得</li>\n<li>\n<strong>値がなく</strong>、そのなかの画像にalt属性がついていた場合にはaltの値を取得</li>\n<li>上記どちらにも当てはまらない場合は、タグ内のテキストを取得</li>\n</ol>\n\n<h2>\n<span id=\"aタグ以外についていた場合複数-\" class=\"fragment\"></span><a href=\"#a%E3%82%BF%E3%82%B0%E4%BB%A5%E5%A4%96%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6%E3%81%84%E3%81%9F%E5%A0%B4%E5%90%88%E8%A4%87%E6%95%B0-\"><i class=\"fa fa-link\"></i></a>aタグ以外についていた場合（複数） </h2>\n\n<ol>\n<li>タグ内のaタグに反応</li>\n<li>\n<p><strong>data-ga=\"値\"が入っている場合</strong>は値を取得の形で取得 </p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>'data-ga=\"値\"' + (img alr || タグ内text)\n</pre></div></div>\n</li>\n<li><p><strong>値がなく</strong>、aタグ内の画像にalt属性がついていた場合にはaltの値を取得</p></li>\n<li><p>上記どちらにも当てはまらない場合は、タグ内のテキストを取得</p></li>\n</ol>\n\n<p>最後に<code>Category</code>にページのタイトルを入れ<br>\n取得したテキスト値を<code>Label</code>に入れ<code>send event</code>で送信</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>ga('send', 'event', 'ページのタイトル', 'click', '値');\n</pre></div></div>\n\n<h2>\n<span id=\"実際のソース\" class=\"fragment\"></span><a href=\"#%E5%AE%9F%E9%9A%9B%E3%81%AE%E3%82%BD%E3%83%BC%E3%82%B9\"><i class=\"fa fa-link\"></i></a>実際のソース</h2>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>var gaClickEvent = (function() {\n    var title = $('title').text();\n    $('[data-ga] a, a[data-ga]').on('click',\n            function(e) {\n                var currentTarget = e.currentTarget;\n                var $this = $(currentTarget);\n                var alt = $this.find('&gt; img').prop('alt');\n                var gaq = $this.data('ga');\n\n                if(gaq === undefined) {\n                    var parentGaq = $this.parents('[data-ga]').data('ga');\n                    var mainText = alt ? alt : $this.text();\n\n                    var text = parentGaq ? parentGaq + ' ' + mainText : mainText;\n                } else {\n                    var text = gaq ? gaq :\n                            alt ? alt : $this.text();\n                }\n\n                if(typeof ga !== 'undefined') {\n                    ga('send', 'event', title, 'click', text);\n                }\n            }\n    );\n})();\n</pre></div></div>\n","updated":1430237173,"tags":["jQuery"],"uuid":"7e426fcb88857c12f9df","title":"data-ga属性をつけるとGoogle Analyticsのクリックイベントを取得してくれるJavascript","created":1430237173},{"updated":1430042898,"tags":["Sass"],"uuid":"323d2b35216b748e590c","title":"sassでz-indexをまとめて管理しておく＆配列順に番号をつけてくれる関数","created":1428373358,"userId":"kamem","body":"<p><code>z-index</code>を使っていると、この要素ってどのぐらいの値なんだっけ・・。と迷うことがあったり<br>\nとりあえず<code>99999</code>とか大きい数字つけとくかなーみたいな考えになったりしちゃう時がありますね＾＾；</p>\n\n<p>そんなことにならないように1つのところでz-indexを管理して、見やすくなるような関数を作ってみました。</p>\n\n<p><a href=\"http://codepen.io/kame/pen/ogRWbm\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">http://codepen.io/kame/pen/ogRWbm</a></p>\n\n<h2>\n<span id=\"sass\" class=\"fragment\"></span><a href=\"#sass\"><i class=\"fa fa-link\"></i></a>sass</h2>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$z-index: (\n    test2\n    test1\n    test3\n);\n\n@function z-index($name, $list: $z-index) {\n    @return abs(index($list, $name) - length($list) - 1);\n}\n\n\n@each $name in $z-index {\n    #{'.' + $name} {\n        z-index: z-index($name);\n    }\n};\n</pre></div></div>\n\n<h2>\n<span id=\"出力css\" class=\"fragment\"></span><a href=\"#%E5%87%BA%E5%8A%9Bcss\"><i class=\"fa fa-link\"></i></a>出力css</h2>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>.test1 {\n    z-index: 2; \n}\n.test2 {\n    z-index: 3; \n}\n.test3 {\n    z-index: 1; \n}\n</pre></div></div>\n\n<p><code>$z-index</code>に追加したり配列の順番をかえたりすると、<br>\n配列通りに上から並んでくれるので、分かりやすいかなぁと思います。</p>\n"},{"userId":"kamem","body":"<p>何かで挟まれた値の中身だけは残して周りの記述を置換したい・・。<br>\nだけど値が違ったりしてうまくいっぱつで置換できない・・。</p>\n\n<p>みたいな時ってありますよね。</p>\n\n<p>Codaとかだと標準で簡単に置換できるようにその機能がついていたりするのですが、<br>\nintelliJとかSublimeTextだとどうやって書くんだろうと思いしらべてみました。</p>\n\n<p>下記の正規表現を使えばうまく置換できるようです。</p>\n\n<p>それぞれのエディタの置換タブを出すショートカット</p>\n\n<ul>\n<li>intelliJ: Command + R</li>\n<li>SublimeText: Command + Option + F(検索タブの一番左の「.*」にチェック)</li>\n</ul>\n\n<h2>\n<span id=\"scssの例\" class=\"fragment\"></span><a href=\"#scss%E3%81%AE%E4%BE%8B\"><i class=\"fa fa-link\"></i></a>SCSSの例</h2>\n\n<p>「<a href=\"/include\" class=\"user-mention js-hovercard\" title=\"include\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"include\">@include</a> プロパティ(値);」を「プロパティ:値;」に置換するための正規表現</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>//置換したい文字列\n@include (.*)\\((.*)\\);\n\n//置換後の文字列\n$1\\: $2\\;\n</pre></div></div>\n\n<h3>\n<span id=\"二重括弧対策\" class=\"fragment\"></span><a href=\"#%E4%BA%8C%E9%87%8D%E6%8B%AC%E5%BC%A7%E5%AF%BE%E7%AD%96\"><i class=\"fa fa-link\"></i></a>二重括弧対策</h3>\n\n<p>2重で括弧がある場合の対策。ちゃんと使われるであろう文字列を指定します。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>//置換したい文字列\n@include ([\\w-]+)\\(([\\s\\w\\(\\)\\,\\./%!\\$\\'\\\"#\\-\\+]+)\\);\n</pre></div></div>\n\n<p>このように置換したい部分を<code>(.*)</code>で囲み、置換後の正規表現で<code>$1</code>とすることでいけるようです。<br>\n<code>$1</code>,<code>$2</code>と付いているのは<code>(.*)</code>で囲った部分の1つ目と2つ目という意味です。</p>\n\n<p>わりと作業しているとこの辺りはちょいちょい出てくるので覚えておくと便利ですね。</p>\n\n<h2>\n<span id=\"特定の文字列を除きたい場合\" class=\"fragment\"></span><a href=\"#%E7%89%B9%E5%AE%9A%E3%81%AE%E6%96%87%E5%AD%97%E5%88%97%E3%82%92%E9%99%A4%E3%81%8D%E3%81%9F%E3%81%84%E5%A0%B4%E5%90%88\"><i class=\"fa fa-link\"></i></a>特定の文字列を除きたい場合</h2>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>//置換したい文字列\n@include ((?!notStr).*)\\((.*)\\);\n\n//複数指定\n@include ((?!notStr|notStr2).*)\\((.*)\\);\n</pre></div></div>\n\n<p><code>(?!notStr)</code>のように<code>notStr</code>部分に除きたい文字列を書きます。<br>\n複数指定したい場合には<code>|</code>で区切ります。</p>\n","updated":1427612389,"tags":["正規表現"],"uuid":"d1c2ae88568ee971686f","title":"テキストエディタでの便利な正規表現での置換","created":1426731292},{"title":"Sass、Compassのバージョンアップに伴い（sass 3.4, compass 1.0）","created":1418813738,"userId":"kamem","body":"<p>Sassのmixinなど色々作っていたのですが。<br>\nしばらくバージョンアップなどしていなかったうちに<br>\n色々と仕様が変わっていたので、<br>\n自作mixinの作り直し + 仕様が変わった点などをまとめたいと思います。</p>\n\n<p>※ 自作mixinも最新のsass,compassに合わせて修正済みです。（2014-12-17 現在）</p>\n\n<ul>\n<li><a href=\"http://qiita.com/kamem/items/07d7500a046dfc96e742\" id=\"reference-82752bd12895c46a16e3\">Sass,Compassのデフォルトmixinとカスタム関数</a></li>\n</ul>\n\n<h2>\n<span id=\"sass---グローバル変数が変更できない\" class=\"fragment\"></span><a href=\"#sass---%E3%82%B0%E3%83%AD%E3%83%BC%E3%83%90%E3%83%AB%E5%A4%89%E6%95%B0%E3%81%8C%E5%A4%89%E6%9B%B4%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84\"><i class=\"fa fa-link\"></i></a>Sass - グローバル変数が変更できない</h2>\n\n<p>ローカルからグローバルの変数が通常の書き方では変更できなくなりました。<br>\n変更する際には、!globalを使います。</p>\n\n<h3>\n<span id=\"32\" class=\"fragment\"></span><a href=\"#32\"><i class=\"fa fa-link\"></i></a>3.2</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$color: white;\n\n.test{\n    $color: black;\n\n    color: $color;\n}\n</pre></div></div>\n\n<h3>\n<span id=\"34\" class=\"fragment\"></span><a href=\"#34\"><i class=\"fa fa-link\"></i></a>3.4</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$color: white;\n\n.test{\n    $color: black !global;\n\n    color: $color;\n}\n</pre></div></div>\n\n<ul>\n<li>[参考] <a href=\"http://hail2u.net/blog/coding/sass-variable-scope-and-bang-global.html\" rel=\"nofollow noopener\" target=\"_blank\">Sassの変数スコープと!global</a>\n</li>\n</ul>\n\n<h2>\n<span id=\"compass---border-radiusの仕様変更\" class=\"fragment\"></span><a href=\"#compass---border-radius%E3%81%AE%E4%BB%95%E6%A7%98%E5%A4%89%E6%9B%B4\"><i class=\"fa fa-link\"></i></a>Compass - border-radiusの仕様変更</h2>\n\n<p>角丸の一括指定ができなくなったようです。</p>\n\n<p><a href=\"http://compass-style.org/examples/compass/css3/border_radius/\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">http://compass-style.org/examples/compass/css3/border_radius/</a></p>\n\n<h3>\n<span id=\"32-1\" class=\"fragment\"></span><a href=\"#32-1\"><i class=\"fa fa-link\"></i></a>3.2</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>@include border-radius(0 2px 0 0);\n</pre></div></div>\n\n<h3>\n<span id=\"33\" class=\"fragment\"></span><a href=\"#33\"><i class=\"fa fa-link\"></i></a>3.3</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>@include border-top-right-radius(2px);\n</pre></div></div>\n\n<h2>\n<span id=\"compass---ブラウザサポートの変数記述の仕様変更\" class=\"fragment\"></span><a href=\"#compass---%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%82%B5%E3%83%9D%E3%83%BC%E3%83%88%E3%81%AE%E5%A4%89%E6%95%B0%E8%A8%98%E8%BF%B0%E3%81%AE%E4%BB%95%E6%A7%98%E5%A4%89%E6%9B%B4\"><i class=\"fa fa-link\"></i></a>Compass - ブラウザサポートの変数記述の仕様変更</h2>\n\n<p>下記のような古いブラウザの対応を指定しておく変数が軒並み変わっています。</p>\n\n<h3>\n<span id=\"0系\" class=\"fragment\"></span><a href=\"#0%E7%B3%BB\"><i class=\"fa fa-link\"></i></a>0系</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$legacy-support-for-ie6\n$experimental-support-for-webkit\n</pre></div></div>\n\n<h3>\n<span id=\"1系\" class=\"fragment\"></span><a href=\"#1%E7%B3%BB\"><i class=\"fa fa-link\"></i></a>1系</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$supported-browsers: (\"chrome\", \"firefox\", \"ie\", \"safari\", \"opera\", \"ios-safari\", \"android\");\n$browser-minimum-versions: (\"opera\": \"11\", \"ie\": \"6\");\n</pre></div></div>\n\n<ul>\n<li>\n<code>$supported-browsers</code>には配列で対応するブラウザを指定します。</li>\n<li>\n<code>$browser-minimum-versions</code>にはブラウザが対応するバージョンを指定します。</li>\n</ul>\n\n<h3>\n<span id=\"バージョンの確認\" class=\"fragment\"></span><a href=\"#%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%81%AE%E7%A2%BA%E8%AA%8D\"><i class=\"fa fa-link\"></i></a>バージョンの確認</h3>\n\n<p>compassで対応しているブラウザとバージョンは、下記を実行することで確認できます。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>@debug browsers();\n@debug browser-versions(ios-safari);\n</pre></div></div>\n\n<ul>\n<li>\n<code>browser-versions</code>にはバージョンを確認したいブラウザ名（<code>browsers</code>で確認した文字列）を指定します。</li>\n</ul>\n\n<h3>\n<span id=\"バージョンごとの条件分岐方法\" class=\"fragment\"></span><a href=\"#%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%81%94%E3%81%A8%E3%81%AE%E6%9D%A1%E4%BB%B6%E5%88%86%E5%B2%90%E6%96%B9%E6%B3%95\"><i class=\"fa fa-link\"></i></a>バージョンごとの条件分岐方法</h3>\n\n<p>例: IE7以下のみの場合 ↓</p>\n\n<h4>\n<span id=\"0系-1\" class=\"fragment\"></span><a href=\"#0%E7%B3%BB-1\"><i class=\"fa fa-link\"></i></a>0系</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>@if $legacy-support-for-ie6 or $legacy-support-for-ie7 {\n}\n</pre></div></div>\n\n<h4>\n<span id=\"1系-1\" class=\"fragment\"></span><a href=\"#1%E7%B3%BB-1\"><i class=\"fa fa-link\"></i></a>1系</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>@if support-legacy-browser(\"ie\", \"7\") {\n}\n</pre></div></div>\n\n<h3>\n<span id=\"webkitの古いバージョンでのlinear-gradient先行実装の記述\" class=\"fragment\"></span><a href=\"#webkit%E3%81%AE%E5%8F%A4%E3%81%84%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%81%A7%E3%81%AElinear-gradient%E5%85%88%E8%A1%8C%E5%AE%9F%E8%A3%85%E3%81%AE%E8%A8%98%E8%BF%B0\"><i class=\"fa fa-link\"></i></a>webkitの古いバージョンでのlinear-gradient先行実装の記述</h3>\n\n<p>iPhoneの古いバージョンなどで<code>-webkit-gradient()</code>の記述を出力するには、<br>\n<code>$supported-browsers</code>にandroidを追加すると出力されます。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$supported-browsers: (\"android\");\n</pre></div></div>\n\n<h2>\n<span id=\"compass---sprite-pathの仕様変更\" class=\"fragment\"></span><a href=\"#compass---sprite-path%E3%81%AE%E4%BB%95%E6%A7%98%E5%A4%89%E6%9B%B4\"><i class=\"fa fa-link\"></i></a>Compass - sprite-pathの仕様変更（？）</h2>\n\n<p>調べ切れていないのですが、システムからの絶対パスでファイルが指定されるようになっていました。</p>\n\n<p>下記のように<code>image-url</code>を使っていたのですが、<br>\nパスが変わったしまったため、おかしくなっていたのでsprite-urlに変更しました。</p>\n\n<h3>\n<span id=\"0系-2\" class=\"fragment\"></span><a href=\"#0%E7%B3%BB-2\"><i class=\"fa fa-link\"></i></a>0系</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>image-url(sprite-path($map))\n</pre></div></div>\n\n<h3>\n<span id=\"1系-2\" class=\"fragment\"></span><a href=\"#1%E7%B3%BB-2\"><i class=\"fa fa-link\"></i></a>1系</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>sprite-url($map)\n</pre></div></div>\n\n<h2>\n<span id=\"sass34-変更点追加点\" class=\"fragment\"></span><a href=\"#sass34-%E5%A4%89%E6%9B%B4%E7%82%B9%E8%BF%BD%E5%8A%A0%E7%82%B9\"><i class=\"fa fa-link\"></i></a>Sass3.4 変更点・追加点</h2>\n\n<h3>\n<span id=\"について\" class=\"fragment\"></span><a href=\"#%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\"><i class=\"fa fa-link\"></i></a>&amp;について</h3>\n\n<p>BEMを採用して作るときには&amp;の書き方などを工夫することで便利に作れるようになっているようです。<br>\n* [参考] <a href=\"http://blog.ruedap.com/2013/10/29/block-element-modifier\" rel=\"nofollow noopener\" target=\"_blank\">BEMという命名規則とSass 3.3の新しい記法</a><br>\n* [参考] <a href=\"http://geckotang.tumblr.com/post/79158530266/sass3-3-0\" rel=\"nofollow noopener\" target=\"_blank\">Sass3.3.0の「&amp;」の扱い</a></p>\n\n<h3>\n<span id=\"追加された関数\" class=\"fragment\"></span><a href=\"#%E8%BF%BD%E5%8A%A0%E3%81%95%E3%82%8C%E3%81%9F%E9%96%A2%E6%95%B0\"><i class=\"fa fa-link\"></i></a>追加された関数</h3>\n\n<ul>\n<li>[参考] <a href=\"http://geckotang.tumblr.com/post/79158530266/sass3-3-0\" rel=\"nofollow noopener\" target=\"_blank\">Sass3.4 変更点・追加点を眺めた</a>\n\n<ul>\n<li>追加されたselector function\n\n<ul>\n<li><a href=\"http://qiita.com/kazu69/items/45b707d5e05c6b6bd259#selector-nestselectors\" id=\"reference-67ea326fa50252f32464\">selector-nest</a></li>\n<li><a href=\"http://qiita.com/kazu69/items/45b707d5e05c6b6bd259#selector-appendselectors\" id=\"reference-67ea326fa50252f32464\">selector-append</a></li>\n<li><a href=\"http://qiita.com/kazu69/items/45b707d5e05c6b6bd259#selector-extendselectors-extendee-extender\" id=\"reference-67ea326fa50252f32464\">selector-extend</a></li>\n<li><a href=\"http://qiita.com/kazu69/items/45b707d5e05c6b6bd259#selector-replaceselector-original-replacement\" id=\"reference-67ea326fa50252f32464\">selector-replace</a></li>\n<li><a href=\"http://qiita.com/kazu69/items/45b707d5e05c6b6bd259#selector-unifyselector1-selector2\" id=\"reference-67ea326fa50252f32464\">selector-unify</a></li>\n<li><a href=\"http://qiita.com/kazu69/items/45b707d5e05c6b6bd259#is-superselectorsuper-sub\" id=\"reference-67ea326fa50252f32464\">is-superselector</a></li>\n<li><a href=\"http://qiita.com/kazu69/items/45b707d5e05c6b6bd259#selector-parse\" id=\"reference-67ea326fa50252f32464\">selector-parse</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n\n<p>また、気になった点があれば追記していきます。</p>\n","updated":1425538084,"tags":["Sass","Compass"],"uuid":"ecb07905e0b99950f19a"},{"created":1411705826,"userId":"kamem","body":"<p>site: <a href=\"http://develo.org/border-image-after\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">http://develo.org/border-image-after</a></p>\n\n<p>ボックスの周りに装飾として画像を置きたい場合に背景画像で対応するのもいいのですが<br>\n3つに切って・・。真ん中を繰り返しして・・。<br>\nさらに透過だった場合どこのタグに背景をいれるか工夫したりするのが大変だなぁと思っていました。</p>\n\n<p>そういう場合はborder-imageを使ったりしていたのですが<br>\nborder-imageを使うとborder-width分コンテンツが内側によっちゃいますよね・・。<br>\nまぁborderなので当たり前ですが・・。<br>\nしかも普通にやると画像だけ1/2にすることができないので、Retina対応とかできないんです。</p>\n\n<p>でもこれafterとかbeforeに指定したらborder-widthとか気にせずに使えるんじゃない！？<br>\nと思って試してみたらめちゃめちゃ便利！しかもRetina対応もできちゃうし！</p>\n\n<p>みなさんも是非使ってみてください。</p>\n\n<p><a href=\"http://jsrun.it/kamem/ozK6\" rel=\"nofollow noopener\" target=\"_blank\">DEMO</a></p>\n\n<p>イメージとしてはafterかbeforeをつかってborder-imageを<em>absolute</em>の<em>width,heightともに100%</em>にしてコンテンツの上にかぶしちゃおうという感じです！<br><br>\nただしかぶしちゃうと中のリンクがきかなくなっちゃうので、中身のほうが<em>z-index</em>が高くなるように設定してあげればよいかと思います。</p>\n\n<p>さらにさらに、<em>zoomを0.5</em>にすることによってRetinaにも対応出来ちゃいます！<br><br>\nいいコトづくしじゃん！</p>\n\n<h2>\n<span id=\"html\" class=\"fragment\"></span><a href=\"#html\"><i class=\"fa fa-link\"></i></a>HTML</h2>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>&lt;div&gt;\n    &lt;h2&gt;normal&lt;/h2&gt;\n    &lt;p&gt;...&lt;/p&gt;\n&lt;/div&gt;</pre></div></div>\n\n<h2>\n<span id=\"css\" class=\"fragment\"></span><a href=\"#css\"><i class=\"fa fa-link\"></i></a>CSS</h2>\n\n<h3>\n<span id=\"通常\" class=\"fragment\"></span><a href=\"#%E9%80%9A%E5%B8%B8\"><i class=\"fa fa-link\"></i></a>通常</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>.normal {\n    border-width: 100px;\n    -moz-border-image: url(http://jsrun.it/assets/n/T/2/b/nT2bz.png) 100 repeat;\n    -webkit-border-image: url(http://jsrun.it/assets/n/T/2/b/nT2bz.png) 100 repeat;\n    -o-border-image: url(http://jsrun.it/assets/n/T/2/b/nT2bz.png) 100 repeat;\n    border-image: url(http://jsrun.it/assets/n/T/2/b/nT2bz.png) 100 fill repeat;\n    box-sizing: border-box;\n}</pre></div></div>\n\n<h3>\n<span id=\"afterを使った場合\" class=\"fragment\"></span><a href=\"#after%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9F%E5%A0%B4%E5%90%88\"><i class=\"fa fa-link\"></i></a>afterを使った場合</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>.after {\n    position: relative;\n}\n\n.after:after {\n    content: '';\n    display: block;\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    border-width: 100px;\n    -moz-border-image: url(http://jsrun.it/assets/n/T/2/b/nT2bz.png) 100 repeat;\n    -webkit-border-image: url(http://jsrun.it/assets/n/T/2/b/nT2bz.png) 100 repeat;\n    -o-border-image: url(http://jsrun.it/assets/n/T/2/b/nT2bz.png) 100 repeat;\n    border-image: url(http://jsrun.it/assets/n/T/2/b/nT2bz.png) 100 fill repeat;\n    box-sizing: border-box;\n    zoom: 0.5; /* Retina対応 */\n}\n\n.after &gt; * {\n    position: relative;\n    z-index: 1;\n}</pre></div></div>\n\n<p>border-imageってなんかいまいち使いづらいなぁと思っていたので、これを思いついてからすごい使いやすくなった気がします！<br><br>\nborder-imageを使って作業を楽にしちゃいましょー。</p>\n\n<p>ちなみにジェネレーターは<a href=\"http://border-image.com/\" rel=\"nofollow noopener\" target=\"_blank\">border-image-generator</a>を使うと簡単に設定できちゃいます。</p>\n","updated":1411709637,"tags":["HTML","CSS"],"uuid":"f4da3a0910454556b347","title":"border-imageをbefore,after擬似要素で使うとRetina対応もできて便利"},{"updated":1411637527,"tags":["HTML","CSS"],"uuid":"7ab3cddafbe175375b24","title":"領域からはみ出てる文字列をCSSだけで「・・・」にする","created":1411637265,"userId":"kamem","body":"<p>site: <a href=\"http://develo.org/text-overflow-ellipsis\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">http://develo.org/text-overflow-ellipsis</a></p>\n\n<p>サイトを作っていると、デザイン的に一行におさめたい・・。という時があります。</p>\n\n<p>そういう時はJavascriptで文字制限したり。予めサーバー側で文字制限した文字列を渡してもらうなどして対処していたのですが</p>\n\n<p>CSSでできないのかなぁ・・。といろいろ試したところ少しつかいどころに制限はありますができるようです！</p>\n\n<p><a href=\"http://jsrun.it/kamem/oga4\" rel=\"nofollow noopener\" target=\"_blank\">DEMO</a></p>\n\n<h2>\n<span id=\"1行の場合\" class=\"fragment\"></span><a href=\"#1%E8%A1%8C%E3%81%AE%E5%A0%B4%E5%90%88\"><i class=\"fa fa-link\"></i></a>1行の場合</h2>\n\n<h3>\n<span id=\"html\" class=\"fragment\"></span><a href=\"#html\"><i class=\"fa fa-link\"></i></a>HTML</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>&lt;p&gt;テストテストテストテストテストテストテストテストテスト&lt;/p&gt;</pre></div></div>\n\n<h3>\n<span id=\"css\" class=\"fragment\"></span><a href=\"#css\"><i class=\"fa fa-link\"></i></a>CSS</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>p {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}</pre></div></div>\n\n<h2>\n<span id=\"floatしている場合\" class=\"fragment\"></span><a href=\"#float%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B%E5%A0%B4%E5%90%88\"><i class=\"fa fa-link\"></i></a>floatしている場合</h2>\n\n<h3>\n<span id=\"html-1\" class=\"fragment\"></span><a href=\"#html-1\"><i class=\"fa fa-link\"></i></a>HTML</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>&lt;ul&gt;\n    &lt;li&gt;カテゴリー : HTML,CSS,Javascript&lt;/li&gt;\n    &lt;li&gt;タグ : jQuery&lt;/li&gt;\n    &lt;li&gt; テストテストテストテストテストテストテストテストテスト&lt;/li&gt; \n&lt;/ul&gt;</pre></div></div>\n\n<h3>\n<span id=\"css-1\" class=\"fragment\"></span><a href=\"#css-1\"><i class=\"fa fa-link\"></i></a>CSS</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>li {\n    float: left;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n\nli:last-child {\n    float: none;\n}\n</pre></div></div>\n\n<p>ポイントは「last-child」で最後のタグはfloatしないことです。<br>\n最後をfloatしないことにより、タグが親タグの幅いっぱいに広がり親タグの範囲での文字制限をすることができます。</p>\n\n<p>最後のタグをfloatしている場合は、タグが次の行に落ちてしまいます。</p>\n\n<p>または幅を指定しての文字制限も可能です。<br>\n文字数で制限したい場合には「em」を使うとよいです。</p>\n\n<h3>\n<span id=\"5文字制限したい場合のcss\" class=\"fragment\"></span><a href=\"#5%E6%96%87%E5%AD%97%E5%88%B6%E9%99%90%E3%81%97%E3%81%9F%E3%81%84%E5%A0%B4%E5%90%88%E3%81%AEcss\"><i class=\"fa fa-link\"></i></a>5文字制限したい場合のCSS</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>li:last-child {\n    float: none;\n    width: 5em\n}</pre></div></div>\n"},{"updated":1409106987,"tags":["Sass","Compass"],"uuid":"07d7500a046dfc96e742","title":"楽しくコーディング！Sass,Compassのデフォルトmixinとカスタム関数","created":1400470205,"userId":"kamem","body":"<p>site: <a href=\"http://develo.org/2014/05/19/0935.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">http://develo.org/2014/05/19/0935.html</a><br>\nGitHub: <a href=\"https://github.com/kamem/compass.default\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/kamem/compass.default</a></p>\n\n<h2>\n<span id=\"sasscompass関連のフォルダ構成\" class=\"fragment\"></span><a href=\"#sasscompass%E9%96%A2%E9%80%A3%E3%81%AE%E3%83%95%E3%82%A9%E3%83%AB%E3%83%80%E6%A7%8B%E6%88%90\"><i class=\"fa fa-link\"></i></a>Sass,Compass関連のフォルダ構成</h2>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>├config.rb\n├ rb\n|   ├ develo.rb\n|   ├ skyward_design.rb\n|   └\n└ sass\n    ├ _animation.scss\n    ├ _keyframes.sass\n    ├ _extension_decimal.scss\n    ├ _extension_import.scss\n    ├ _extension_sprite.scss\n    ├ _extension.scss\n    ├ _setting_site.scss\n    ├ _setting.scss\n    ├ common.scss\n    ├ default.scss\n    ├ import.scss\n    ├ sprite.scss\n    ├ templates.scss\n    └ test.scss\n</pre></div></div>\n\n<h2>\n<span id=\"カスタム関数rb\" class=\"fragment\"></span><a href=\"#%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0%E9%96%A2%E6%95%B0rb\"><i class=\"fa fa-link\"></i></a>カスタム関数（rb）</h2>\n\n<h3>\n<span id=\"develorb-github\" class=\"fragment\"></span><a href=\"#develorb-github\"><i class=\"fa fa-link\"></i></a>develo.rb （<a href=\"https://github.com/kamem/compass.develo\" rel=\"nofollow noopener\" target=\"_blank\">GitHub</a>）</h3>\n\n<ul>\n<li><a href=\"http://develo.org/2014/05/08/1000.html\" rel=\"nofollow noopener\" target=\"_blank\">Sass,Compassでファイルの有無を返してくれるカスタム関数</a></li>\n<li><a href=\"http://develo.org/2014/05/08/0900.html\" rel=\"nofollow noopener\" target=\"_blank\">Sass,Compassでフォルダ内のファイルリストを取得するカスタム関数</a></li>\n</ul>\n\n<h3>\n<span id=\"skyward_designrbgithub\" class=\"fragment\"></span><a href=\"#skyward_designrbgithub\"><i class=\"fa fa-link\"></i></a>skyward_design.rb（<a href=\"https://github.com/hideki-a/SassFunctions\" rel=\"nofollow noopener\" target=\"_blank\">GitHub</a>）</h3>\n\n<ul>\n<li><a href=\"http://www.anothersky.pw/skyward/archives/000127.html\" rel=\"nofollow noopener\" target=\"_blank\">Ruby初心者だけどゼロパディングするカスタムSassファンクションを作ってみた</a></li>\n<li><a href=\"http://www.anothersky.pw/skyward/archives/000128.html\" rel=\"nofollow noopener\" target=\"_blank\">文字列を置換するカスタムSass関数を作ってみた</a></li>\n</ul>\n\n<h2>\n<span id=\"全てのscssに共通で読み込む必要なmixinなどのimport_extension_importscss\" class=\"fragment\"></span><a href=\"#%E5%85%A8%E3%81%A6%E3%81%AEscss%E3%81%AB%E5%85%B1%E9%80%9A%E3%81%A7%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%82%80%E5%BF%85%E8%A6%81%E3%81%AAmixin%E3%81%AA%E3%81%A9%E3%81%AEimport_extension_importscss\"><i class=\"fa fa-link\"></i></a>全てのscssに共通で読み込む必要なmixinなどのimport（_extension_import.scss）</h2>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>@import \"compass/css3/\",\n\"setting\",\n\"setting_site\",\n\"compass/support\",\n\"animation\",\n\"_keyframes\",\n\"extension_decimal\",\n\"extension\";\n</pre></div></div>\n\n<h2>\n<span id=\"設定用scsssettingscss_settingsitescss\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E5%AE%9A%E7%94%A8scsssettingscss_settingsitescss\"><i class=\"fa fa-link\"></i></a>設定用scss（<em>setting.scss,_setting</em>site.scss）</h2>\n\n<h3>\n<span id=\"_settingscss\" class=\"fragment\"></span><a href=\"#_settingscss\"><i class=\"fa fa-link\"></i></a>_setting.scss</h3>\n\n<p>compassで使用する変数の設定</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>//config.rb指定したimages_dirの値\n$images_dir: \"html/img/\";\n\n//HTML5の場合は「true」\n$html5: true;\n//Retina対応\n$isRetina: false;\n//base64対応\n$isBase64: false;\n\n//compass ブラウザサポート\n$legacy-support-for-ie6: true;\n$legacy-support-for-ie7: true;\n\n$experimental-support-for-webkit: true;\n$experimental-support-for-mozilla: true;\n$experimental-support-for-opera: true;\n$experimental-support-for-microsoft: true;\n$experimental-support-for-khtml: false;\n\n//ie9用 svg\n$experimental-support-for-svg: true;\n</pre></div></div>\n\n<h3>\n<span id=\"_setting_sitescss\" class=\"fragment\"></span><a href=\"#_setting_sitescss\"><i class=\"fa fa-link\"></i></a>_setting_site.scss</h3>\n\n<p>サイトを作る際に全体で使う変数の設定。</p>\n\n<p>例</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>//font\n$font-sizeDefault: 10; // 基準となるフォントサイズ（htmlに指定する値）\n$font-size: 16; // よく使うfont-size\n$font-unit: rem; // 使う単位\n$font-family: \"ヒラギノ角ゴ Pro W3\", \"Hiragino Kaku Gothic Pro\", Osaka, \"ＭＳ Ｐゴシック\", \"MS PGothic\", Sans-Serif;\n\n//ページの横幅\n$base-width: 736;\n$base-width-big: 798;\n\n// 標準テキストカラー\n$textColor : #500;\n\n// 標準リンクカラー\n$linkColor : #39c;\n$linkColor_hover : #f39;\n$linkColor_visited : rgba(#39c,0.7);\n$linkColor_active : #39c;\n\n//mediaQueryの基準となる幅\n$mediaQuery-large: 798;\n$mediaQuery-middle: 480;\n$mediaQuery-small: 320;\n</pre></div></div>\n\n<h2>\n<span id=\"animation関係を使えるように_animationscss\" class=\"fragment\"></span><a href=\"#animation%E9%96%A2%E4%BF%82%E3%82%92%E4%BD%BF%E3%81%88%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB_animationscss\"><i class=\"fa fa-link\"></i></a>animation関係を使えるように（_animation.scss）</h2>\n\n<p>下記のanimation関係のCSSを<a href=\"/include\" class=\"user-mention js-hovercard\" title=\"include\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"include\">@include</a>で使えるようにしベンダープレフィックスを付けるようにしてくれる。</p>\n\n<ul>\n<li>animation-name</li>\n<li>animation-duration</li>\n<li>animation-timing-function</li>\n<li>animation-delay</li>\n<li>animation-iteration-count</li>\n<li>animation-direction</li>\n</ul>\n\n<h2>\n<span id=\"keyframesを使えるように_keyframesscss\" class=\"fragment\"></span><a href=\"#keyframes%E3%82%92%E4%BD%BF%E3%81%88%E3%82%8B%E3%82%88%E3%81%86%E3%81%AB_keyframesscss\"><i class=\"fa fa-link\"></i></a>keyframesを使えるように（_keyframes.scss）</h2>\n\n<p>keyframesを<a href=\"/include\" class=\"user-mention js-hovercard\" title=\"include\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"include\">@include</a>で使えるようにしベンダープレフィックスを付けるようにしてくれる。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>@include keyframes(anime1) {\n  0% {\n    @include transform(rotate(720deg));\n  }\n  100% {\n    width: 500px;\n    @include transform(rotate(0deg));\n  }\n}\n</pre></div></div>\n\n<h2>\n<span id=\"小数の桁数と丸め方を制御する_extension_decimalscss\" class=\"fragment\"></span><a href=\"#%E5%B0%8F%E6%95%B0%E3%81%AE%E6%A1%81%E6%95%B0%E3%81%A8%E4%B8%B8%E3%82%81%E6%96%B9%E3%82%92%E5%88%B6%E5%BE%A1%E3%81%99%E3%82%8B_extension_decimalscss\"><i class=\"fa fa-link\"></i></a>小数の桁数と丸め方を制御する（_extension_decimal.scss）</h2>\n\n<p>下記サイトのscssを使わせて頂いています。</p>\n\n<ul>\n<li><a href=\"http://terkel.jp/archives/2012/12/decimal-digits-and-rounding-sass-function/\" rel=\"nofollow noopener\" target=\"_blank\">小数の桁数と丸め方を制御する Sass 関数</a></li>\n</ul>\n\n<h2>\n<span id=\"sprite画像を生成する_extension_spritescss\" class=\"fragment\"></span><a href=\"#sprite%E7%94%BB%E5%83%8F%E3%82%92%E7%94%9F%E6%88%90%E3%81%99%E3%82%8B_extension_spritescss\"><i class=\"fa fa-link\"></i></a>sprite画像を生成する（_extension_sprite.scss）</h2>\n\n<p>スプライト画像を生成し、その画像名のクラスを付けるだけで画像を表示できるようにしてくれる。<br>\nこれを使うことによりscss編集時に毎回スプライトチェックする問題を回避することができます。<br>\nsprite.scssだけ使うことができます。</p>\n\n<p>ほかのscssでspriteの情報を使いたい場合は（_extension.scss: sprite-info）</p>\n\n<h3>\n<span id=\"sprite-make\" class=\"fragment\"></span><a href=\"#sprite-make\"><i class=\"fa fa-link\"></i></a>sprite-make</h3>\n\n<h4>\n<span id=\"初期設定説明\" class=\"fragment\"></span><a href=\"#%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A%E8%AA%AC%E6%98%8E\"><i class=\"fa fa-link\"></i></a>初期設定・説明</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>@include sprite-make(\n    '', //スプライト化したい画像: sprite-map()の第一引き数にいれるファイル名。（配列で複数指定することができます。）\n    5px, //スプライト化した時の画像と画像の間のサイズ: sprite-map()の$spacingの値\n    true , // true or false: 吐き出すCSSにクラス名2つをつけるか。（false:「.画像ファイル名」、true:「.スプライト名.画像ファイル名」となります。）\n    $isRetina // true or false: Retina対応（画像サイズを半分に）するかしないか（予め_setting.scssで設定されてることを考慮）\n);\n</pre></div></div>\n\n<h4>\n<span id=\"scss\" class=\"fragment\"></span><a href=\"#scss\"><i class=\"fa fa-link\"></i></a>SCSS</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>@include sprite_make((\n    'num/*.png'\n));\n</pre></div></div>\n\n<h4>\n<span id=\"css\" class=\"fragment\"></span><a href=\"#css\"><i class=\"fa fa-link\"></i></a>css</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>.num.img1, .num.img2, .num.img3 {\n    display: block;\n    background-image: url('/html/img/num-sce8bc88143.png');\n    background-repeat: no-repeat;\n    background-size: 50px 270px;\n}\n\n.num.img1 {\n    background-position: 0 -220px;\n    width: 50px;\n    height: 50px;\n}\n\n.num.img2 {\n    background-position: 0 -110px;\n    width: 50px;\n    height: 50px;\n}\n\n.num.img3 {\n    background-position: 0 0;\n    width: 50px;\n    height: 50px;\n}\n</pre></div></div>\n\n<h2>\n<span id=\"便利なmixin_extensionscss\" class=\"fragment\"></span><a href=\"#%E4%BE%BF%E5%88%A9%E3%81%AAmixin_extensionscss\"><i class=\"fa fa-link\"></i></a>便利なmixin（_extension.scss）</h2>\n\n<h3>\n<span id=\"background-fit\" class=\"fragment\"></span><a href=\"#background-fit\"><i class=\"fa fa-link\"></i></a>background-fit</h3>\n\n<p>画像のサイズを取得しbackground-size,width,heightをセットする。<br>\nCSSで背景に画像を入れる時に毎回サイズを入れる作業を省いてくれます。特にRetina対応で画像サイズを半分にしたいときには便利です。</p>\n\n<ol>\n<li>まず前提として、config.rbの<code>images_dir</code>を設定してください。</li>\n<li>width,heightが必要ない場合には第2引き数を<code>false</code>にする。</li>\n<li>複数画像を指定したい場合は配列で（例: <code>('test.png','test2.gif',linear-gradient(#000,#fff)</code>）</li>\n<li>複数画像を指定した場合は第3引き数に複数指定する。（例: <code>('0 0 no-repeat','left top repeat','0 0 no-repeat')</code>）</li>\n<li>関数実行後$imgWidth,$imgHeightの中に画像のサイズが入ります。<br>複数の場合配列に入るのでnth($imgWidth,1),nth($imgHeight,2)のように取ってくることができます。</li>\n</ol>\n\n<h4>\n<span id=\"初期設定説明-1\" class=\"fragment\"></span><a href=\"#%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A%E8%AA%AC%E6%98%8E-1\"><i class=\"fa fa-link\"></i></a>初期設定・説明</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>@include background-fit(\n    '', // 画像のパス: images_dirで指定したパスからの画像ファイル名（配列で複数指定可能,グラデーション指定も可能）\n    true, // true or false: 画像をサイズいっぱいに表示してテキストを消す or 画像とbackgrouns-sizeのみの指定をするか）\n    '0 0 no-repeat', // 画像に対してのrepeat position: (複数の場合の例: ('0 0 no-repeat','left top repeat'))\n    '', //'!important': !importantを指定したい場合（必要ない場合は空）\n    $isBase64, // true or false: base64にするかしないか (予め_setting.scssで設定されてることを考慮）\n    $isRetina // true or false: Retina対応（画像サイズを半分に）するかしないか（予め_setting.scssで設定されてることを考慮）\n);\n</pre></div></div>\n\n<h4>\n<span id=\"scss-1\" class=\"fragment\"></span><a href=\"#scss-1\"><i class=\"fa fa-link\"></i></a>SCSS</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>@include background-fit(\n    (\"text.png\",linear-gradient(rgba(red,0.1),rgba(red,0.3))),\n    false,\n    ('center 5px no-repeat','0 0 no-repeat')\n);\n</pre></div></div>\n\n<h4>\n<span id=\"css-1\" class=\"fragment\"></span><a href=\"#css-1\"><i class=\"fa fa-link\"></i></a>CSS</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>background: url('/html/img/text.png?1396155926') center 5px no-repeat, linear-gradient(rgba(255, 0, 0, 0.1), rgba(255, 0, 0, 0.3)) 0 0 no-repeat;\nbackground-size: 327px 29px, auto auto;\n</pre></div></div>\n\n<h3>\n<span id=\"half-image-width\" class=\"fragment\"></span><a href=\"#half-image-width\"><i class=\"fa fa-link\"></i></a>half-image-width</h3>\n\n<p>画像の半分の横幅の値を返す（複数画像を配列で指定可能）</p>\n\n<ol>\n<li>関数実行後$imgWidthの中に画像のサイズが入ります。<br>複数の場合配列に入るのでnth($imgWidth,1)のように取ってくることができます。</li>\n</ol>\n\n<h4>\n<span id=\"scss-2\" class=\"fragment\"></span><a href=\"#scss-2\"><i class=\"fa fa-link\"></i></a>SCSS</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>width: half-image-width('test.png');\n</pre></div></div>\n\n<h4>\n<span id=\"css-2\" class=\"fragment\"></span><a href=\"#css-2\"><i class=\"fa fa-link\"></i></a>CSS</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>width: 100px;\n</pre></div></div>\n\n<h3>\n<span id=\"half-image-height\" class=\"fragment\"></span><a href=\"#half-image-height\"><i class=\"fa fa-link\"></i></a>half-image-height</h3>\n\n<p>画像の半分の高さの値を返す（複数画像を配列で指定可能）</p>\n\n<ol>\n<li>関数実行後$imgHeightの中に画像のサイズが入ります。<br>複数の場合配列に入るのでnth($imgHeight,1)のように取ってくることができます。</li>\n</ol>\n\n<h4>\n<span id=\"scss-3\" class=\"fragment\"></span><a href=\"#scss-3\"><i class=\"fa fa-link\"></i></a>SCSS</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>height: half-image-width('test.png');\n</pre></div></div>\n\n<h4>\n<span id=\"css-3\" class=\"fragment\"></span><a href=\"#css-3\"><i class=\"fa fa-link\"></i></a>CSS</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>height: 100px;\n</pre></div></div>\n\n<h3>\n<span id=\"sprite-info\" class=\"fragment\"></span><a href=\"#sprite-info\"><i class=\"fa fa-link\"></i></a>sprite-info</h3>\n\n<p>スプライト画像のサイズとポジションを設定する</p>\n\n<h4>\n<span id=\"初期設定説明-2\" class=\"fragment\"></span><a href=\"#%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A%E8%AA%AC%E6%98%8E-2\"><i class=\"fa fa-link\"></i></a>初期設定・説明</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>@include triangle-set(\n    10px, //大きさ: 10px 20px のように2つ値を書くことで横と高さを指定することができます。\n    black, // 色\n    top //向き: top,right,bottom,left\n);\n</pre></div></div>\n\n<h4>\n<span id=\"scss-4\" class=\"fragment\"></span><a href=\"#scss-4\"><i class=\"fa fa-link\"></i></a>SCSS</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$map: sprite-map('num/*.png', $spacing: 5px);\np {\n    @include sprite-info($map,img3);\n}\n</pre></div></div>\n\n<h4>\n<span id=\"css-4\" class=\"fragment\"></span><a href=\"#css-4\"><i class=\"fa fa-link\"></i></a>CSS</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>background-image: url('/html/img/num-sce8bc88143.png');\nbackground-size: 50px 270px;\nbackground-position: 0 0;\nwidth: 50px;\nheight: 50px;\n</pre></div></div>\n\n<h3>\n<span id=\"text-shadow-repeat\" class=\"fragment\"></span><a href=\"#text-shadow-repeat\"><i class=\"fa fa-link\"></i></a>text-shadow-repeat</h3>\n\n<p>同じテキストシャドウを繰り返したい場合</p>\n\n<h4>\n<span id=\"scss-5\" class=\"fragment\"></span><a href=\"#scss-5\"><i class=\"fa fa-link\"></i></a>SCSS</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>@include text-shadow-repeat(0 0 3px #000,5);\n</pre></div></div>\n\n<h4>\n<span id=\"css-5\" class=\"fragment\"></span><a href=\"#css-5\"><i class=\"fa fa-link\"></i></a>CSS</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>text-shadow: 0 0 3px black,0 0 3px black,0 0 3px black,0 0 3px black,0 0 3px black;\n</pre></div></div>\n\n<h3>\n<span id=\"box-shadow-repeat\" class=\"fragment\"></span><a href=\"#box-shadow-repeat\"><i class=\"fa fa-link\"></i></a>box-shadow-repeat</h3>\n\n<p>同じボックスシャドウを繰り返したい場合</p>\n\n<h4>\n<span id=\"scss-6\" class=\"fragment\"></span><a href=\"#scss-6\"><i class=\"fa fa-link\"></i></a>SCSS</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>@include box-shadow-repeat(0 0 10px #fff,10);\n</pre></div></div>\n\n<h4>\n<span id=\"css-6\" class=\"fragment\"></span><a href=\"#css-6\"><i class=\"fa fa-link\"></i></a>CSS</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>box-shadow: 0 0 10px black,0 0 10px black,0 0 10px black,0 0 10px black,0 0 10px black;\n</pre></div></div>\n\n<h3>\n<span id=\"display-box-center\" class=\"fragment\"></span><a href=\"#display-box-center\"><i class=\"fa fa-link\"></i></a>display-box-center</h3>\n\n<p>display: box;にし中身を縦横のcenter寄せにする。<br>\ndwebkitに対応したサイトを作る際に役立ちます。</p>\n\n<h4>\n<span id=\"scss-7\" class=\"fragment\"></span><a href=\"#scss-7\"><i class=\"fa fa-link\"></i></a>SCSS</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>@include display-box-center();\n</pre></div></div>\n\n<h4>\n<span id=\"css-7\" class=\"fragment\"></span><a href=\"#css-7\"><i class=\"fa fa-link\"></i></a>CSS</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>display: box;\nbox-align: center;\nbox-pack: center;\n</pre></div></div>\n\n<h3>\n<span id=\"triangle\" class=\"fragment\"></span><a href=\"#triangle\"><i class=\"fa fa-link\"></i></a>triangle</h3>\n\n<p>三角形を作る</p>\n\n<h4>\n<span id=\"初期設定説明-3\" class=\"fragment\"></span><a href=\"#%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A%E8%AA%AC%E6%98%8E-3\"><i class=\"fa fa-link\"></i></a>初期設定・説明</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>@include triangle-set(\n    10px, //大きさ: 10px 20px のように2つ値を書くことで横と高さを指定することができます。\n    black, // 色\n    top //向き: top,right,bottom,left\n);\n</pre></div></div>\n\n<h3>\n<span id=\"triangle-set\" class=\"fragment\"></span><a href=\"#triangle-set\"><i class=\"fa fa-link\"></i></a>triangle-set</h3>\n\n<p>作った三角形を向きに合わせてボックスの外側にセットする（吹き出し風になるようにセットする）</p>\n\n<ol>\n<li>吹き出し風にしたい場合にtriangleを使わずこっちを使う。</li>\n</ol>\n\n<h4>\n<span id=\"初期設定説明-4\" class=\"fragment\"></span><a href=\"#%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A%E8%AA%AC%E6%98%8E-4\"><i class=\"fa fa-link\"></i></a>初期設定・説明</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>@include triangle-set(\n    10px, //大きさ: 10px 20px のように2つ値を書くことで横と高さを指定することができます。\n    black, // 色\n    top, // 向き: top,right,bottom,left\n    50%, // 位置: 三角形をボックスのどの位置にセットするか（真ん中の場合50%）\n    after // before or after どちらを使うか\n);\n</pre></div></div>\n\n<h3>\n<span id=\"arrow\" class=\"fragment\"></span><a href=\"#arrow\"><i class=\"fa fa-link\"></i></a>arrow</h3>\n\n<p>矢印を作る</p>\n\n<h4>\n<span id=\"初期設定説明-5\" class=\"fragment\"></span><a href=\"#%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A%E8%AA%AC%E6%98%8E-5\"><i class=\"fa fa-link\"></i></a>初期設定・説明</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>@include arrow(\n    10px, // 大きさ\n    1px, // 太さ\n    white, // 色\n    right, // 向き: top,right,bottom,left\n);\n</pre></div></div>\n\n<h3>\n<span id=\"arrow-set\" class=\"fragment\"></span><a href=\"#arrow-set\"><i class=\"fa fa-link\"></i></a>arrow-set</h3>\n\n<p>作った矢印を向きに合わせてボックスにセットする</p>\n\n<h4>\n<span id=\"初期設定説明-6\" class=\"fragment\"></span><a href=\"#%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A%E8%AA%AC%E6%98%8E-6\"><i class=\"fa fa-link\"></i></a>初期設定・説明</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>@include arrow-set(\n    10px, // 大きさ\n    1px, // 太さ\n    white, // 色\n    right, // 向き: top,right,bottom,left\n    50%, // 位置: 三角形をボックスのどの位置にセットするか（真ん中の場合50%）\n    after // before or after どちらを使うか\n);\n</pre></div></div>\n\n<h3>\n<span id=\"background-4corners\" class=\"fragment\"></span><a href=\"#background-4corners\"><i class=\"fa fa-link\"></i></a>background-4corners</h3>\n\n<p>4つ角に同じ画像を回転・反転させておきたい場合</p>\n\n<h4>\n<span id=\"初期設定説明-7\" class=\"fragment\"></span><a href=\"#%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A%E8%AA%AC%E6%98%8E-7\"><i class=\"fa fa-link\"></i></a>初期設定・説明</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>@include background-4corners(\n    '', //images_dirで指定したパスからの画像ファイル名\n    $isRetina // true or false Retina対応（画像サイズを半分に）するかしないか\n                （初期値は予め_setting.scssで設定されてることを考慮）\n);\n</pre></div></div>\n\n<p>詳しい仕様の説明は下記より</p>\n\n<ul>\n<li><a href=\"http://develo.org/2014/05/11/2100.html\" rel=\"nofollow noopener\" target=\"_blank\">1つの画像で4つの角を再現するCSS</a></li>\n</ul>\n\n<h3>\n<span id=\"background-stripe\" class=\"fragment\"></span><a href=\"#background-stripe\"><i class=\"fa fa-link\"></i></a>background-stripe</h3>\n\n<p>ストライプ背景の生成</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>@include background-stripe(\n    10, //1つ目のストライプのサイズ\n    transparent,    //1つ目のストライプの色\n    10, //2つ目のストライプのサイズ\n    rgba(255,255,255,0.5), //2つ目のストライプの色\n    -45deg //ストライプの角度（45度単位)\n);\n</pre></div></div>\n\n<h3>\n<span id=\"es\" class=\"fragment\"></span><a href=\"#es\"><i class=\"fa fa-link\"></i></a>es</h3>\n\n<p>基準となるサイズに対する値を、さまざまな単位にエンコード（encode size）</p>\n\n<h4>\n<span id=\"初期設定説明-8\" class=\"fragment\"></span><a href=\"#%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A%E8%AA%AC%E6%98%8E-8\"><i class=\"fa fa-link\"></i></a>初期設定・説明</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>margin: es(\n    '', // 変換したいサイズ\n    $font-unit, // 変換したい単位（%,em,rem,px）（初期値は予め_setting.scssで設定されてることを考慮）\n    $font-sizeDefault // 変換の基準となる値（初期値は予め_setting.scssで設定されてることを考慮）\n);\n</pre></div></div>\n\n<h4>\n<span id=\"scss-8\" class=\"fragment\"></span><a href=\"#scss-8\"><i class=\"fa fa-link\"></i></a>SCSS</h4>\n\n<p>例）16pxのサイズのspanを12pxの%に変換したい場合</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>@include fz(12,'','%',16);\n//または\n$font-unit: '%';\n$font-sizeDefault: 16;\n@include fz(12);\n</pre></div></div>\n\n<h4>\n<span id=\"css-8\" class=\"fragment\"></span><a href=\"#css-8\"><i class=\"fa fa-link\"></i></a>CSS</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>font-size: 75%;\n</pre></div></div>\n\n<h3>\n<span id=\"fz\" class=\"fragment\"></span><a href=\"#fz\"><i class=\"fa fa-link\"></i></a>fz</h3>\n\n<p>指定した単位にフォントサイズを変換しfont-sizeを代入する</p>\n\n<ul>\n<li>remの場合remが使えない場合のためにpxも出力する</li>\n</ul>\n\n<h4>\n<span id=\"初期設定説明-9\" class=\"fragment\"></span><a href=\"#%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A%E8%AA%AC%E6%98%8E-9\"><i class=\"fa fa-link\"></i></a>初期設定・説明</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>＠include fz(\n    '', // 変換したいサイズ\n    '', //!importantを指定したい場合（必要ない場合は空）\n    $font-unit, // 変換したい単位（%,em,rem,px）（初期値は予め_setting.scssで設定されてることを考慮）\n    $font-sizeDefault // 変換の基準となる値（初期値は予め_setting.scssで設定されてることを考慮）\n);\n</pre></div></div>\n\n<h4>\n<span id=\"scss-9\" class=\"fragment\"></span><a href=\"#scss-9\"><i class=\"fa fa-link\"></i></a>SCSS</h4>\n\n<p>例）16pxのサイズのspanを12pxの%に変換したい場合</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>@include fz(12,'',rem,10);\n//または\n$font-unit: rem;\n$font-sizeDefault: 10;\n@include fz(12);\n</pre></div></div>\n\n<h4>\n<span id=\"css-9\" class=\"fragment\"></span><a href=\"#css-9\"><i class=\"fa fa-link\"></i></a>CSS</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>font-size: 12px;\nfont-size: 1.2rem;\n</pre></div></div>\n\n<h3>\n<span id=\"golden-ratio\" class=\"fragment\"></span><a href=\"#golden-ratio\"><i class=\"fa fa-link\"></i></a>golden-ratio</h3>\n\n<p>黄金比の計算</p>\n\n<h4>\n<span id=\"初期設定説明-10\" class=\"fragment\"></span><a href=\"#%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A%E8%AA%AC%E6%98%8E-10\"><i class=\"fa fa-link\"></i></a>初期設定・説明</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>＠include golden-ratio(\n    0, // この数字に対しての黄金比（$num * 1.618）\n    false, // trueの場合 第1引き数の数字を元にした（$num / 1.618）\n);\n</pre></div></div>\n\n<h3>\n<span id=\"silver-ratio\" class=\"fragment\"></span><a href=\"#silver-ratio\"><i class=\"fa fa-link\"></i></a>silver-ratio</h3>\n\n<p>白銀比の計算</p>\n\n<h4>\n<span id=\"初期設定説明-11\" class=\"fragment\"></span><a href=\"#%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A%E8%AA%AC%E6%98%8E-11\"><i class=\"fa fa-link\"></i></a>初期設定・説明</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>＠include silver-ratio(\n    0, // この数字に対しての黄金比（$num * 1.414）\n    false, // trueの場合 第1引き数の数字を元にした（$num / 1.414）\n);\n</pre></div></div>\n\n<h3>\n<span id=\"clearfix\" class=\"fragment\"></span><a href=\"#clearfix\"><i class=\"fa fa-link\"></i></a>clearfix</h3>\n\n<p>引き数内のクラスにclearfixを付ける</p>\n\n<ol>\n<li>\n<code>@include clearfix();</code>とかくとclearfixクラスがclearfixとなるcssが出力される。</li>\n<li>\n<code>@extend %clearfix;</code>することによりクラスを追加していく。</li>\n</ol>\n\n<h4>\n<span id=\"scss-10\" class=\"fragment\"></span><a href=\"#scss-10\"><i class=\"fa fa-link\"></i></a>SCSS</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>@include clearfix();\n\n.test {\n    @extend %clearfix;\n}\n</pre></div></div>\n\n<h4>\n<span id=\"css-10\" class=\"fragment\"></span><a href=\"#css-10\"><i class=\"fa fa-link\"></i></a>CSS</h4>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>.clearfix,\n.test {\n    min-height: 1px;\n    _height: 1%;\n}\n.clearfix:after,\n.test:after {\n    content: \".\";\n    display: block;\n    clear: both;\n    height: 0;\n    visibility: hidden;\n}\n</pre></div></div>\n"},{"updated":1407115006,"tags":["HTML","JavaScript","jQuery"],"uuid":"93459936648329b0a8ce","title":"指定のクラスを複数のタグに追加したり、削除したりをtoggleするjQueryプラグイン","created":1407057785,"userId":"kamem","body":"<p>1回目にクリックした時は例えば「on」というクラスが付き、2回目クリックした時は「on」が削除されるような場合に使えます。</p>\n\n<p>クリック時に複数のクラスを変えたい場合などに、jsを書き換える必要がないような仕組みにしています。</p>\n\n<p>割りと使う機会が多い機能でなのに、いままでプラグイン可していなかったので使いやすいようにプラグイン化してみました。</p>\n\n<p>GitHub: <a href=\"https://github.com/kamem/jquery.dataExtend\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/kamem/jquery.dataExtend</a></p>\n\n<p>（jQuery.dataExtedの説明と合わせて同じリポジトリに入っています。）</p>\n\n<p><a href=\"http://github.develo.org/jquery.dataExtend/extraToggleClass.html\" rel=\"nofollow noopener\" target=\"_blank\">DEMO</a></p>\n\n<h2>\n<span id=\"仕様\" class=\"fragment\"></span><a href=\"#%E4%BB%95%E6%A7%98\"><i class=\"fa fa-link\"></i></a>仕様</h2>\n\n<ol>\n<li>クリックしたタグのクラスをtoggleする。</li>\n<li>他要素もしたい場合は「content_（toggleしたいタグのクラス名）」のように指定する。</li>\n<li>ストレージ保存可能。</li>\n</ol>\n\n<h2>\n<span id=\"使い方\" class=\"fragment\"></span><a href=\"#%E4%BD%BF%E3%81%84%E6%96%B9\"><i class=\"fa fa-link\"></i></a>使い方</h2>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>&lt;script type=\"text/javascript\" src=\"js/jquery.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"js/jquery.tab.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n$(function(){\n     $('.toggle').extraToggleClass();\n});\n&lt;/script&gt;\n</pre></div></div>\n\n<h3>\n<span id=\"html\" class=\"fragment\"></span><a href=\"#html\"><i class=\"fa fa-link\"></i></a>html</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>&lt;p class=\"toggle content_test\"&gt;toggle click&lt;/p&gt;\n\n&lt;p class=\"test\"&gt;test&lt;/p&gt;\n&lt;p class=\"test\"&gt;test&lt;/p&gt;\n</pre></div></div>\n\n<ul>\n<li>「content_test」「content_」の後の文字（例の場合test）クラスが付いているタグのクラスも一緒にtoggleします。</li>\n</ul>\n\n<h3>\n<span id=\"初期設定\" class=\"fragment\"></span><a href=\"#%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A\"><i class=\"fa fa-link\"></i></a>初期設定</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>name: 'on',\nisSessionStorage: false\n</pre></div></div>\n\n<ul>\n<li>name: {String} toggleしたいクラス名</li>\n<li>isSessionStorage: {Boolean} ストレージに保存するか</li>\n</ul>\n"},{"userId":"kamem","body":"<p>タブとかスライドショーを実装するのに毎回探したり、その場実装で作ったりしていました・・。</p>\n\n<p>そろそろ楽するためにも「ちゃんと作っておこう！」と思い、標準的な機能を組み込んだプラグインを作りました！</p>\n\n<p>GitHub: <a href=\"https://github.com/kamem/jquery.dataExtend\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/kamem/jquery.dataExtend</a></p>\n\n<p>（jQuery.dataExtedの説明と合わせて同じリポジトリに入っています。）</p>\n\n<p><a href=\"http://github.develo.org/jquery.dataExtend\" rel=\"nofollow noopener\" target=\"_blank\">DEMO</a></p>\n\n<h2>\n<span id=\"仕様\" class=\"fragment\"></span><a href=\"#%E4%BB%95%E6%A7%98\"><i class=\"fa fa-link\"></i></a>仕様</h2>\n\n<ol>\n<li>タブ移動のような単純な切り替え。</li>\n<li>スライドショーの実装。</li>\n<li>タブの位置をストレージに保存。</li>\n<li>基本的な表示切り替えはクラスを変えることにより実装しています。※表示中のコンテンツはonそれ以外のコンテンツはoffが付きます。<br>\n（slideshow or opacityの場合は、クラス変更とは別にleftやopacityをjsで変更しています。）</li>\n</ol>\n\n<h2>\n<span id=\"使い方\" class=\"fragment\"></span><a href=\"#%E4%BD%BF%E3%81%84%E6%96%B9\"><i class=\"fa fa-link\"></i></a>使い方</h2>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>&lt;script type=\"text/javascript\" src=\"js/jquery.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"js/jquery.tab.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n$(function(){\n     $('.tab').tab();\n});\n&lt;/script&gt;\n</pre></div></div>\n\n<h3>\n<span id=\"html\" class=\"fragment\"></span><a href=\"#html\"><i class=\"fa fa-link\"></i></a>html</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>&lt;ul class=\"nav content_main\"&gt;\n    &lt;li&gt;nav1&lt;/li&gt;\n    &lt;li&gt;nav2&lt;/li&gt;\n    &lt;li&gt;nav3&lt;/li&gt;\n&lt;/ul&gt;\n&lt;ul class=\"main_assist\"&gt;\n    &lt;li class=\"prev\"&gt;prev&lt;/li&gt;\n    &lt;li class=\"next\"&gt;next&lt;/li&gt;\n&lt;/ul&gt;\n&lt;div class=\"main\"&gt;\n    &lt;section&gt;\n        &lt;h2&gt;&lt;a href=\"#content1\"&gt;1&lt;/a&gt;&lt;/h2&gt;\n    &lt;/section&gt;\n    &lt;section&gt;\n        &lt;h2&gt;&lt;a href=\"#content2\"&gt;2&lt;/a&gt;&lt;/h2&gt;\n    &lt;/section&gt;\n    &lt;section&gt;\n        &lt;h2&gt;&lt;a href=\"#content3\"&gt;3&lt;/a&gt;&lt;/h2&gt;\n    &lt;/section&gt;\n&lt;/div&gt;\n</pre></div></div>\n\n<ul>\n<li>ナビゲーションとして使いたい部分をプラグインとして指定します。</li>\n<li>そのタグのクラスに付いている「content_main」「content_」の後の文字（例の場合main）クラスが付いているエリアの子要素がタブとして切り替わります。</li>\n<li>「前」や「後ろ」に進む操作をしたい場合は「main_assist」のように「タブ移動したいコンテンツクラス_assist」というタグで囲った子要素に「prev」と「next」クラスをそれぞれ付けることが実装できます。</li>\n</ul>\n\n<h3>\n<span id=\"初期設定\" class=\"fragment\"></span><a href=\"#%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A\"><i class=\"fa fa-link\"></i></a>初期設定</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>timer: false,\nnum: 0,\nisSessionStorage: false,\ntype: 'normal',\nspeed: 400,\neasing: 'linear',\nisRoop: false\n</pre></div></div>\n\n<ul>\n<li>timer: {Number} タブの自動移動の感覚（setinterval）</li>\n<li>num: {Number} 初期位置</li>\n<li>isSessionStorage: {Boolean} ストレージに保存するか</li>\n<li>type: {String} 移動時の動きのタイプ (slideshow or opacity)</li>\n<li>speed: {Number} 移動速度</li>\n<li>easing: {String} イージングのタイプ <a href=\"http://semooh.jp/jquery/cont/doc/easing/\" rel=\"nofollow noopener\" target=\"_blank\">Easing/jQuery</a><br>\nイージングが必要な場合には、イージングプラグインを別途読み込んでください。</li>\n<li>isRoop: {Boolean}「next」を押して次へ進んだ時に「最後から最初」の移動を戻るのではなくループするようにするか</li>\n</ul>\n","updated":1406914698,"tags":["HTML","JavaScript","jQuery"],"uuid":"bb11e8b8027b7b5c44be","title":"タブとかスライドショーとかのコンテンツ切り替え用jQueryプラグイン","created":1406913715},{"updated":1406280554,"tags":["JavaScript","grunt"],"uuid":"ee18c00d7eda3dfe3509","title":"Gruntでコピーライトつきの.minファイルを作る","created":1401445825,"userId":"kamem","body":"<p>site: <a href=\"http://develo.org/grunt.jsmin\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">http://develo.org/grunt.jsmin</a><br>\nGitHub: <a href=\"https://github.com/kamem/grunt.jsmin\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/kamem/grunt.jsmin</a></p>\n\n<p>javascriptのファイルを圧縮するときにコピーライトと日付とかを手動でいれたりするのめんどくさいなぁ・・。と思っていたので</p>\n\n<p>jsフォルダに入っているjsと同ファイル名.txtをコピーライトとして追加した.minファイルを作るgruntを作りました。</p>\n\n<h2>\n<span id=\"仕様\" class=\"fragment\"></span><a href=\"#%E4%BB%95%E6%A7%98\"><i class=\"fa fa-link\"></i></a>仕様</h2>\n\n<ol>\n<li>grunt <code>--pluginName=ファイル名</code>\n</li>\n<li>pluginNameに圧縮したいjsの名前を指定すると、そのファイルがjsフォルダの同ファイル名.txtをコピーライトとしてminフォルダに同ファイル名.min.jsファイルが制作される</li>\n</ol>\n\n<h2>\n<span id=\"使い方\" class=\"fragment\"></span><a href=\"#%E4%BD%BF%E3%81%84%E6%96%B9\"><i class=\"fa fa-link\"></i></a>使い方</h2>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>grunt --pluginName=jquery.sample \n</pre></div></div>\n\n<p>プラグインとか公開する用にいいかなぁと思います！</p>\n"},{"created":1403326682,"userId":"kamem","body":"<p>site: <a href=\"http://develo.org/jquery.dataExtend\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">http://develo.org/jquery.dataExtend</a><br>\nGitHub: <a href=\"https://github.com/kamem/jquery.dataExtend\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/kamem/jquery.dataExtend</a></p>\n\n<p>プラグインを複数のページなどで違う動作をしたい場合に<br>\nわざわざjsを用意して指定し直さないければいけないのが煩わしいと思っていたので<br>\nかわりにdata-*で指定したパラメーターを使うことができるjQuery プラグインを作りました。</p>\n\n<p><a href=\"http://github.develo.org/jquery.dataExtend/\" rel=\"nofollow noopener\" target=\"_blank\">DEMO</a></p>\n\n<h2>\n<span id=\"仕様\" class=\"fragment\"></span><a href=\"#%E4%BB%95%E6%A7%98\"><i class=\"fa fa-link\"></i></a>仕様</h2>\n\n<ul>\n<li>\n<p>下記のようなプラグインがあった場合に</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$('.tab').tab{\n    timer: 1000,\n    num: 1,\n    isSessionStorage: true\n};\n</pre></div></div>\n</li>\n<li>\n<p>下記のようにHTMLのdata属性を代わりに使うことができます。</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>&lt;p class=\"tab\" data-timer=\"1000\" data-num=\"1\" is-session-storage=\"true\"&gt;\n</pre></div></div>\n</li>\n</ul>\n\n<h2>\n<span id=\"使い方\" class=\"fragment\"></span><a href=\"#%E4%BD%BF%E3%81%84%E6%96%B9\"><i class=\"fa fa-link\"></i></a>使い方</h2>\n\n<ol>\n<li>\n<p>スクリプトの記述（プラグインの後にjquery.dataExtend.jsを読むこむ）</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>&lt;script src=\"js/jquery.js\"&gt;&lt;/script&gt;\n&lt;script src=\"js/jquery.tab.js\"&gt;&lt;/script&gt;\n&lt;script src=\"js/jquery.dataExtend.js\"&gt;&lt;/script&gt;\n</pre></div></div>\n</li>\n<li>\n<p>$('適応したいタグ').dataExtemd('プラグイン名');</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>&lt;script&gt;\n$(function(){\n    $('.nav').dataExtend('tab');\n});\n&lt;/script&gt;\n</pre></div></div>\n</li>\n<li>\n<p>HTMLにdata属性を記述する（キャメルケースの場合「-」でつなげる）※ is-session-storage = isSessionStorage</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>&lt;p class=\"tab\" data-timer=\"1000\" data-num=\"1\" is-session-storage=\"true\"&gt;\n</pre></div></div>\n</li>\n</ol>\n","updated":1406279917,"tags":["HTML","JavaScript","jQuery"],"uuid":"94e974a0212396d97ed7","title":"jQuery Plugin パラメーターの代わりにdata属性で代用できるプラグイン"},{"userId":"kamem","body":"<p>生徒の作品に使えそうかなぁと思ったのと、<br>\n紙吹雪ってキャンバス意外で綺麗に見えてるのがあまりなかったので作ってみました！</p>\n\n<p>ただやっぱりcanvasじゃないので、たくさんのタグを生成すると重くなっちゃいますね。</p>\n\n<p>site: <a href=\"http://develo.org/2014/06/28/1557.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">http://develo.org/2014/06/28/1557.html</a><br>\nGitHub: <a href=\"https://github.com/kamem/jquery.confetti\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/kamem/jquery.confetti</a></p>\n\n<h2>\n<span id=\"仕様\" class=\"fragment\"></span><a href=\"#%E4%BB%95%E6%A7%98\"><i class=\"fa fa-link\"></i></a>仕様</h2>\n\n<ol>\n<li>指定の数だけ紙吹雪をふらせる</li>\n<li>htmlとcssアニメーションで紙吹雪を再現</li>\n<li>domなので少し重いため数は制限する必要がある</li>\n<li>bodyの一番したにタグを生成</li>\n<li>画面外から消えた時にタグを削除</li>\n<li>全てのタグが画面外に消えた場合にcomplateを実行</li>\n</ol>\n\n<p><a href=\"http://github.develo.org/jquery.confetti/\" rel=\"nofollow noopener\" target=\"_blank\">DEMO</a></p>\n\n<h2>\n<span id=\"使い方\" class=\"fragment\"></span><a href=\"#%E4%BD%BF%E3%81%84%E6%96%B9\"><i class=\"fa fa-link\"></i></a>使い方</h2>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>&lt;script type=\"text/javascript\" src=\"js/jquery.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"js/jquery.confetti.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n$(function(){\n    $('html').confetti();\n});\n&lt;/script&gt;\n</pre></div></div>\n\n<h2>\n<span id=\"オプション\" class=\"fragment\"></span><a href=\"#%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3\"><i class=\"fa fa-link\"></i></a>オプション</h2>\n\n<h3>\n<span id=\"初期設定\" class=\"fragment\"></span><a href=\"#%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A\"><i class=\"fa fa-link\"></i></a>初期設定</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>x: $content.offset().left + $content.width() / 2,\ny: $content.offset().top + $content.height() / 2,\nnum: 20,\nspeedRange: 10,\nairResistanceNum:  0.95,\ngravityNum: 0.45,\nintervalSpeed: 30,\ncomplate: false\n</pre></div></div>\n\n<p>※ [x,y] defaultでは指定したタグの位置+タグの半分の位置</p>\n\n<ul>\n<li>x: {Number} offset().left + width() / 2</li>\n<li>y: {Number} offset().top + height() / 2</li>\n<li>num: {Number} 紙吹雪の数</li>\n<li>speedRange: {Number} 初速度の範囲</li>\n<li>airResistanceNum:  {Number} 空気抵抗</li>\n<li>gravityNum: {Number} 重力</li>\n<li>intervalSpeed: {Number} 処理をどのぐらいの感覚で行うか</li>\n<li>complate: {Function} 全てのタグが画面外に消えた場合実行される関数</li>\n</ul>\n\n<h2>\n<span id=\"例\" class=\"fragment\"></span><a href=\"#%E4%BE%8B\"><i class=\"fa fa-link\"></i></a>例</h2>\n\n<p>htmlのどこかをクリックした際にクリック位置から紙吹雪をちらす</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$(function(){\n    $('html').click(function(e){\n        $('[class*=confetti]').remove();\n        $('html').confetti({\n            x: e.pageX,\n            y: e.pageY,\n            complate:function(){\n                alert('complate');\n            }\n        });\n    });\n});\n</pre></div></div>\n","updated":1403940937,"tags":["HTML","CSS","JavaScript","jQuery"],"uuid":"181949dee3aa7a714b9d","title":"紙吹雪を降らせるjQueryプラグイン","created":1403936396},{"userId":"kamem","body":"<p>site: <a href=\"http://develo.org/2014/05/07/0900.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">http://develo.org/2014/05/07/0900.html</a><br>\nGitHub: <a href=\"https://github.com/kamem/jquery.textAnimation\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/kamem/jquery.textAnimation</a></p>\n\n<p>テキストに1文字づつCSSでアニメーションをつけたら面白い動きになるんじゃないかなぁと思って作ってみました！値を設定できるようにしてみたら自分で予想してないような面白い動きも作れて楽しめました。<br>\n値によってはハリーポッターとか映画でよくあるような文字の出方みたいになったり！</p>\n\n<p><a href=\"http://github.develo.org/jquery.textAnimation/\" rel=\"nofollow noopener\" target=\"_blank\">DEMO + Edit</a></p>\n\n<p>（下のエリアのコードを使えばその動きを実行することができます。）</p>\n\n<h2>\n<span id=\"仕様\" class=\"fragment\"></span><a href=\"#%E4%BB%95%E6%A7%98\"><i class=\"fa fa-link\"></i></a>仕様</h2>\n\n<ol>\n<li>1文字づつテキストをアニメーションで表示する</li>\n</ol>\n\n<h2>\n<span id=\"使い方\" class=\"fragment\"></span><a href=\"#%E4%BD%BF%E3%81%84%E6%96%B9\"><i class=\"fa fa-link\"></i></a>使い方</h2>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>&lt;script type=\"text/javascript\" src=\"js/jquery.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"js/jquery.textAnimation.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n    $('.text1').textAnimation();\n&lt;/script&gt;\n</pre></div></div>\n\n<h2>\n<span id=\"オプション\" class=\"fragment\"></span><a href=\"#%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3\"><i class=\"fa fa-link\"></i></a>オプション</h2>\n\n<h3>\n<span id=\"初期設定\" class=\"fragment\"></span><a href=\"#%E5%88%9D%E6%9C%9F%E8%A8%AD%E5%AE%9A\"><i class=\"fa fa-link\"></i></a>初期設定</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>speed: 1000,\ndelay: 200,\nleft: 0,\ntop: 0,\nscale: 1,\nrotateY: 0,\nrotateX: 0,\ntranslateZ: 0,\nletterSpacing: $content.css(' letterSpacing'),\neasing: 'ease-out',\nbackgroundColor: 'transparent',\nisRandomScale:  false,\nisRandomPosition:  false,\nisRandomRotateY: false,\nisRandomRotateX: false,\nisRandomTranslateZ: false,\nisRandomSpeed: false,\nisRandomDelay: false\n</pre></div></div>\n\n<ul>\n<li>speed: CSSのスピード（ms）</li>\n<li>delay: 次の文字までの時間（ms）</li>\n<li>left: leftの移動量（px）</li>\n<li>top: topの移動量（px）</li>\n<li>scale: transformのscale変化量</li>\n<li>rotateY: transformのrotateY変化量</li>\n<li>rotateX: transformのrotateX変化量</li>\n<li>translateZ: transformのrotateZ変化量</li>\n<li>letterSpacing: letter-spacing変化量</li>\n<li>easing: transition-timing-functionで指定できるeasing,</li>\n<li>backgroundColor: 変化させたい背景色</li>\n<li>isRandomScale:  scaleをランダムの値にするか。（delayで指定した値までのランダム）</li>\n<li>isRandomPosition: left,topをランダムの値にするか。（left,topで指定した値までのランダム  マイナスの値も含む 200の場合 -200 ~ 200となる）</li>\n<li>isRandomRotateY: rotateYをランダムの値にするか。（rotateYで指定した値までのランダム）</li>\n<li>isRandomRotateX: rotateXをランダムの値にするか。（rotateXで指定した値までのランダム）</li>\n<li>isRandomTranslateZ: rotateZをランダムの値にするか。（rotateZで指定した値までのランダム）</li>\n<li>isRandomSpeed: speedをランダムの値にするか。（speedで指定した値までのランダム）</li>\n<li>isRandomDelay: delayをランダムの値にするか。</li>\n</ul>\n","updated":1400687825,"tags":["JavaScript","jQuery"],"uuid":"8cfae412a6161ae23e77","title":"テキストを1文字づつアニメーションで表示させるjQueryプラグイン","created":1400687825},{"updated":1400512075,"tags":["HTML","CSS","JavaScript","jQuery"],"uuid":"fc97e9c3ee2f62f29bfa","title":"dlを使ったtableのdtとddの高さを揃えるjQuery プラグイン","created":1400376403,"userId":"kamem","body":"<p>site: <a href=\"http://develo.org/2014/04/29/2219.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">http://develo.org/2014/04/29/2219.html</a><br>\nGitHub: <a href=\"https://github.com/kamem/jquery.dlTableSet\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/kamem/jquery.dlTableSet</a></p>\n\n<p>dlを使ってdt ddを横並びにしてテーブルを再現するときに、dtの高さがddよりも高い場合にレイアウトが崩れてしまいます。それを解消するためのjQueryプラグインです！単純に読み込ませてタグを指定するだけなのでお手軽です。</p>\n\n<p><a href=\"http://github.develo.org/jquery.dlTableSet/\" rel=\"nofollow noopener\" target=\"_blank\">DEMO</a></p>\n\n<h2>\n<span id=\"仕様\" class=\"fragment\"></span><a href=\"#%E4%BB%95%E6%A7%98\"><i class=\"fa fa-link\"></i></a>仕様</h2>\n\n<ul>\n<li>dlを使ったtableのdtとddの高さを揃える</li>\n<li>ひとつのdtに対して複数ddがあった場合 dtの高さをddの数で割った値が 一つのddの高さになる。</li>\n</ul>\n\n<h2>\n<span id=\"使い方\" class=\"fragment\"></span><a href=\"#%E4%BD%BF%E3%81%84%E6%96%B9\"><i class=\"fa fa-link\"></i></a>使い方</h2>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>&lt;script type=\"text/javascript\" src=\"js/jquery.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"js/jquery.dlTableSet.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n$(function(){\n    $('dl.table').dlTableSet();\n});\n&lt;/script&gt;\n</pre></div></div>\n"},{"userId":"kamem","body":"<p>site: <a href=\"http://develo.org/2014/05/16/0237.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">http://develo.org/2014/05/16/0237.html</a><br>\nGitHub: <a href=\"https://github.com/kamem/workflow.png-jpeg-mini\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/kamem/workflow.png-jpeg-mini</a></p>\n\n<h2>\n<span id=\"jpeg圧縮\" class=\"fragment\"></span><a href=\"#jpeg%E5%9C%A7%E7%B8%AE\"><i class=\"fa fa-link\"></i></a>jpeg圧縮</h2>\n\n<ul>\n<li><a href=\"http://www.jpegmini.com/\" rel=\"nofollow noopener\" target=\"_blank\">JPEGmini</a></li>\n</ul>\n\n<h2>\n<span id=\"pngの色圧縮\" class=\"fragment\"></span><a href=\"#png%E3%81%AE%E8%89%B2%E5%9C%A7%E7%B8%AE\"><i class=\"fa fa-link\"></i></a>pngの色圧縮</h2>\n\n<ul>\n<li><a href=\"http://pngmini.com/\" rel=\"nofollow noopener\" target=\"_blank\">ImageAlpha</a></li>\n</ul>\n\n<h2>\n<span id=\"gifjpegpngの圧縮\" class=\"fragment\"></span><a href=\"#gifjpegpng%E3%81%AE%E5%9C%A7%E7%B8%AE\"><i class=\"fa fa-link\"></i></a>gif,jpeg,pngの圧縮</h2>\n\n<ul>\n<li><a href=\"http://imageoptim.com/\" rel=\"nofollow noopener\" target=\"_blank\">ImageOptim</a></li>\n</ul>\n\n<p>流れとしては下記のような感じ<br>\n* jpeg: JPEGmini → ImageOptim<br>\n* png: ImageAlpha → ImageOptim<br>\n* gif: ImageOptim</p>\n\n<h2>\n<span id=\"ショートカットでファイルを圧縮\" class=\"fragment\"></span><a href=\"#%E3%82%B7%E3%83%A7%E3%83%BC%E3%83%88%E3%82%AB%E3%83%83%E3%83%88%E3%81%A7%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E5%9C%A7%E7%B8%AE\"><i class=\"fa fa-link\"></i></a>ショートカットでファイルを圧縮</h2>\n\n<ul>\n<li>jpeg: jpegoptim → ImageOptim</li>\n<li><p>png: ImageAlpha → ImageOptim</p></li>\n<li><p><a href=\"http://www.yoheim.net/blog.php?q=20130802\" rel=\"nofollow noopener\" target=\"_blank\">JPGファイルをコマンドラインで圧縮するツールが便利！</a></p></li>\n</ul>\n\n<ol>\n<li>png-jpeg-mini.workflowファイルを「/（ユーザー名）/ライブラリ/Services/ 」ここに格納</li>\n<li>システム環境設定 → キーボード → キーボードショーットカットタブ</li>\n<li>左側のメニューから「アプリケーション」を選択</li>\n<li>ちょっと下にある「+」ボタンを押下</li>\n<li>アプリケーション：Finder<br>\nメニュータイトル：png-jpeg-mini<br>\nキーボードショーットカット：（任意）</li>\n</ol>\n","updated":1400415894,"tags":["Mac"],"uuid":"1b15e1671478ec2d6402","title":"Macでの画像圧縮と設定","created":1400415580},{"userId":"kamem","body":"<p>site: <a href=\"http://develo.org/2014/05/11/2100.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">http://develo.org/2014/05/11/2100.html</a></p>\n\n<p>4つの角を1つの画像を反転して置きたいときにいつも 「どうやったらできるんだろ・・。」と悩んでました。</p>\n\n<p>あるとき・・。「こうやったらできるんじゃない！？」と閃いて試してみたらできたのでメモしときます。</p>\n\n<h2>\n<span id=\"仕様\" class=\"fragment\"></span><a href=\"#%E4%BB%95%E6%A7%98\"><i class=\"fa fa-link\"></i></a>仕様</h2>\n\n<ol>\n<li>:before,:afterを使って再現。（なので背景は別で使うことができます。）</li>\n<li>-webkit-box-reflectを使うため、webkit系ブラウザのみ対応（スマホサイトなど作るときに役立つ！）</li>\n</ol>\n\n<h2>\n<span id=\"css\" class=\"fragment\"></span><a href=\"#css\"><i class=\"fa fa-link\"></i></a>CSS</h2>\n\n<p>sectionタグの4つ角に設定したい場合</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>section {\n    position: relative;\n}\n\nsection:before,\nsection:after {\n    content: '';\n    display: block;\n    background: url('test.gif') no-repeat;\n    position: absolute;\n    width: 50%;\n    -webkit-box-reflect: right;\n    height: 15px;\n}\n\nsection:before {\n    top: 0;\n    left: 0;\n}\nsection:after {\n    right: 0;\n    bottom: 0;\n    -webkit-transform:rotate(-180deg);\n}\n</pre></div></div>\n\n<h2>\n<span id=\"demojsdoit\" class=\"fragment\"></span><a href=\"#demojsdoit\"><i class=\"fa fa-link\"></i></a>DEMO（jsdo.it）</h2>\n\n<p><a href=\"http://jsdo.it/kamem/faGs\" rel=\"nofollow noopener\" target=\"_blank\">1つの画像で4つの角を再現するCSS - jsdo.it</a></p>\n","updated":1400395032,"tags":["HTML","CSS"],"uuid":"f4eb3c3508053db8e8b5","title":"1つの画像で4つの角を再現するCSS","created":1400392413},{"created":1400348206,"userId":"kamem","body":"<ul>\n<li>site: <a href=\"http://develo.org/2014/05/08/1000.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">http://develo.org/2014/05/08/1000.html</a>\n</li>\n<li>GitHub: <a href=\"https://github.com/kamem/compass.develo\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/kamem/compass.develo</a>\n</li>\n</ul>\n\n<p>Sass,Compassでフォルダ内にある複数の画像をとってきて背景画像を指定したいときなどに、「全部書くのってめんどくさいなぁ・・」って思っていました。</p>\n\n<p>なので！指定したフォルダ内のファイル名を取得してくれるやつを作ってみました！コードも省略できたり。<br>\n新たにフォルダ内に画像を追加してコンパイルすればコードを書く手間も省けたりで使い勝手良いと思います。</p>\n\n<h2>\n<span id=\"仕様使い方\" class=\"fragment\"></span><a href=\"#%E4%BB%95%E6%A7%98%E4%BD%BF%E3%81%84%E6%96%B9\"><i class=\"fa fa-link\"></i></a>仕様・使い方</h2>\n\n<ul>\n<li>\n<code>fileList('folderName/<em>')</em></code>でフォルダ内の全てのファイルリストが取得できます。（例えばgifの画像だけを取得したい場合には<code>fileList('folderName/.gif')</code>となります。）</li>\n<li>初期状態ではcompass watchした場所からのパスを全て表示します。</li>\n<li>第2引き数にfalseを入れることにより<code>fileList('folderName/*',false)</code>ファイル名 + 拡張子だけを取得することができます。</li>\n<li>拡張子が必要ない場合には第3引き数に必要のない拡張子を指定します<code>fileList('folderName/*',false,'.gif')</code>\n</li>\n</ul>\n\n<h2>\n<span id=\"実際に使う\" class=\"fragment\"></span><a href=\"#%E5%AE%9F%E9%9A%9B%E3%81%AB%E4%BD%BF%E3%81%86\"><i class=\"fa fa-link\"></i></a>実際に使う</h2>\n\n<p>「html/img」フォルダ内のgif画像を階層なし拡張子無しファイル名を取得したい場合。</p>\n\n<p>「$images_dir」にconfig.rbで指定しているimages_dirの値を持っておくと便利です。<br>\n※ config.rb内のimages_dirの値を取ってこれたら便利だなぁと思ったのですが、見つかりませんでしたので、sass内で持つようにしています。</p>\n\n<h3>\n<span id=\"sass\" class=\"fragment\"></span><a href=\"#sass\"><i class=\"fa fa-link\"></i></a>Sass</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$images_dir: 'html/img/';\n$imgs: fileList($images_dir + \"*.gif\",false,'.gif');\n\n.fileList li {\n    @each $img in $imgs {\n        #{\"&amp;.\" + $img} {\n            background: image-url(\"#{$img}.gif\");\n        }\n    }\n}\n</pre></div></div>\n\n<h3>\n<span id=\"css\" class=\"fragment\"></span><a href=\"#css\"><i class=\"fa fa-link\"></i></a>CSS</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>.fileList li.img1 {\n  background: url('/html/img/img1.gif?1394796721');\n}\n.fileList li.img2 {\n  background: url('/html/img/img2.gif?1394796721');\n}\n.fileList li.img3 {\n  background: url('/html/img/img3.gif?1394796721');\n}\n.fileList li.img4 {\n  background: url('/html/img/img4.gif?1394796721');\n}\n.fileList li.img5 {\n  background: url('/html/img/img5.gif?1394796721');\n}\n</pre></div></div>\n","updated":1400349306,"tags":["CSS","Sass","Compass"],"uuid":"53769ca56ce037b43579","title":"Sass,Compassでフォルダ内のファイルリストを取得するカスタム関数"},{"userId":"kamem","body":"<ul>\n<li>site: <a href=\"http://develo.org/2014/05/08/1000.html\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">http://develo.org/2014/05/08/1000.html</a>\n</li>\n<li>GitHub: <a href=\"https://github.com/kamem/compass.develo\" class=\"autolink\" rel=\"nofollow noopener\" target=\"_blank\">https://github.com/kamem/compass.develo</a>\n</li>\n</ul>\n\n<p>配列で繰り返し処理をし、<code>image-url</code>などを使ってその名前の画像を表示するような仕組みの場合<br>\nそのファイルが無いとsassではエラーになってしまいます。<br>\nその時にその画像の有無をとってきて画像がない場合には処理が走らないようにしたり。<br>\nまたはファイルの有無によって処理を変えたりなどの用途に使うことができます。</p>\n\n<h2>\n<span id=\"仕様使い方\" class=\"fragment\"></span><a href=\"#%E4%BB%95%E6%A7%98%E4%BD%BF%E3%81%84%E6%96%B9\"><i class=\"fa fa-link\"></i></a>仕様・使い方</h2>\n\n<ol>\n<li>\n<p>config.rbに記述<br>\n（rbフォルダ内に入れている場合）</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>require \"./rb/isFile.rb\"\n</pre></div></div>\n</li>\n<li><p>isFile('fileName')で ture or false が文字列で返って来ます。<br>\n※ fileNameは<code>compass watch</code>している場所からのパスになります。</p></li>\n<li>\n<p>実際に使う</p>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>@if isFile('fileName') == 'true' {\n\n}\n</pre></div></div>\n</li>\n</ol>\n\n<h2>\n<span id=\"例\" class=\"fragment\"></span><a href=\"#%E4%BE%8B\"><i class=\"fa fa-link\"></i></a>例</h2>\n\n<p>img（数字）.gifの画像を背景に指定する際にimg6以降がない場合。</p>\n\n<h3>\n<span id=\"sass\" class=\"fragment\"></span><a href=\"#sass\"><i class=\"fa fa-link\"></i></a>Sass</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>$img: img1,img2,img3,img4,img5,img6,img7,img8,img9,img10;\n$num: 0;\nol li {\n    text-indent: -9999px;\n    @each $name in $img {\n        $num: $num + 1;\n        &amp;#{':nth-child(' + $num + ')'} {\n            @if isFile('html/img/' + $name + '.gif') == 'true' {\n                background: image-url($name + '.gif');\n            }\n        }\n    }\n}\n</pre></div></div>\n\n<h3>\n<span id=\"css\" class=\"fragment\"></span><a href=\"#css\"><i class=\"fa fa-link\"></i></a>CSS</h3>\n\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>ol li {\n    text-indent: -9999px;\n}\nol li:nth-child(1) {\n    background: url('/html/img/img1.gif?1394796721');\n}\nol li:nth-child(2) {\n    background: url('/html/img/img2.gif?1394796721');\n}\nol li:nth-child(3) {\n    background: url('/html/img/img3.gif?1394796721');\n}\nol li:nth-child(4) {\n    background: url('/html/img/img4.gif?1394796721');\n}\nol li:nth-child(5) {\n    background: url('/html/img/img5.gif?1394796721');\n}\n</pre></div></div>\n","updated":1400349175,"tags":["CSS","Sass","Compass"],"uuid":"90d2b5e60423f3188307","title":"Sass,Compassファイルの有無を返してくれるカスタム関数","created":1400347942}]}