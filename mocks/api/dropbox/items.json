{"items":[{"userId":"develo0@gmail.com","body":"<p>クラス名には様々な付け方があります。</p>\n<p><a href=\"https://qiita.com/J_Sugar__/items/9adee163028c9910fbc6\">SMACSS+BEMによるテーマ設計（for Drupal8）</a></p>\n<p>何が正解というものはないですが、抑えておきたい考え方があります。</p>\n<p>それはスタイルを当てるときのことを考えて、「コンポーネント単位」でクラスをつけることです。</p>\n<p><a href=\"https://codepen.io/kame/pen/ZdJLzp\">https://codepen.io/kame/pen/ZdJLzp</a></p>\n<pre><code>&lt;header id=&quot;header&quot;&gt;\n    &lt;h1 class=&quot;main-title&quot;&gt;タイトル&lt;/h1&gt;\n    &lt;nav class=&quot;gnav&quot;&gt;\n      &lt;ul&gt;\n        &lt;li class=&quot;gnav-item&quot;&gt;&lt;a href=&quot;&quot;&gt;メニュー1&lt;/a&gt;&lt;/li&gt;\n        &lt;li class=&quot;gnav-item&quot;&gt;&lt;a href=&quot;&quot;&gt;メニュー2&lt;/a&gt;&lt;/li&gt;\n        &lt;li class=&quot;gnav-item&quot;&gt;&lt;a href=&quot;&quot;&gt;メニュー3&lt;/a&gt;&lt;/li&gt;\n      &lt;/ul&gt;\n    &lt;/nav&gt;\n&lt;/header&gt;\n\n&lt;main id=&quot;main&quot;&gt;\n    &lt;article id=&quot;main-content&quot;&gt;\n        &lt;h2 class=&quot;main-title&quot;&gt;タイトル&lt;/h2&gt;\n        &lt;p class=&quot;main-description&quot;&gt;このサイトについての説明文&lt;/p&gt;\n\n        &lt;section class=&quot;item&quot; id=&quot;about&quot;&gt;\n            &lt;h3 class=&quot;item-title&quot;&gt;このサイトについて&lt;/h3&gt;\n            &lt;p&gt;HTMLや、CSSについての勉強を目的としたページ&lt;p&gt;\n            &lt;section class=&quot;about-item&quot;&gt;\n              &lt;h4 class=&quot;about-item-title&quot;&gt;HTML&lt;/h4&gt;\n              &lt;p&gt;HTMLで最低限必要な部分の説明&lt;/p&gt;\n            &lt;/section&gt;\n\n            &lt;section class=&quot;about-item&quot;&gt;\n              &lt;h4 class=&quot;about-item-title&quot;&gt;CSS&lt;/h4&gt;\n              &lt;p&gt;CSSでよく使う部分の説明&lt;/p&gt;\n            &lt;/section&gt;\n        &lt;/section&gt;\n\n        &lt;section class=&quot;item&quot; id=&quot;html&quot;&gt;\n            &lt;h3 class=&quot;item-title&quot;&gt;HTMLの勉強法&lt;/h3&gt;\n            &lt;p&gt;HTMLで大事なのはその言葉が表しているものを意味付けすることが大事です。&lt;/p&gt;\n            &lt;p&gt;見た目を調整するのはCSSに任せましょう。&lt;/p&gt;\n            &lt;p&gt;&lt;strong&gt;見出し&lt;/strong&gt;、&lt;strong&gt;文章&lt;/strong&gt;、&lt;strong&gt;リスト&lt;/strong&gt;などの意味付けをするマークアップを心がけましょう。&lt;/p&gt;\n        &lt;/section&gt;\n\n        &lt;section class=&quot;item&quot; id=&quot;css&quot;&gt;\n            &lt;h3 class=&quot;item-title&quot;&gt;CSSの勉強法&lt;/h3&gt;\n            &lt;p&gt;HTMLでマークアップした要素に対してデザインをあてます。&lt;/p&gt;\n        &lt;/section&gt;\n    &lt;/article&gt;\n&lt;/main&gt;\n\n&lt;footer id=&quot;footer&quot;&gt;\n    &lt;p class=&quot;copyright&quot;&gt;&lt;small&gt;&amp;copy; copyright kamem&lt;/small&gt;&lt;/p&gt;\n&lt;/footer&gt;</code></pre><p>このように、下記のようなコンポーネントに分けて考えクラスをつけています。</p>\n<ul>\n<li>header</li>\n<li>main-title</li>\n<li>gnav</li>\n<li>gnav-item</li>\n</ul>\n<ul>\n<li>main</li>\n<li>main-content</li>\n<li>main-title</li>\n<li>main-description</li>\n</ul>\n<ul>\n<li>item</li>\n<li>item-title</li>\n</ul>\n<ul>\n<li>about-item</li>\n<li>about-item-title</li>\n</ul>\n<ul>\n<li>footer</li>\n<li>copyright</li>\n</ul>\n<p>スタイルはコンポーネント単位で考え、\nその外側に影響しないように考えて組んでいきましょう。</p>\n","updated":1566956870,"tags":["HTML,CSS講座"],"uuid":"9WDB0txcfl2q72GhoeOtX","title":"[HTML講座] ID・クラスの指定","created":1561455483},{"userId":"develo0@gmail.com","body":"<h2 id=\"連想配列の宣言\">連想配列の宣言</h2>\n<pre><code>const empty= {};\nconst fruits = {\n  red: &#39;りんご&#39;,\n  orange: &#39;みかん&#39;,\n  yellow: &#39;バナナ&#39;\n};</code></pre><p>※ 左側のred, orange, yellowの部分を添字といいます。</p>\n<h3 id=\"連想配列の取り出し方\">連想配列の取り出し方</h3>\n<ol>\n<li>変数名.添字</li>\n<li>変数名[&#39;添字&#39;]  </li>\n</ol>\n<p>※ 2だと添字部分を変数にできるので 、うまい具合に使い分けましょう。</p>\n<h4 id=\"例\">例</h4>\n<pre><code>console.log(fruits.red); // りんご\nconsole.log(fruits[&#39;orange&#39;]); // みかん\n\nconst color = &#39;yellow&#39;\nconsole.log(fruits[color]); // バナナ</code></pre><h2 id=\"連想配列と多次元配列を使って整理\">連想配列と多次元配列を使って整理</h2>\n<pre><code>const fruits = {\n  red: [&#39;りんご&#39;, &#39;さくらんぼ&#39;, &#39;いちご&#39;], // 赤い果物\n  orange: [&#39;かき&#39;, &#39;みかん&#39;, &#39;びわ&#39;], // オレンジ色果物\n  yellow: [&#39;バナナ&#39;, &#39;パイナップル&#39;, &#39;レモン&#39;] // 黄色い果物\n};</code></pre><h3 id=\"取り出し方\">取り出し方</h3>\n<pre><code>console.log(fruits.red[0]); // りんご\nconsole.log(fruits\\[&#39;orange&#39;\\][1]); // みかん\n\nconst color = &#39;yellow&#39;\nconsole.log(fruits\\[color\\][0]); // バナナ</code></pre><p><a href=\"https://codepen.io/kame/pen/VoPwVE\">[デモ]連想配列（Object）</a></p>\n","updated":1564332693,"tags":["Javascript講座"],"uuid":"emdgxYfxmTWOGK2YC3Bxu","title":"[JS講座] 8. 連想配列（Object）","created":1534933993},{"userId":"develo0@gmail.com","body":"<h2 id=\"配列の宣言\">配列の宣言</h2>\n<pre><code>const empty = [] //配列を空で定義\nconst fruits = [&#39;りんご&#39;, &#39;バナナ&#39;, &#39;パイナップル&#39;, &#39;ぶどう&#39;, &#39;すいか&#39;, &#39;めろん&#39;];</code></pre><h2 id=\"多次元配列\">多次元配列</h2>\n<pre><code>const fruits = [\n  [&#39;りんご&#39;,&#39;さくらんぼ&#39;,&#39;いちご&#39;], // 赤い果物\n  [&#39;かき&#39;,&#39;みかん&#39;,&#39;びわ&#39;], // オレンジ色果物\n  [&#39;バナナ&#39;,&#39;パイナップル&#39;,&#39;レモン&#39;] // 黄色い果物\n];</code></pre><h3 id=\"配列の取り出し方\">配列の取り出し方</h3>\n<p>変数名[配列番号]<br>※最初の配列を0番目として数えていくことに注意。</p>\n<h4 id=\"例\">例</h4>\n<pre><code>console.log(fruits[0]); // りんご\nconsole.log(fruits[1]); // バナナ\nconsole.log(fruits[2]); // パイナップル\nconsole.log(fruits[3]); // ぶどう\nconsole.log(fruits[4]); // すいか\nconsole.log(fruits[5]); // めろん</code></pre><h3 id=\"多次元配列の取り出し方\">多次元配列の取り出し方</h3>\n<p>変数名[配列番号][配列番号]<br>※最初の配列を0番目として数えていくことに注意。</p>\n<h4 id=\"例-1\">例</h4>\n<p>console.log(fruits[0][0]); // りんご</p>\n<p>console.log(fruits[1][1]); // みかん</p>\n<p>console.log(fruits[2][0]); // バナナ</p>\n<p><a href=\"https://codepen.io/kame/pen/KOaKpP\">[デモ]配列（Array）</a></p>\n","updated":1564331292,"tags":["Javascript講座"],"uuid":"3U8F9TS6WdMfpy4rCXf7g","title":"[JS講座] 7. 配列（Array）","created":1534932618},{"userId":"develo0@gmail.com","body":"<h2 id=\"文字列の長さ\">文字列の長さ</h2>\n<pre><code>&#39;文字列&#39;.length</code></pre><h3 id=\"例\">例</h3>\n<pre><code>const name = &#39;kame&#39;;\nconsole.log(&#39;あなたの名前は&#39; + name.length + &#39;文字です。&#39;);\n\n// 出力結果 : あなたの名前は4文字です。</code></pre><h2 id=\"文字列の部分取り出し\">文字列の部分取り出し</h2>\n<h3 id=\"1文字取り出す\">1文字取り出す</h3>\n<pre><code>&#39;文字列&#39;.charAt(n)</code></pre><p>文字列のn番目文字を返します。<br>※ 最初の文字を0番目として数えていくことに注意。</p>\n<h3 id=\"複数の文字を取り出す\">複数の文字を取り出す</h3>\n<pre><code>&#39;文字列&#39;.slice(from, to)</code></pre><p>文字列のfrom番目からto番目までの文字列を返す。<br>※ toを省略した場合は残り全て</p>\n<h2 id=\"文字列を分割し配列にする\">文字列を分割し配列にする</h2>\n<pre><code>&#39;文字列&#39;.split(sep, limit)</code></pre><p>文字列を sep を区切り文字として分割し、その配列を返します。<br>limit は配列の個数を制限します。</p>\n<h3 id=\"例-1\">例</h3>\n<pre><code>const date = &#39;2013/4/26&#39;;\nconsole.log(date.split(&#39;/&#39;));\n\n//出力結果 : [&quot;2013&quot;, &quot;4&quot;, &quot;26&quot;]</code></pre><p>配列については下記を見てください。</p>\n<p><a href=\"http://clover.blue/doc/3U8F9TS6WdMfpy4rCXf7g\">[JS講座] 7. 配列（Array）</a></p>\n<h2 id=\"文字列を検索・置換する\">文字列を検索・置換する</h2>\n<h3 id=\"文字列の検索した位置を返す\">文字列の検索した位置を返す</h3>\n<pre><code>&#39;文字列&#39;.indexOf(key, form)</code></pre><p>文字列のfrom番目から後方に検索し、最初に key が現れる位置を返します。<br>見つからない場合は-1を返します。<br>※ formを省略した場合は0番目から検索</p>\n<h4 id=\"例-2\">例</h4>\n<pre><code>&#39;文字列&#39;.indexOf(&#39;文&#39;) // 0</code></pre><h3 id=\"文字列の置換\">文字列の置換</h3>\n<pre><code>&#39;文字列&#39;.replace(key,newString)</code></pre><p>文字列内の key をnewStringに置換する。</p>\n<h4 id=\"例-3\">例</h4>\n<pre><code>&#39;文字列&#39;.replace(&#39;文字&#39;, &#39;A&#39;) // A列</code></pre><p><a href=\"https://codepen.io/kame/pen/ZgLzNY\">[デモ]文字列（String）の操作</a></p>\n","updated":1564329454,"tags":["Javascript講座"],"uuid":"hH5crayIvw3jxLHziXc94","title":"[JS講座] 6. 文字列（String）の操作","created":1534929821},{"userId":"develo0@gmail.com","body":"<p>基本的な考え方として、存在するものが<code>true</code>、存在しないものが <code>false</code></p>\n<h2 id=\"trueになる\">trueになる</h2>\n<ul>\n<li>true</li>\n<li>1</li>\n<li>-1</li>\n<li>&#39;0&#39;</li>\n<li>&#39;1&#39;</li>\n</ul>\n<h2 id=\"falseになる\">falseになる</h2>\n<ul>\n<li>false</li>\n<li>0</li>\n<li>‘’ （空文字）</li>\n<li>null</li>\n<li>undefined</li>\n</ul>\n<p><a href=\"https://codepen.io/kame/pen/mNRbaX\">[デモ]何がtrue? false?</a></p>\n","updated":1564328537,"tags":["Javascript講座"],"uuid":"yNvDC1HEDcnbDj0MpvDea","title":"[JS講座] 5. 何がtrue? false?","created":1534932211},{"uuid":"u9rlNkmIhzl9MPKjUmO4R","title":"[JS講座] 4. 条件分岐・繰り返し（if文, for文）","created":1534921326,"userId":"develo0@gmail.com","body":"<h2 id=\"条件分岐\">条件分岐</h2>\n<h3 id=\"if文\">if文</h3>\n<pre><code>if(条件) {\n  console.log(処理...)\n}</code></pre><h4 id=\"例\">例</h4>\n<pre><code>const num = 10\nif(num === 10) {\n  console.log(&#39;numは10です&#39;)\n}</code></pre><h3 id=\"switch文\">switch文</h3>\n<pre><code>switch(変数) {\n  case &#39;値1&#39;:\n    処理\n    break;\n  case &#39;値2&#39;:\n    処理\n    break\n  default:\n    処理3\n    break;\n}</code></pre><h4 id=\"例-1\">例</h4>\n<pre><code>const color = &#39;red&#39;\nswitch(color) {\n  case &#39;red&#39;:\n    console.log(&#39;赤です&#39;)\n    break;\n  case &#39;blue&#39;:\n    console.log(&#39;青です&#39;)\n    break\n  default:\n    console.log(&#39;それ以外の色です&#39;)\n    break;\n}</code></pre><p><a href=\"https://codepen.io/kame/pen/JgbzVZ\">[デモ]if文とswitch文</a></p>\n<h2 id=\"繰り返し\">繰り返し</h2>\n<h3 id=\"for文\">for文</h3>\n<pre><code>for(初期化式; 条件式; 変化式) {\n  処理\n}</code></pre><h4 id=\"例-2\">例</h4>\n<pre><code>for(let i = 0; i &lt; 10; i++) {\n  console.log(i)\n}\n\n// 式を2つ定義することもできます。\nfor(let i = 0, j = 10; i &lt; 10, j &gt; 0; i++,j--) {\n  console.log(i, j)\n}\n\n//出力結果 : 0 1 2 3 4 5 6 7 8 9</code></pre><p><a href=\"https://codepen.io/kame/pen/vogBze\">[デモ]for文</a></p>\n","updated":1564328167,"tags":["Javascript講座"]},{"uuid":"fvY0kqV9cEQqbCirAwhEw","title":"[JS講座] 3. 型","created":1534914739,"userId":"develo0@gmail.com","body":"<h2 id=\"型の種類\">型の種類</h2>\n<h3 id=\"文字列（string）\">文字列（String）</h3>\n<pre><code>const str = &#39;こんばんは&#39;;\nconst str2 = &quot;test&quot;;\nconst numStr = &#39;0&#39;;</code></pre><h4 id=\"補足\">補足</h4>\n<p>シングルクオートで囲まれてる文字列内でシングルクオートを使いたい場合: <code>&#39;\\&#39;&#39;</code><br>同様にダブルクオートで囲まれてる文字列内でダブルクオートを使いたい場合 : <code>&quot;\\&quot;&quot;</code> </p>\n<p>シングルクオート<code>&#39;</code>、ダブルクオート<code>&quot;</code>どちらも使えますがシングルクオート推奨です。\nHTMLでダブルクオートを使うため、区分けをつけるためです。</p>\n<p><a href=\"https://codepen.io/kame/pen/XvNoZx\">[デモ]型について</a></p>\n<h3 id=\"数値（number）\">数値（Number）</h3>\n<pre><code>const num = 0;\nconst num2 = 1;</code></pre><h3 id=\"論理値（boolean）\">論理値（Boolean）</h3>\n<pre><code>const bool = true;\nconst bool2 = false;</code></pre><h3 id=\"配列（array）\">配列（Array）</h3>\n<pre><code>const ary = [1, 2, 3];</code></pre><h3 id=\"連想配列（object）\">連想配列（Object）</h3>\n<pre><code>const obj = {one: 1, two: 2};</code></pre><h2 id=\"型の変換\">型の変換</h2>\n<table>\n<thead>\n<tr>\n<th>説明</th>\n<th>コード</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>文字列への変換</td>\n<td><code>(&#39;こんにちは&#39;).toString();</code></td>\n</tr>\n<tr>\n<td>数字に変換</td>\n<td><code>parseInt(&#39;10&#39;);</code></td>\n</tr>\n<tr>\n<td>論理型に変換</td>\n<td><code>Boolean(true);</code></td>\n</tr>\n</tbody></table>\n<h4 id=\"例\">例</h4>\n<pre><code>(10).toString() + 10; //1010\nparseInt(&#39;10&#39;) + 10; //20</code></pre><p><a href=\"https://codepen.io/kame/pen/xvRmje\">[デモ]型の変換</a></p>\n","updated":1564290820,"tags":["Javascript講座"]},{"updated":1564288555,"tags":["Javascript講座"],"uuid":"tzU6vsD7S2Dg21owgsnv7","title":"[JS講座] 1. 変数・計算","created":1534905993,"userId":"develo0@gmail.com","body":"<h2 id=\"変数の定義\">変数の定義</h2>\n<pre><code>var 変数名 = 初期値;\nconst 変数名 = 初期値; // 再代入できない\nlet 変数名 = 初期値; // 再代入可能</code></pre><p>基本的にはconstを使いましょう。\nどうしても再代入の必要がある場合はletを使いましょう。</p>\n<p><a href=\"https://codepen.io/kame/pen/wVoRzW\">[デモ]変数の定義</a></p>\n<h2 id=\"演算子\">演算子</h2>\n<table>\n<thead>\n<tr>\n<th>式</th>\n<th>説明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>+</code></td>\n<td>足し算</td>\n</tr>\n<tr>\n<td><code>-</code></td>\n<td>引き算</td>\n</tr>\n<tr>\n<td><code>*</code></td>\n<td>掛け算</td>\n</tr>\n<tr>\n<td><code>/</code></td>\n<td>割り算</td>\n</tr>\n<tr>\n<td><code>%</code></td>\n<td>余り</td>\n</tr>\n</tbody></table>\n<h2 id=\"代入演算子\">代入演算子</h2>\n<table>\n<thead>\n<tr>\n<th>式</th>\n<th>説明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>a = b;</code></td>\n<td>a に b を代入</td>\n</tr>\n<tr>\n<td><code>a += b;</code></td>\n<td><code>a = a + b</code></td>\n</tr>\n<tr>\n<td><code>a -= b;</code></td>\n<td><code>a = a - b</code></td>\n</tr>\n<tr>\n<td><code>a *= b;</code></td>\n<td><code>a = a * b</code></td>\n</tr>\n</tbody></table>\n<h3 id=\"i-に1を足す・引く\">i に1を足す・引く</h3>\n<table>\n<thead>\n<tr>\n<th>式</th>\n<th>説明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>a++</code></td>\n<td><code>a = a + 1</code></td>\n</tr>\n<tr>\n<td><code>++a</code></td>\n<td><code>a = a + 1</code></td>\n</tr>\n<tr>\n<td><code>a--</code></td>\n<td><code>a = a - 1</code></td>\n</tr>\n<tr>\n<td><code>--a</code></td>\n<td><code>a = a - 1</code></td>\n</tr>\n</tbody></table>\n<h2 id=\"演算子の優先順位\">演算子の優先順位</h2>\n<p>数学の考え方と一緒。</p>\n<ol>\n<li><code>()</code></li>\n<li><code>* / %</code></li>\n<li><code>+ -</code></li>\n</ol>\n<p><a href=\"https://codepen.io/kame/pen/aeBPpR\">[デモ]演算子</a></p>\n"},{"updated":1564284240,"tags":["Javascript講座"],"uuid":"k8k1STBpbnDvA38NynAG8","title":"[JS講座] 0. 出力・コメント","created":1534918839,"userId":"develo0@gmail.com","body":"<h2 id=\"値の出力\">値の出力</h2>\n<pre><code>console.log(10);</code></pre><h2 id=\"jsのコメントの書き方\">jsのコメントの書き方</h2>\n<pre><code>// 一行コメント\n/*\n複数行コメント\n複数行コメント\n*/</code></pre><p><a href=\"https://codepen.io/kame/pen/bXBQOd\">[デモ]出力・コメント</a></p>\n"},{"userId":"develo0@gmail.com","body":"<h2 id=\"タグの取得\">タグの取得</h2>\n<pre><code>document.querySelectorAll(&#39;p&#39;)</code></pre><p>例 CSSのような指定でタグを取得することができます</p>\n<pre><code>const header = document.querySelectorAll(&#39;#header&#39;)\nconst item = document.querySelectorAll(&#39;section.item&#39;)</code></pre><p>ページに存在するそのタグが全て入った配列として返ってきます。</p>\n<h2 id=\"タグにイベントを設定する\">タグにイベントを設定する</h2>\n<pre><code>el.addEventListener(&#39;click&#39;, function);</code></pre><h3 id=\"例\">例</h3>\n<pre><code>const el = document.querySelectorAll(&#39;h1&#39;)\nel[0].addEventListener(&#39;click&#39;, clickEvent);\n\nfunction clickEvent() {\n  // クリック時の処理\n}</code></pre><p><code>click</code>部分に入るコードはいくつかあります<br>使用用途が多いものを下記に書きました</p>\n<p><a href=\"https://codepen.io/kame/pen/aeBQbp\">[デモ] タグの取得とイベントの設定</a></p>\n<h3 id=\"マウス\">マウス</h3>\n<table>\n<thead>\n<tr>\n<th>イベント</th>\n<th>タイミング</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>click</td>\n<td>クリックしたとき</td>\n</tr>\n<tr>\n<td>scroll</td>\n<td>ウィンドウをスクロールをしたとき</td>\n</tr>\n<tr>\n<td>resize</td>\n<td>ウィンドウをリサイズしたとき</td>\n</tr>\n</tbody></table>\n<h3 id=\"キー\">キー</h3>\n<table>\n<thead>\n<tr>\n<th>イベント</th>\n<th>タイミング</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>keydown</td>\n<td>キーを押したとき</td>\n</tr>\n<tr>\n<td>keypress</td>\n<td>キーが押されているとき</td>\n</tr>\n<tr>\n<td>keyup</td>\n<td>キーを離したとき</td>\n</tr>\n</tbody></table>\n<h3 id=\"フォーム\">フォーム</h3>\n<table>\n<thead>\n<tr>\n<th>イベント</th>\n<th>タイミング</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>blur</td>\n<td>フォーカスが外れたとき</td>\n</tr>\n<tr>\n<td>focus</td>\n<td>フォーカスされたとき</td>\n</tr>\n</tbody></table>\n<h3 id=\"フォーカス\">フォーカス</h3>\n<table>\n<thead>\n<tr>\n<th>イベント</th>\n<th>タイミング</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>change</td>\n<td>inputの値を変更したとき</td>\n</tr>\n</tbody></table>\n<h3 id=\"ウィンドウ\">ウィンドウ</h3>\n<table>\n<thead>\n<tr>\n<th>イベント</th>\n<th>タイミング</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>scroll</td>\n<td>ウィンドウをスクロールをしたとき</td>\n</tr>\n<tr>\n<td>resize</td>\n<td>ウィンドウをリサイズしたとき</td>\n</tr>\n</tbody></table>\n","updated":1564283483,"tags":["Javascript講座"],"uuid":"YXRgUhh5ZI3E0YG6wlnzP","title":"[JS講座] 13. タグの取得とイベントハンドラ","created":1536569123},{"userId":"develo0@gmail.com","body":"<h2 id=\"0以上1未満の乱数を返す\">0以上1未満の乱数を返す</h2>\n<pre><code>Math.random();</code></pre><h3 id=\"例\">例</h3>\n<pre><code>console.log(Math.random());\n\n/*\n表示結果\n0.40883730142377317のような乱数\n*/</code></pre><h2 id=\"引数の中から一番大きな値を返す\">引数の中から一番大きな値を返す</h2>\n<pre><code>Math.max();</code></pre><h3 id=\"例-1\">例</h3>\n<pre><code>console.log(Math.max(1, 2, 3, 6, 4, 5));\n\n/*\n表示結果\n6\n*/</code></pre><h2 id=\"引数の中から一番小さな値を返す\">引数の中から一番小さな値を返す</h2>\n<pre><code>Math.min();</code></pre><h3 id=\"例-2\">例</h3>\n<pre><code>console.log(Math.min(1, 2, 3, 6, 4, 5));\n\n/*\n表示結果\n1\n*/</code></pre><h2 id=\"小数点以下を切り捨てた整数を返す\">小数点以下を切り捨てた整数を返す</h2>\n<pre><code>Math.floor(1.1);</code></pre><h3 id=\"例-3\">例</h3>\n<pre><code>console.log(Math.floor(Math.random() * 3));\n\n/*\n表示結果\n整数 0 〜 2\n*/</code></pre><h2 id=\"小数点以下を繰り上げした整数を返す\">小数点以下を繰り上げした整数を返す</h2>\n<pre><code>Math.ceil(0.1);</code></pre><h3 id=\"例-4\">例</h3>\n<pre><code>console.log(Math.ceil(Math.random() * 3));\n\n/*\n表示結果\n整数 1 〜 3\n*/</code></pre><h2 id=\"小数点以下を四捨五入した整数を返す\">小数点以下を四捨五入した整数を返す</h2>\n<pre><code>Math.round(0.1);</code></pre><h3 id=\"例-5\">例</h3>\n<pre><code>console.log(Math.round(Math.random() * 3));\n\n/*\n表示結果\n整数 0 〜 3\n*/</code></pre>","updated":1564283473,"tags":["Javascript講座"],"uuid":"GK6BWu10h3E3mT75KOJp5","title":"[JS講座] 12. 数学関数（Math）で演算","created":1534993686},{"userId":"develo0@gmail.com","body":"<p>関数とは、プログラムを別な場所からいつでも呼び出して利用できるように、処理をひとまとめにしたものです。</p>\n<pre><code>function test(引数1,引数2, ...){\n  console.log(&#39;処理&#39;);\n}</code></pre><h2 id=\"引数\">引数</h2>\n<p>関数の外から関数が実行される際に値を渡すことで、<br>関数内で使える変数となります。</p>\n<ul>\n<li>引数は複数指定可能</li>\n<li>引数は入れなくてもよい</li>\n</ul>\n<h3 id=\"例\">例</h3>\n<pre><code>function formula(a, b){\n  console.log(a + b);\n}\n\nformula(10, 100);\nformula(1000, 150);\n\n/*\n表示結果\n110\n1150\n*/</code></pre><h3 id=\"戻り値-（return）\">戻り値 （return）</h3>\n<p>returnを使うことで呼び出し元に値を返すことができます。</p>\n<pre><code>function formula(a, b){\n  return a + b;\n}\n\nconsole.log(formula(10, 100));\nconsole.log(formula(1000, 150));\n\n/*\n表示結果\n110\n1150\n*/</code></pre><h3 id=\"応用例\">応用例</h3>\n<h4 id=\"指定の数が入った配列をreturnをつかって返す関数\">指定の数が入った配列をreturnをつかって返す関数</h4>\n<pre><code>function numArray(num){\n  //この変数は「numArray関数」内でしか使えない変数です（ローカル変数）\n  const array = [];\n\n  for(var i = 0; i &lt; num; i++) {\n    array[i] = i;\n  }\n\n  return array;\n}\n\nconsole.log(numArray(100));\n\n//arrayが「numArray関数」外で定義（グローバル変数）されてないのでここでエラーになります。\nconsole.log(array);\n\n/*\n表示結果\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ...]\n*/</code></pre>","updated":1564283415,"tags":["Javascript講座"],"uuid":"eYAaw8GvNx1Gcwp5xjyYh","title":"[JS講座] 11. 関数（function）について","created":1534993570},{"userId":"develo0@gmail.com","body":"<h2 id=\"forin文\">for..in文</h2>\n<pre><code>for(const color in {red: &#39;赤&#39;, blue: &#39;青&#39; }) {\n  console.log(color);\n};</code></pre><h3 id=\"例\">例</h3>\n<pre><code>const fruitsObj = {\n  red : [&#39;りんご&#39;,&#39;さくらんぼ&#39;,&#39;いちご&#39;],\n  orange : [&#39;かき&#39;,&#39;みかん&#39;,&#39;びわ&#39;],\n  yellow : [&#39;バナナ&#39;,&#39;パイナップル&#39;,&#39;レモン&#39;]\n};\n\n\nfor(var fruit in fruitsObj ) {\n  console.log(fruit);\n  console.log(fruitsObj[fruit])\n}\n\n/*\n表示結果\nred\n[&quot;りんご&quot;, &quot;さくらんぼ&quot;, &quot;いちご&quot;]\norange\n[&quot;かき&quot;, &quot;みかん&quot;, &quot;びわ&quot;]\nyellow\n[&quot;バナナ&quot;, &quot;パイナップル&quot;, &quot;レモン&quot;]\n*/</code></pre>","updated":1564283380,"tags":["Javascript講座"],"uuid":"kkJU3gO9jd4soJPX6Mura","title":"[JS講座] 10. 連想配列の繰り返し（for..in文）","created":1534989941},{"uuid":"OK1ZSXJe56UlNPHoXLj9M","title":"[JS講座] 9. 配列（Array）の操作","created":1534934703,"userId":"develo0@gmail.com","body":"<h2 id=\"配列の長さ\">配列の長さ</h2>\n<pre><code>([1, 2, 3]).length // 3</code></pre><h3 id=\"例\">例</h3>\n<pre><code>const fruits  = [&#39;りんご&#39;,&#39;バナナ&#39;,&#39;パイナップル&#39;,&#39;ぶどう&#39;,&#39;すいか&#39;,&#39;めろん&#39;];\nconsole.log(&#39;果物が&#39; + fruits.length + &#39;個&#39;);\n\n// 出力結果 : 果物が6個</code></pre><h2 id=\"配列の連結\">配列の連結</h2>\n<pre><code>([1, 2]).concat([3, 4], [5, 6]);\n\n// [1, 2, 3, 4, 5, 6]</code></pre><h3 id=\"例-1\">例</h3>\n<pre><code>const fruits = [&#39;りんご&#39;];\nconst fruits2 = [&#39;バナナ&#39;];\nconst fruits3 = [&#39;パイナップル&#39;];\nconst fruits4 =  [&#39;ぶどう&#39;];\n\nfruits = fruits.concat(fruits2,fruits3,fruits4);\n\nconsole.log(fruits);\n\n// 出力結果 : [&quot;りんご&quot;, &quot;バナナ&quot;, &quot;パイナップル&quot;, &quot;ぶどう&quot;]</code></pre><h2 id=\"文字列として連結\">文字列として連結</h2>\n<pre><code>([1, 2, 3]).join(&#39;/&#39;);</code></pre><h3 id=\"例-2\">例</h3>\n<pre><code>const date = [2013, 4, 26];\nconsole.log(date.join(&#39;/&#39;));\n\n// 出力結果 : 2013/4/26</code></pre><h2 id=\"配列の追加・削除・取り出し\">配列の追加・削除・取り出し</h2>\n<h3 id=\"追加\">追加</h3>\n<h4 id=\"先頭に追加\">先頭に追加</h4>\n<pre><code>const test = [1, 2]\ntest.unshift(3, 4); // [3, 4, 1, 2]</code></pre><h4 id=\"最後に追加\">最後に追加</h4>\n<pre><code>const test = [1, 2]\ntest.push(3, 4); // [1, 2, 3, 4]</code></pre><h3 id=\"削除\">削除</h3>\n<h4 id=\"先頭を削除\">先頭を削除</h4>\n<pre><code>const test = [1, 2]\ntest.shift(); // [2]</code></pre><h4 id=\"最後を削除\">最後を削除</h4>\n<pre><code>const test = [1, 2]\ntest.pop(); // [1]</code></pre><h3 id=\"削除と追加\">削除と追加</h3>\n<pre><code>[&#39;a&#39;, &#39;b&#39;].splice(from,len,&#39;追加したい値1&#39;,&#39;追加したい値2&#39;);</code></pre><p>配列のfrom番目からlen個の要素を削除し、代わりにその後に続く値を埋め込みます。</p>\n<h4 id=\"例-3\">例</h4>\n<pre><code>const fruits  = [&#39;りんご&#39;, &#39;バナナ&#39;, &#39;パイナップル&#39;, &#39;ぶどう&#39;, &#39;すいか&#39;, &#39;めろん&#39;];\nfruits.splice(1, 2, &#39;追加したい値1&#39;, &#39;追加したい値2&#39;);\n\nconsole.log(fruits);\n\n//出力結果 : [&quot;りんご&quot;, &quot;追加したい値1&quot;, &quot;追加したい値2&quot;, &quot;ぶどう&quot;, &quot;すいか&quot;, &quot;めろん&quot;]</code></pre><h3 id=\"取り出し\">取り出し</h3>\n<pre><code>[&#39;a&#39;, &#39;b&#39;].slice(from,to);</code></pre><p>配列のfrom番目からto番目までの要素を抜き出した配列を返します。  </p>\n<ul>\n<li>toを省略した場合は残り全て  </li>\n<li>負の値を指定すると後ろから数える。</li>\n</ul>\n<h4 id=\"例-4\">例</h4>\n<pre><code>const fruits  = [&#39;りんご&#39;, &#39;バナナ&#39;, &#39;パイナップル&#39;, &#39;ぶどう&#39;, &#39;すいか&#39;, &#39;めろん&#39;];\nfruits = fruits.slice(1, 4);\n\nconsole.log(fruits);\n\n// 出力結果 : [&quot;バナナ&quot;, &quot;パイナップル&quot;, &quot;ぶどう&quot;] </code></pre><h2 id=\"列の並べ替え\">列の並べ替え</h2>\n<h3 id=\"配列をルールにそった配列を返す\">配列をルールにそった配列を返す</h3>\n<pre><code>([1, 2]).sort([func]（比較関数）);</code></pre><p>配列の要素を文字列表記の辞書順に並べ替える。<br>※ 比較関数を使い任意でルールを指定することができます。</p>\n<h4 id=\"例-5\">例</h4>\n<pre><code>const numArray = [3, 7, 4, 1];\nnumArray.sort();\n\nconsole.log(numArray);\n\n// 出力結果 : [1, 3, 4, 7]</code></pre><h3 id=\"配列を逆順にする\">配列を逆順にする</h3>\n<pre><code>([1, 2]).reverse()</code></pre><h4 id=\"例-6\">例</h4>\n<pre><code>const fruits  = [&#39;りんご&#39;, &#39;バナナ&#39;, &#39;パイナップル&#39;, &#39;ぶどう&#39;, &#39;すいか&#39;, &#39;めろん&#39;];\nfruits.reverse();\n\nconsole.log(fruits);\n\n// 出力結果 : [&quot;めろん&quot;, &quot;すいか&quot;, &quot;ぶどう&quot;, &quot;パイナップル&quot;, &quot;バナナ&quot;, &quot;りんご&quot;]</code></pre>","updated":1564283268,"tags":["Javascript講座"]},{"created":1534916557,"userId":"develo0@gmail.com","body":"<h2 id=\"論理演算子\">論理演算子</h2>\n<table>\n<thead>\n<tr>\n<th>説明</th>\n<th>コード</th>\n<th><code>true</code>になる例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>aとbの値が等しいの場合 <code>true</code></td>\n<td><code>a === b</code></td>\n<td><code>10 === 10</code></td>\n</tr>\n<tr>\n<td>aとbの値が等しくない場合 <code>true</code></td>\n<td><code>a !== b</code></td>\n<td><code>5 !== 10</code></td>\n</tr>\n<tr>\n<td>a が b より大きい場合 <code>true</code></td>\n<td><code>a &gt; b</code></td>\n<td><code>5 &gt; 3</code></td>\n</tr>\n<tr>\n<td>a が b より小さい場合 <code>true</code></td>\n<td><code>a &lt; b</code></td>\n<td><code>5 &lt; 10</code></td>\n</tr>\n<tr>\n<td>a が b 以上の場合 <code>true</code></td>\n<td><code>a &gt;= b</code></td>\n<td><code>5 &gt;= 5</code></td>\n</tr>\n<tr>\n<td>a が b 以下の場合 <code>true</code></td>\n<td><code>a &lt;= b</code></td>\n<td><code>5 &lt;= 5</code></td>\n</tr>\n</tbody></table>\n<h2 id=\"論理演算子-1\">論理演算子</h2>\n<table>\n<thead>\n<tr>\n<th>説明</th>\n<th>コード</th>\n<th><code>true</code>になる例</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>aとb2つの式・値が正しい場合 <code>true</code></td>\n<td><code>a &amp;&amp; b</code></td>\n<td><code>true &amp;&amp; true</code></td>\n</tr>\n<tr>\n<td>aとbのどちらか式・値が正しい場合 <code>true</code></td>\n<td><code>a || b</code></td>\n<td><code>false || true</code></td>\n</tr>\n<tr>\n<td>値を反転する（aが正しくない場合 true、正しい場合はfalse）</td>\n<td><code>!a</code></td>\n<td><code>!(10 === 5)</code></td>\n</tr>\n</tbody></table>\n<h3 id=\"例\">例</h3>\n<pre><code>const num = 10;\n// numが3より大きいかつ、20より小さい値のためtrue\nconsole.log(num &gt; 3 &amp;&amp; num &lt; 20)\n// numが10もしくは20の場合trueなのでこの場合10 === 10がのためtrue\nconsole.log(num === 10 || num === 20)\n// numと10は等しく、それを反転しているためfalse\nconsole.log(!(num === 10)) //false</code></pre>","updated":1564281828,"tags":["Javascript講座"],"uuid":"zbV7a9fK3CHLW3lZrhons","title":"[JS講座] 2. 演算子"},{"userId":"develo0@gmail.com","body":"<p><a href=\"https://codepen.io/kame/pen/MMxMPx\">https://codepen.io/kame/pen/MMxMPx</a></p>\n","updated":1563251271,"tags":["HTML,CSS講座"],"uuid":"b6LsIjObgAN0QI1CrInnL","title":"[CSS講座] 三角形の作り方","created":1563250930},{"created":1560776717,"userId":"develo0@gmail.com","body":"<ol>\n<li>header, main, footerに分けて考える</li>\n<li>アウトラインを考えて見出し、section or articleを決めていく</li>\n</ol>\n<p><a href=\"https://codepen.io/kame/pen/YoWPMX\">https://codepen.io/kame/pen/YoWPMX</a></p>\n<pre><code>&lt;header&gt;\n    &lt;h1&gt;タイトル&lt;/h1&gt;\n    &lt;nav&gt;\n      &lt;ul&gt;\n        &lt;li&gt;&lt;a href=&quot;&quot;&gt;メニュー1&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=&quot;&quot;&gt;メニュー2&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=&quot;&quot;&gt;メニュー3&lt;/a&gt;&lt;/li&gt;\n      &lt;/ul&gt;\n    &lt;/nav&gt;\n&lt;/header&gt;\n\n&lt;main&gt;\n    &lt;article&gt;\n        &lt;h2&gt;タイトル&lt;/h2&gt;\n        &lt;p&gt;このサイトについての説明文&lt;/p&gt;\n\n        &lt;section&gt;\n            &lt;h3&gt;このサイトについて&lt;/h3&gt;\n            &lt;p&gt;HTMLや、CSSについての勉強を目的としたページ&lt;p&gt;\n            &lt;section&gt;\n              &lt;h4&gt;HTML&lt;/h4&gt;\n              &lt;p&gt;HTMLで最低限必要な部分の説明&lt;/p&gt;\n            &lt;/section&gt;\n\n            &lt;section&gt;\n              &lt;h4&gt;CSS&lt;/h4&gt;\n              &lt;p&gt;CSSでよく使う部分の説明&lt;/p&gt;\n            &lt;/section&gt;\n        &lt;/section&gt;\n\n        &lt;section&gt;\n            &lt;h3&gt;HTMLの勉強法&lt;/h3&gt;\n            &lt;p&gt;HTMLで大事なのはその言葉が表しているものを意味付けすることが大事です。&lt;/p&gt;\n            &lt;p&gt;見た目を調整するのはCSSに任せましょう。&lt;/p&gt;\n            &lt;p&gt;&lt;strong&gt;見出し&lt;/strong&gt;、&lt;strong&gt;文章&lt;/strong&gt;、&lt;strong&gt;リスト&lt;/strong&gt;などの意味付けをするマークアップを心がけましょう。&lt;/p&gt;\n            &lt;p&gt;&lt;a href=&quot;http://www.clover.blue/doc/lXvYL28hc8CBwvZiBpuEF&quot;&gt;[HTML講座] HTMLについて&lt;/a&gt;&lt;/p&gt;\n        &lt;/section&gt;\n\n        &lt;section&gt;\n            &lt;h3&gt;CSSの勉強法&lt;/h3&gt;\n            &lt;p&gt;HTMLでマークアップした要素に対してデザインをあてます。&lt;/p&gt;\n        &lt;/section&gt;\n    &lt;/article&gt;\n&lt;/main&gt;\n\n&lt;footer&gt;\n    &lt;p&gt;&lt;small&gt;&amp;copy; copyright kamem&lt;/small&gt;&lt;/p&gt;\n&lt;/footer&gt;</code></pre>","updated":1561472603,"tags":["HTML,CSS講座"],"uuid":"Id7aunyBwrfDuNYEAut9b","title":"[HTML講座] よくあるHTML構造"},{"userId":"develo0@gmail.com","body":"<h2 id=\"flexboxを使う\">flexboxを使う</h2>\n<h3 id=\"html\">HTML</h3>\n<pre><code>&lt;ul class=&quot;nav&quot;&gt;\n    &lt;li class=&quot;nav_item&quot;&gt;Menu1&lt;/li&gt;\n    &lt;li class=&quot;nav_item&quot;&gt;Menu2&lt;/li&gt;\n    &lt;li class=&quot;nav_item&quot;&gt;Menu3&lt;/li&gt;\n    &lt;li class=&quot;nav_item&quot;&gt;Menu4&lt;/li&gt;\n&lt;/ul&gt;</code></pre><h3 id=\"css\">CSS</h3>\n<pre><code>.nav {\n    padding: 10px;\n    display: flex;\n    background-color: #333333;\n    height: 100px;\n    /* 縦のセンター寄せ */\n    justify-content: center;\n    /* 横のセンター寄せ */\n    align-items: center;\n}\n.nav_item {\n    list-style-type: none;\n    background-color: #39c;\n    text-align: center;\n    border-right: 1px solid #fff;\n    color: #fff;\n    width: 100px;\n}</code></pre><p><a href=\"https://codepen.io/kame/pen/jjbrMV\">https://codepen.io/kame/pen/jjbrMV</a></p>\n","updated":1560998463,"tags":["HTML,CSS講座"],"uuid":"XgnZIcXha3lrBdcbpMTGu","title":"[CSS講座] 横並びの方法","created":1560443123},{"userId":"develo0@gmail.com","body":"<p>HTMLはhyper text markup language（ハイパーテキストマークアップランゲージ）の略です。</p>\n<p>HTMLで大事なのはその言葉が表しているものを意味付けすることが大事です。\n見た目を調整するのはCSSに任せましょう。</p>\n<ul>\n<li>見出し</li>\n<li>文章</li>\n<li>リスト</li>\n<li>文書構造</li>\n</ul>\n<p>などの意味付けをするマークアップを心がけましょう。</p>\n<h2 id=\"hタグとは\">hタグとは</h2>\n<p>h1からh6まで見出しを表すタグ</p>\n<h2 id=\"pとは\">pとは</h2>\n<p>文章、段落を表すタグ</p>\n<pre><code>&lt;p&gt;文章文章文章文章文章&lt;/p&gt;</code></pre><h2 id=\"ulolliとは\">ul,ol,liとは</h2>\n<p>リストを表すタグ</p>\n<h3 id=\"ul\">ul</h3>\n<p>順番が関係ないリスト</p>\n<ul>\n<li>リスト1</li>\n<li>リスト2</li>\n<li>リスト3</li>\n</ul>\n<pre><code>&lt;ul&gt;\n  &lt;li&gt;リスト1&lt;/li&gt;\n  &lt;li&gt;リスト2&lt;/li&gt;\n  &lt;li&gt;リスト3&lt;/li&gt;\n&lt;/ul&gt;</code></pre><h3 id=\"ol\">ol</h3>\n<p>順番つきのリスト</p>\n<ol>\n<li>リスト1</li>\n<li>リスト2</li>\n<li>リスト3</li>\n</ol>\n<pre><code>&lt;ol&gt;\n  &lt;li&gt;リスト1&lt;/li&gt;\n  &lt;li&gt;リスト3&lt;/li&gt;\n&lt;/ol&gt;</code></pre><h2 id=\"dlとは\">dlとは</h2>\n<p>定義付きリスト</p>\n<pre><code>&lt;dl&gt;\n  &lt;dt&gt;タイトル1&lt;/dt&gt;\n  &lt;dd&gt;タイトル1に対しての定義・説明&lt;/dd&gt;\n  &lt;dt&gt;タイトル2&lt;/dt&gt;\n  &lt;dd&gt;タイトル2に対しての定義・説明&lt;/dd&gt;\n  &lt;dd&gt;タイトル2に対しての定義・説明 複数かける&lt;/dd&gt;\n  &lt;dd&gt;タイトル2に対しての定義・説明 複数かける&lt;/dd&gt;\n&lt;/dl&gt;</code></pre><h2 id=\"figurefigucaptionとは\">figure,figucaptionとは</h2>\n<p>写真や図などをいれるタグ</p>\n<pre><code>&lt;figure&gt;\n  &lt;img src=&quot;http://www.htmq.com/images/kaeru.gif&quot; width=&quot;100&quot; height=&quot;100&quot;&gt;\n  &lt;figucaption&gt;画像の説明&lt;/figucaption&gt;\n&lt;/figure&gt;</code></pre><h2 id=\"em-strongとは\">em, strongとは</h2>\n<p>emが強調を表す\nstrongが強い重要性を表す</p>\n<pre><code>&lt;p&gt;emは&lt;em&gt;強調&lt;/em&gt;を表す&lt;/p&gt;\n&lt;p&gt;emは&lt;strong&gt;重要性&lt;/strong&gt;を表す&lt;/p&gt;</code></pre><h2 id=\"smallとは\">smallとは</h2>\n<p>責・警告・法的規制・著作権・ライセンス要件などの注釈や細目を表す際に使う</p>\n<pre><code>&lt;p&gt;&lt;small&gt;&amp;copy; copyright&lt;/small&gt;&lt;/p&gt;</code></pre><h2 id=\"\"></h2>\n<h2 id=\"divspanとは\">div,spanとは</h2>\n<p>特に意味をもたないタグ</p>\n<h3 id=\"div\">div</h3>\n<p>タグをグループ化したいときなどに使う</p>\n<pre><code>&lt;div&gt;\n  &lt;p&gt;文章&lt;/p&gt;\n  &lt;ul&gt;\n    &lt;li&gt;リスト1&lt;/li&gt;\n    &lt;li&gt;リスト2&lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/div&gt;</code></pre><h3 id=\"span\">span</h3>\n<p>divとは違い改行されない。\nem、strongなどとは違い特に意味がないがデザイン的に囲う必要がある場合などに使う</p>\n<pre><code>&lt;p&gt;&lt;span&gt;特に意味&lt;/span&gt;がないけど囲いたい&lt;/p&gt;</code></pre><h2 id=\"headermainfooterについて\">header,main,footerについて</h2>\n<h3 id=\"headerとは\">headerとは</h3>\n<p>ページのタイトルや、グローバルナビゲーションなど、ページのheaderとなる部分を囲う</p>\n<pre><code>&lt;header&gt;\n  &lt;h1&gt;タイトル&lt;/h1&gt;\n&lt;/header&gt;</code></pre><h3 id=\"mainとは\">mainとは</h3>\n<p>ページのmainとなる部分を囲う</p>\n<pre><code>&lt;main&gt;\n  &lt;h2&gt;メインタイトル&lt;/h2&gt;\n  &lt;p&gt;メインのコンテンツの内容&lt;/p&gt;\n&lt;/main&gt;</code></pre><h3 id=\"footerとは\">footerとは</h3>\n<p>コピーライトなどページのfooterとなる部分を囲う</p>\n<pre><code>&lt;footer&gt;\n  &lt;p&gt;&lt;small&gt;&amp;copy; copyright kame&lt;/small&gt;&lt;/p&gt;\n&lt;/footer&gt;</code></pre><h2 id=\"sectionarticleについて\">section,articleについて</h2>\n<h3 id=\"sectionとは\">sectionとは</h3>\n<p>見出しタグが表している範囲を囲う</p>\n<pre><code>&lt;section&gt;\n  &lt;h2&gt;section,articleについて&lt;/h2&gt;\n\n  &lt;section&gt;\n    &lt;h3&gt;sectionとは&lt;/h3&gt;\n    &lt;p&gt;見出しタグが表している範囲を囲う&lt;/p&gt;\n  &lt;/section&gt;\n&lt;/section&gt;</code></pre><h3 id=\"articleについて\">articleについて</h3>\n<p>記事部分を囲う</p>\n<pre><code>&lt;main&gt;\n  &lt;article&gt;\n    &lt;h1&gt;HTMLとは&lt;/h1&gt;\n\n    &lt;section&gt;\n      &lt;h2&gt;section,articleについて&lt;/h2&gt;\n\n      &lt;section&gt;\n        &lt;h3&gt;sectionとは&lt;/h3&gt;\n        &lt;p&gt;見出しタグが表している範囲を囲う&lt;/p&gt;\n      &lt;/section&gt;\n    &lt;/section&gt;\n  &lt;/article&gt;\n&lt;/main&gt;</code></pre>","updated":1560777866,"tags":["HTML,CSS講座"],"uuid":"lXvYL28hc8CBwvZiBpuEF","title":"[HTML講座] HTMLについて","created":1560391345},{"userId":"develo0@gmail.com","body":"<p>ボックスの配置の仕方の指定</p>\n<h2 id=\"static\">static</h2>\n<p>何も指定されていない状態</p>\n<pre><code>position: static;</code></pre><h2 id=\"relative\">relative</h2>\n<p>相対位置</p>\n<pre><code>position: relative;</code></pre><h2 id=\"absolute\">absolute</h2>\n<p>絶対位置</p>\n<ul>\n<li>親を見ていきstatic以外だった要素からの起点になる</li>\n<li>すべてstaticだった場合はbodyからの起点になる</li>\n</ul>\n<pre><code>position: absolute;</code></pre><h2 id=\"fixed\">fixed</h2>\n<p>固定</p>\n<pre><code>position: fixed;</code></pre><p><a href=\"https://codepen.io/kame/pen/ewpjoK\">https://codepen.io/kame/pen/ewpjoK</a></p>\n","updated":1560518402,"tags":["HTML,CSS講座"],"uuid":"KaNjEMQYVsO7NfZYWcN1j","title":"[CSS講座] positionについて","created":1560494668},{"updated":1538722838,"tags":["Javascript問題"],"uuid":"I6Px9EHfvkC3FKmuZZgh6","title":"[JS問題] 関数を作る問題","created":1535004342,"userId":"develo0@gmail.com","body":"<h2 id=\"q1-引数に数字を入れ実行すると、0から引数で渡した数字までの「奇数・偶数で分けた連想配列」を戻り値（return）で返す関数を作る\">Q1. 引数に数字を入れ実行すると、0から引数で渡した数字までの「奇数・偶数で分けた連想配列」を戻り値（return）で返す関数を作る</h2>\n<pre><code>console.log(numObj(100));\n\n/*\n[結果]\n{\n  odd: [1, 3, 5, 7, ...99],\n  even: [0, 2, 6, 8, ...100]\n};\n*/</code></pre><p>上記が成り立つようなnumObj関数を作りましょう。</p>\n<h2 id=\"q2-第1引数に配列、第2引数に文字列を渡すと、-第1引数の配列の最後に第2引数で渡した文字列を追加すした配列を戻り値（return）で返す関数を作る\">Q2 第1引数に配列、第2引数に文字列を渡すと、 第1引数の配列の最後に第2引数で渡した文字列を追加すした配列を戻り値（return）で返す関数を作る</h2>\n<pre><code>var fruits = [&#39;りんご&#39;, &#39;めろん&#39;, &#39;ぶどう&#39;];\n\nconsole.log(addFruit(fruits, &#39;すいか&#39;));\n\n/*\n[結果]\n[&#39;りんご&#39;, &#39;めろん&#39;, &#39;ぶどう&#39;, &#39;すいか&#39;]\n*/</code></pre><p>上記が成り立つようなaddFruit関数を作りましょう。</p>\n<h2 id=\"q3-引数に数字を入れると、1からその引数までの乱数を戻り値（return）で返す関数を作る\">Q3 引数に数字を入れると、1からその引数までの乱数を戻り値（return）で返す関数を作る</h2>\n<pre><code>console.log(randomNum(10));\n\n/*\n[結果]\n10までの乱数\n*/</code></pre><p>上記が成り立つようなrandomNum関数を作りましょう。</p>\n<h2 id=\"q4-引数にmin-maxのような-2つ数字を入れ、minからmaxまでの整数の乱数を戻り値（return）で返す関数を作る\">Q4. 引数に(min, max)のような 2つ数字を入れ、minからmaxまでの整数の乱数を戻り値（return）で返す関数を作る</h2>\n<pre><code>console.log(randomRangeNum(3, 10));\n\n/*\n[結果]\n3 〜 10までの乱数\n*/</code></pre><p>上記が成り立つようなrandomRangeNum関数を作りましょう。</p>\n<h2 id=\"q5-引数に文字列を入れ、5文字以上の場合は、４文字までとし、以降をとする関数をつくる\">Q5. 引数に文字列を入れ、5文字以上の場合は、４文字までとし、以降を…とする関数をつくる</h2>\n<pre><code>/*\n[結果]\n4文字の場合そのまま、&quot;aaaa&quot; &gt; &quot;aaaa&quot;\n5文字の場合、&quot;12345&quot; &gt; &quot;1234...&quot;\n6文字の場合、&quot;123456&quot; &gt; &quot;1234...&quot;\n*/</code></pre><h2 id=\"q6-引数に数字を渡すと、金額表記の文字列に変換して戻り値（return）で返す関数を作る\">Q6. 引数に数字を渡すと、金額表記の文字列に変換して戻り値（return）で返す関数を作る</h2>\n<pre><code>console.log(getMoneyFormat(1000000))\n\n// [結果] 1,000,000</code></pre><p>上記が成り立つようなgetMoneyFormat関数を作りましょう。</p>\n"},{"updated":1537699212,"tags":["日記"],"uuid":"VAUy7XolOf8Jqgl19HpMj","title":"アブブLineスタンプ作り中","created":1537117377,"userId":"develo0@gmail.com","body":"<p><img src=\"https://d2mxuefqeaa7sj.cloudfront.net/s_8472BF34D6851EDAF2E828E8F30827AD707C1AD9598B33A3EFB84321E39DDF8C_1537117446870_abubu.gif\" alt=\"\"></p>\n<p>昔身内の間で小学校の時に流行っていたキャラクターのスタンプを作りました！</p>\n<p>[アブブ - LINE スタンプ | LINE STORE](<a href=\"https://store.line.me/stickershop/product/4738031\">https://store.line.me/stickershop/product/4738031</a>)</p>\n"},{"userId":"develo0@gmail.com","body":"<h2 id=\"基礎を理解したあとに勉強したいこと\">基礎を理解したあとに勉強したいこと</h2>\n<h3 id=\"ecmascript6を学ぶ\">ECMAScript6を学ぶ</h3>\n<ul>\n<li>[ES6(ES2015)チートシート](<a href=\"https://qiita.com/morrr/items/883cb902ccda37e840bc\">https://qiita.com/morrr/items/883cb902ccda37e840bc</a>)</li>\n</ul>\n<h3 id=\"タスクランナーを学ぶ\">タスクランナーを学ぶ</h3>\n<ul>\n<li>[webpack 4 入門](<a href=\"https://qiita.com/soarflat/items/28bf799f7e0335b68186\">https://qiita.com/soarflat/items/28bf799f7e0335b68186</a>)</li>\n</ul>\n<h3 id=\"jqueryの概要を掴む\">jQueryの概要を掴む</h3>\n<ul>\n<li>[jQueryとは？jQueryの基本的な使い方まとめ【初心者向け】](<a href=\"https://handywebdesign.net/2017/09/jquery-for-beginner/\">https://handywebdesign.net/2017/09/jquery-for-beginner/</a>)</li>\n</ul>\n<h3 id=\"lodashを使ってみる\">lodashを使ってみる</h3>\n<ul>\n<li><a href=\"http://matsukaz.hatenablog.com/entry/2014/04/09/082410\"><a href=\"http://matsukaz.hatenablog.com/entry/2014/04/09/082410\">lodashでよく使う関数まとめ</a></a></li>\n</ul>\n<h3 id=\"フレームワークを使う\">フレームワークを使う</h3>\n<ul>\n<li>[出来る限り短く説明するReact.js入門](<a href=\"https://qiita.com/rgbkids/items/8ec309d1bf5e203d2b19\">https://qiita.com/rgbkids/items/8ec309d1bf5e203d2b19</a>)</li>\n</ul>\n<h3 id=\"オブジェクト指向を学ぶ\">オブジェクト指向を学ぶ</h3>\n<ul>\n<li>[Javascriptのオブジェクト指向についての基本まとめ](<a href=\"https://qiita.com/katsunory/items/3b07b924280f18b11040\">https://qiita.com/katsunory/items/3b07b924280f18b11040</a>)</li>\n<li>[【全てのJSのオブジェクト指向嫌いマンに告ぐ】ES6のclass構文が素敵すぎて鼻水が止まらない](<a href=\"https://qiita.com/yas-nyan/items/3783ad8839072022ad97\">https://qiita.com/yas-nyan/items/3783ad8839072022ad97</a>)</li>\n</ul>\n<h3 id=\"関数について\">関数について</h3>\n<ul>\n<li>[【JavaScript】即時関数, 無名関数, クロージャについて](<a href=\"https://qiita.com/To_BB/items/bf4d6384f7dce47bb216\">https://qiita.com/To_BB/items/bf4d6384f7dce47bb216</a>)</li>\n</ul>\n","updated":1536738880,"tags":["Javascript講座"],"uuid":"IDWlqBOJ1PRYWKA3ybVCc","title":"[JS講座] 基礎を覚えたそのあとの話","created":1535020073},{"created":1535003485,"userId":"develo0@gmail.com","body":"<h2 id=\"q1-配列に0〜50、50〜0の配列を入れてそれぞれ表示。\">Q1. 配列に0〜50、50〜0の配列を入れてそれぞれ表示。</h2>\n<p>for文を使ってください</p>\n<pre><code>// \\[結果\\] [1, 2, 3, ...]\n// \\[結果\\] [50, 49, 48, ...]</code></pre><h2 id=\"q2-下記の果物が入った配列を、一つづつ表示。\">Q2. 下記の果物が入った配列を、一つづつ表示。</h2>\n<pre><code>var fruits  = [&#39;りんご&#39;, &#39;バナナ&#39;, &#39;パイナップル&#39;, &#39;ぶどう&#39;, &#39;すいか&#39;, &#39;めろん&#39;];\n\n/*\n[結果]\nりんご\nバナナ\nパイナップル\nぶどう\nすいか\nめろん\n*/</code></pre><h2 id=\"q3-下記の連想配列を、下記の結果になるように表示。\">Q3. 下記の連想配列を、下記の結果になるように表示。</h2>\n<pre><code>var fruits = {\n  red : [&#39;りんご&#39;, &#39;さくらんぼ&#39;, &#39;いちご&#39;],\n  orange : [&#39;かき&#39;, &#39;みかん&#39;, &#39;びわ&#39;],\n  yellow : [&#39;バナナ&#39;, &#39;パイナップル&#39;, &#39;レモン&#39;]\n};\n\n/*\n[結果]\nred(りんご・さくらんぼ・いちご)\norange(かき・みかん・びわ)\nyellow(バナナ・パイナップル・レモン)\n*/</code></pre><h2 id=\"q4-文字列2013426を年月日のような配列に分割し、配列の最後に曜日時間を追加（年月日曜日時間）\">Q4. 文字列’2013/4/26&#39;を[年,月,日]のような配列に分割し、配列の最後に[曜日,時間]を追加（[年,月,日,曜日,時間]）</h2>\n<pre><code>var date = &#39;2013/4/26&#39;;\n\n// \\[結果\\] [2014, 4, 26, &#39;金&#39;, &#39;10:10&#39;]</code></pre><h2 id=\"q5-0〜100の奇数・偶数をそれぞれ連想配列に分けて表示\">Q5 0〜100の奇数・偶数をそれぞれ連想配列に分けて表示</h2>\n<p>for文を使ってnumオブジェクトに奇数、偶数をいれてください</p>\n<pre><code>var num = {};\n\n/*\n[結果]\n{\n  odd: [1, 3, 5, 7, ...],\n  even: [0, 2, 6, 8, ...]\n}\n*/</code></pre>","updated":1536285810,"tags":["Javascript問題"],"uuid":"t6CJar2C8SOKx6yDWXpkL","title":"[JS問題] 配列、連想配列を使った問題"},{"userId":"develo0@gmail.com","body":"<h2 id=\"q1-自分の名前の文字数を下記のような形式で表示\">Q1. 自分の名前の文字数を下記のような形式で表示</h2>\n<pre><code>var name = &#39;自分の名前&#39;;\n\n// [結果] 自分の名前はx文字です。</code></pre><h2 id=\"q2-自分の名前の1文字ごとに全角スペースをあけた文字を表示\">Q2. 自分の名前の1文字ごとに全角スペースをあけた文字を表示</h2>\n<p>for文を使ってそれぞれの文字の間に全角スペースをあけてください。</p>\n<pre><code>var name = &#39;自分の名前&#39;;\n\n// [結果] 自　分　の　名　前</code></pre><h2 id=\"q3-文字列100pxからpxを覗いた値を表示\">Q3. 文字列’100px’から’px’を覗いた値を表示</h2>\n<h2 id=\"q4-文字列100px-と-文字列-50pxを変数に入れてそれぞれを足した合計の値を表示\">Q4. 文字列’100px’ と 文字列 &#39;50px&#39;を変数に入れてそれぞれを足した合計の値を表示</h2>\n<pre><code>var num1 = &#39;100px&#39;;\nvar num2 = &#39;50px&#39;;\n\n//変数num1とnum2を数値に変換してたしてください\n\n// [結果] 150</code></pre><h2 id=\"q5-数値が入った変数を、金額表記の文字列に変換してください\">Q5. 数値が入った変数を、金額表記の文字列に変換してください</h2>\n<pre><code>var num1 = 1000000;\n\n// 後ろから3桁区切りにしてください\n\n// [結果] 1,000,000</code></pre>","updated":1535005398,"tags":["Javascript問題"],"uuid":"H1lBoBxdjJW7uhAagLGer","title":"[JS問題] 文字列を使った問題","created":1535002613},{"created":1534999646,"userId":"develo0@gmail.com","body":"<h2 id=\"q1-1から100までの偶数だけ表示する\">Q1. 1から100までの偶数だけ表示する</h2>\n<p>for文を使ってください</p>\n<h2 id=\"q2-100までの数字のうち、10〜30-70〜90の場合のみ表示する\">Q2. 100までの数字のうち、10〜30, 70〜90の場合のみ表示する</h2>\n<p>for文とif文を使ってください</p>\n<h2 id=\"q3-1から100までの3の倍数だけ表示する\">Q3. 1から100までの3の倍数だけ表示する</h2>\n<p>for文を使ってください</p>\n<h2 id=\"q4-1900年から2100年までの閏年の年をすべて表示する\">Q4. 1900年から2100年までの閏年の年をすべて表示する</h2>\n<p>for文を使ってください </p>\n<h3 id=\"閏年とは\">閏年とは</h3>\n<p>4で割れる100で割れない。または、400で割れる</p>\n","updated":1535002540,"tags":["Javascript問題"],"uuid":"WouTPbeF8wtazDx0WYq30","title":"[JS問題] if文とfor文を使った問題"},{"body":"<p><img src=\"https://scontent-nrt1-1.cdninstagram.com/vp/5aeb3f7c1cc57dc309e29e3dbbb8bff6/5C1341BC/t51.2885-15/e15/37642934_266269404156929_5551537201956782080_n.jpg\" alt=\"\"></p>\n<p>最近ブログを書いていなかったのでここからまた色々とはじめたいなと思います。\nブログも作り直したので心機一転です。</p>\n<h2 id=\"ブログのこだわりポイント\">ブログのこだわりポイント</h2>\n<h3 id=\"ポイント1\">ポイント1</h3>\n<p>CMSを使わずにシンプルに。\nQiitaとDropbox PaperのApiを使って記事を取得する。</p>\n<h3 id=\"ポイント2\">ポイント2</h3>\n<p>記事をlocalstorageにいれておくので遷移がはやい。</p>\n<p>前回アクセスしたときから更新がなかった記事は、前回取得しておいたのを使うようにしました。</p>\n<h2 id=\"技術的な話\">技術的な話</h2>\n<h3 id=\"主な構成\">主な構成</h3>\n<p><a href=\"https://github.com/kamem/clover.blue\">https://github.com/kamem/clover.blue</a></p>\n<ul>\n<li>サーバー<ul>\n<li>heroku</li>\n</ul>\n</li>\n<li>サーバーサイド<ul>\n<li>node</li>\n<li>express</li>\n<li>mongodb</li>\n</ul>\n</li>\n<li>フロントエンド<ul>\n<li>webpack</li>\n<li>React</li>\n<li>Postcss</li>\n</ul>\n</li>\n<li>使ってるサービス<ul>\n<li>Qiita</li>\n<li>Drophox paper</li>\n</ul>\n</li>\n</ul>\n<p>VPNにしようかなって思ってたけどHerokuを使うことにしました。\nAWSとかGCSとかも考えたのですが。お金の面とかも考えて。</p>\n<p>技術的なことは別の記事でしっかり書きたいと思います。</p>\n<p>これからなるべく、技術的な話とか、日常的な話とか書いていこうと思います。</p>\n","updated":1533609265,"tags":["日記"],"uuid":"RC6rl0B9DTYGH0whg7TCZ","title":"ブログを書くこと","created":1532997068,"userId":"develo0@gmail.com"}]}